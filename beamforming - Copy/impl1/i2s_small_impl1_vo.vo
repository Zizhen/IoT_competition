
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.8.0.115.3

// ldbanno -n Verilog -o i2s_small_impl1_vo.vo -w -neg -gui -msgset D:/UIUC/2017_Spring/ECE_396/IoT_competition/promote.xml i2s_small_impl1.ncd 
// Netlist created on Mon Mar 27 10:13:05 2017
// Netlist written on Mon Mar 27 10:13:30 2017
// Design is for device LCMXO3L-6900C
// Design is for package CABGA256
// Design is for performance grade 5

`timescale 1 ns / 1 ps

module top ( rst, i_sd, o_sck, o_ws, horizontal_out, mclk, i_sd2, o_ws2, 
             vertical_out, zcr_count_left, zcr_valid_left, ste_left, 
             ste_left_valid, subMean_left_out, subMean_left_valid, led_pattern, 
             beam_forming_valid, o_left_data2, o_right_data2, o_left_vld2, 
             o_right_vld2 );
  input  rst, i_sd, i_sd2;
  output o_sck, o_ws;
  output [15:0] horizontal_out;
  output mclk, o_ws2;
  output [15:0] vertical_out;
  output [5:0] zcr_count_left;
  output zcr_valid_left, ste_left, ste_left_valid;
  output [15:0] subMean_left_out;
  output subMean_left_valid;
  output [7:0] led_pattern;
  output beam_forming_valid;
  output [15:0] o_left_data2;
  output [15:0] o_right_data2;
  output o_left_vld2, o_right_vld2;
  wire   \o_left_data2_c[0] , o_ws_c, \o_right_data2_c[0] , 
         subMean_left_valid_c, fpga_clk, \subMean1/subMean_left_valid_cf , 
         un1_o_left_data2_1_cry_0, \subMean1/sumf[19] , \subMean1/sumf[18] , 
         \subMean1/sum[19] , \subMean1/sum[15] , \subMean1/un1_sum_0_cry_18 , 
         \subMean1/avg[11] , \subMean1/sumf[17] , \subMean1/sumf[16] , 
         \subMean1/sum[18] , \subMean1/sum[17] , \subMean1/un1_sum_0_cry_16 , 
         \subMean1/sumf[15] , \subMean1/un1_sum_74 , \subMean1/un1_sum_73_0 , 
         \subMean1/un1_sum_43 , \subMean1/sum[16] , 
         \subMean1/un1_sum_0_cry_14 , \subMean1/un1_sum_69 , 
         \subMean1/un1_sum_40 , \subMean1/un1_sum_68_0 , \subMean1/un1_sum_64 , 
         \subMean1/un1_sum_37 , \subMean1/un1_sum_63_0 , \subMean1/sum[14] , 
         \subMean1/sum[13] , \subMean1/un1_sum_0_cry_12 , \subMean1/sumf[13] , 
         \subMean1/sumf[14] , \subMean1/un1_sum_59 , \subMean1/un1_sum_34_0 , 
         \subMean1/un1_sum_58_0 , \subMean1/un1_sum_54 , \subMean1/un1_sum_31 , 
         \subMean1/un1_sum_53_0 , \subMean1/sum[12] , \subMean1/sum[11] , 
         \subMean1/un1_sum_0_cry_10 , \subMean1/sumf[11] , \subMean1/sumf[12] , 
         \subMean1/un1_sum_49 , \subMean1/un1_sum_48_0 , \subMean1/un1_sum_28 , 
         \subMean1/un1_sum_44 , \subMean1/un1_sum_43_0 , \subMean1/un1_sum_25 , 
         \subMean1/sum[10] , \subMean1/sum[9] , \subMean1/un1_sum_0_cry_8 , 
         \subMean1/sumf[9] , \subMean1/sumf[10] , \subMean1/un1_sum_39 , 
         \subMean1/un1_sum_38_0 , \subMean1/un1_sum_22 , \subMean1/un1_sum_34 , 
         \subMean1/un1_sum_33_0 , \subMean1/un1_sum_19_0 , \subMean1/sum[8] , 
         \subMean1/sum[7] , \subMean1/un1_sum_0_cry_6 , \subMean1/sumf[7] , 
         \subMean1/sumf[8] , \subMean1/un1_sum_29 , \subMean1/un1_sum_28_0 , 
         \subMean1/un1_sum_16 , \subMean1/un1_sum_24 , \subMean1/un1_sum_23_0 , 
         \subMean1/un1_sum_13 , \subMean1/sum[6] , \subMean1/sum[5] , 
         \subMean1/un1_sum_0_cry_4 , \subMean1/sumf[5] , \subMean1/sumf[6] , 
         \subMean1/un1_sum_19 , \subMean1/un1_sum_18_0 , \subMean1/un1_sum_10 , 
         \subMean1/un1_sum_14 , \subMean1/un1_sum_7 , \subMean1/un1_sum_13_0 , 
         \subMean1/sum[4] , \subMean1/sum[3] , \subMean1/un1_sum_0_cry_2 , 
         \subMean1/sumf[3] , \subMean1/sumf[4] , \subMean1/un1_sum_9 , 
         \subMean1/un1_sum_4_0 , \subMean1/un1_sum_8_0 , \subMean1/un1_sum_4 , 
         \subMean1/un1_sum_1 , \subMean1/un1_sum_3_0 , \subMean1/sum[2] , 
         \subMean1/sum[1] , \subMean1/un1_sum_0_cry_0 , \subMean1/sumf[1] , 
         \subMean1/sumf[2] , \subMean1/un2f[0] , \subMean1/un1_sum_0 , 
         \port1/i2s_rx_inst/right_data_reg_i[6] , 
         \port1/i2s_rx_inst/right_data_reg_i[5] , ws_reg_i_RNID2EK1, i_sys_rst, 
         mclk_c, \port1/i2s_rx_inst/right_data_reg_i[7] , \subMean1/avg_i[15] , 
         \subMean1/un2_subMean_out_cry_14 , un2_subMean_out_s_15_0_S0, 
         \subMean1/avg[6] , \subMean1/avg[7] , \subMean1/avg[14] , 
         \horizontal_out_c[14] , \horizontal_out_c[13] , \subMean1/avg[13] , 
         \port2.i2s_rx_inst.ws_reg_i , ws_i_RNI5U2R1, 
         \subMean1/un2_subMean_out_cry_12 , un2_subMean_out_cry_13_0_S0, 
         \port2/i2s_rx_inst/right_vld_i , un2_subMean_out_cry_13_0_S1, 
         \subMean1/avg[12] , \horizontal_out_c[12] , \horizontal_out_c[11] , 
         \port2/i2s_rx_inst/right_data_reg_i[8] , 
         \port2/i2s_rx_inst/right_data_reg_i[7] , 
         \subMean1/un2_subMean_out_cry_10 , un2_subMean_out_cry_11_0_S0, 
         un2_subMean_out_cry_11_0_S1, \port2/i2s_rx_inst/right_data_reg_i[9] , 
         \subMean1/avg[10] , \horizontal_out_c[10] , \subMean1/avg[9] , 
         \horizontal_out_c[9] , \subMean1/un2_subMean_out_cry_8 , 
         un2_subMean_out_cry_9_0_S0, \subMean1/avg[4] , 
         un2_subMean_out_cry_9_0_S1, \subMean1/avg[5] , \subMean1/avg[8] , 
         \horizontal_out_c[8] , \horizontal_out_c[7] , 
         \subMean1/un2_subMean_out_cry_6 , un2_subMean_out_cry_7_0_S0, 
         \subMean1/avg[2] , un2_subMean_out_cry_7_0_S1, \subMean1/avg[3] , 
         \horizontal_out_c[6] , \horizontal_out_c[5] , 
         \subMean1/un2_subMean_out_cry_4 , un2_subMean_out_cry_5_0_S0, 
         \subMean1/avg[15] , un2_subMean_out_cry_5_0_S1, \subMean1/avg[1] , 
         \horizontal_out_c[4] , \horizontal_out_c[3] , 
         \subMean1/un2_subMean_out_cry_2 , un2_subMean_out_cry_3_0_S0, 
         un2_subMean_out_cry_3_0_S1, \horizontal_out_c[2] , 
         \horizontal_out_c[1] , \r_reg_RNIOPPB1_0[1] , 
         \subMean1/un2_subMean_out_cry_0 , un2_subMean_out_cry_1_0_S0, 
         \port2/i2s_rx_inst/right_vld_reg_i , un2_subMean_out_cry_1_0_S1, 
         \horizontal_out_c[0] , \subMean1/avg[0] , 
         \port2/i2s_rx_inst/right_data_reg_i[6] , 
         \port2/i2s_rx_inst/right_data_reg_i[5] , \ste2.window_count[6] , 
         \ste2/window_count[5] , \ste2/un3_window_count_1[5] , 
         \ste2/un3_window_count_1_cry_4 , \ste2/un3_window_count_1_cry_5_0_S1 , 
         \ste2/window_count[4] , \ste2/window_count[3] , 
         \ste2/un3_window_count_1[4] , \ste2/un3_window_count_1[3] , 
         \ste2/un3_window_count_1_cry_2 , \ste2/window_count[2] , 
         \ste2/un3lto1 , \ste2/un3_window_count_1[2] , 
         \ste2/un3_window_count_1[1] , \ste2/un3_window_count_1_cry_0 , 
         \ste2/un3lto0 , \port1/i2s_rx_inst/right_data_reg_i[4] , 
         \port1/i2s_rx_inst/right_data_reg_i[3] , \zcr2.zcr_count_temp[5] , 
         \zcr2/N_772_i , \zcr2/zcr_count_temp_s[5] , \zcr2/zcr_count_tempe , 
         \zcr2/zcr_count_temp_cry[4] , \zcr2.zcr_count_temp[4] , 
         \zcr2.zcr_count_temp[3] , \zcr2/zcr_count_temp_s[4] , 
         \zcr2/zcr_count_temp_s[3] , \zcr2/zcr_count_temp_cry[2] , 
         \zcr2.zcr_count_temp[2] , \zcr2.zcr_count_temp[1] , 
         \zcr2/zcr_count_temp_s[2] , \zcr2/zcr_count_temp_s[1] , 
         \zcr2/zcr_count_temp_cry[0] , \zcr2.zcr_count_temp[0] , 
         \zcr2/zcr_count_temp_s[0] , \f1/counter[6] , \f1/counter[5] , 
         \f1/un1_counter[6] , \f1/un1_counter[5] , \f1/N_11 , 
         \f1/un1_counter_cry_4 , \f1/counter[4] , \f1/counter[3] , 
         \f1/un1_counter[4] , \f1/un1_counter[3] , \f1/un1_counter_cry_2 , 
         \f1/counter[2] , \f1/counter[1] , \f1/un1_counter[2] , 
         \f1/un1_counter[1] , \f1/un1_counter_cry_0 , \f1/counter[0] , 
         \f1/state , \f1/un1_counter[0] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[15] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_s_15_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_14 , 
         \o_right_data2_c[15] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[14] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[13] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_12 , 
         \o_right_data2_c[13] , \o_right_data2_c[14] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[12] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[11] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_10 , 
         \o_right_data2_c[11] , \o_right_data2_c[12] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[10] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[9] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_8 , 
         \o_right_data2_c[9] , \o_right_data2_c[10] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[8] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[7] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_6 , 
         \o_right_data2_c[7] , \o_right_data2_c[8] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[6] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[5] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_4 , 
         \o_right_data2_c[5] , \o_right_data2_c[6] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[4] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[3] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_2 , 
         \o_right_data2_c[3] , \o_right_data2_c[4] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[2] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[1] , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0_S1 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0_S0 , 
         \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0 , 
         \o_right_data2_c[1] , \o_right_data2_c[2] , 
         \port2/i2s_rx_inst/right_data_ones_compl_i[0] , 
         \port1/i2s_rx_inst/right_data_reg_i[0] , 
         \port1/i2s_rx_inst/right_data_reg_i[14] , 
         \port1/i2s_rx_inst/right_data_reg_i[15] , 
         \port1/i2s_rx_inst/right_data_reg_i[1] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[15] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_s_15_0_S0 , 
         \port2/i2s_rx_inst/d1_right_vld , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_14 , 
         \o_left_data2_c[15] , o_right_vld2_c, 
         \port2/i2s_rx_inst/left_data_ones_compl_i[14] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[13] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_12 , 
         \o_left_data2_c[13] , \o_left_data2_c[14] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[12] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[11] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_10 , 
         \o_left_data2_c[11] , \o_left_data2_c[12] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[10] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[9] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_8 , 
         \o_left_data2_c[9] , \o_left_data2_c[10] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[8] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[7] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_6 , 
         \o_left_data2_c[7] , \o_left_data2_c[8] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[6] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[5] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_4 , 
         \o_left_data2_c[5] , \o_left_data2_c[6] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[4] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[3] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_2 , 
         \o_left_data2_c[3] , \o_left_data2_c[4] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[2] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[1] , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0_S1 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0_S0 , 
         \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_0 , 
         \o_left_data2_c[1] , \o_left_data2_c[2] , 
         \port2/i2s_rx_inst/left_data_ones_compl_i[0] , 
         \port1/i2s_rx_inst/right_data_reg_i[13] , 
         \port1/i2s_rx_inst/right_data_reg_i[12] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[15] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[15] , 
         \port1/i2s_rx_inst/left_vld_i , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_14 , 
         \port1/i2s_rx_inst/o_right_data[15] , 
         \port1/i2s_rx_inst/left_vld_reg_i , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[14] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[13] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[14] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[13] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_12 , 
         \o_right_data[13] , \o_right_data[14] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[12] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[11] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[12] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[11] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_10 , 
         \o_right_data[11] , \o_right_data[12] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[10] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[9] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[10] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[9] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_8 , 
         \o_right_data[9] , \o_right_data[10] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[8] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[7] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[8] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[7] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_6 , 
         \o_right_data[7] , \o_right_data[8] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[6] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[5] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[6] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[5] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_4 , 
         \o_right_data[5] , \o_right_data[6] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[4] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[3] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[4] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[3] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_2 , 
         \o_right_data[3] , \o_right_data[4] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[2] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[1] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[2] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i[1] , 
         \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0 , 
         \o_right_data[1] , \o_right_data[2] , 
         \port1/i2s_rx_inst/right_data_ones_compl_i[0] , 
         \port1/i2s_rx_inst/right_data_reg_i[9] , \port1.i2s_rx_inst.sd_i , 
         \port1/i2s_rx_inst/right_data_reg_i[10] , \o_right_data_i[15] , 
         un1_fifo_in1_cry_14, \un1_fifo_in1[15] , 
         \subMean1/horizontal_out_cf[13] , \subMean1/horizontal_out_cf[14] , 
         un1_fifo_in1_cry_12, \un1_fifo_in1[13] , 
         \subMean1/horizontal_out_cf[1] , \un1_fifo_in1[14] , 
         \subMean1/horizontal_out_cf[2] , \subMean1/Full , un1_fifo_in1_cry_10, 
         \un1_fifo_in1[11] , \subMean1/r1/temp , \un1_fifo_in1[12] , 
         \subMean1/horizontal_out_cf[0] , un1_fifo_in1_cry_8, 
         \un1_fifo_in1[9] , \subMean1/horizontal_out_cf[11] , 
         \un1_fifo_in1[10] , \subMean1/horizontal_out_cf[12] , 
         un1_fifo_in1_cry_6, \un1_fifo_in1[7] , 
         \subMean1/horizontal_out_cf[9] , \un1_fifo_in1[8] , 
         \subMean1/horizontal_out_cf[10] , un1_fifo_in1_cry_4, 
         \un1_fifo_in1[5] , \subMean1/horizontal_out_cf[7] , \un1_fifo_in1[6] , 
         \subMean1/horizontal_out_cf[8] , un1_fifo_in1_cry_2, 
         \un1_fifo_in1[3] , \subMean1/horizontal_out_cf[5] , \un1_fifo_in1[4] , 
         \subMean1/horizontal_out_cf[6] , un1_fifo_in1_cry_0, 
         \un1_fifo_in1[1] , \subMean1/horizontal_out_cf[3] , \un1_fifo_in1[2] , 
         \subMean1/horizontal_out_cf[4] , un1_fifo_in1, 
         un1_o_left_data2_1_cry_14, un1_o_left_data2_1_s_15_0_S0, 
         un1_o_left_data2_1_cry_12, un1_o_left_data2_1_cry_13_0_S0, 
         un1_o_left_data2_1_cry_13_0_S1, un1_o_left_data2_1_cry_10, 
         un1_o_left_data2_1_cry_11_0_S0, un1_o_left_data2_1_cry_11_0_S1, 
         un1_o_left_data2_1_cry_8, un1_o_left_data2_1_cry_9_0_S0, 
         un1_o_left_data2_1_cry_9_0_S1, un1_o_left_data2_1_cry_6, 
         un1_o_left_data2_1_cry_7_0_S0, un1_o_left_data2_1_cry_7_0_S1, 
         un1_o_left_data2_1_cry_4, un1_o_left_data2_1_cry_5_0_S0, 
         un1_o_left_data2_1_cry_5_0_S1, un1_o_left_data2_1_cry_2, 
         un1_o_left_data2_1_cry_3_0_S0, un1_o_left_data2_1_cry_3_0_S1, 
         un1_o_left_data2_1_cry_1_0_S0, un1_o_left_data2_1_cry_1_0_S1, 
         \div8.r_reg[0] , \div8.r_reg[1] , \div8/r_nxt[1] , \div8/r_reg_i[0] , 
         rst_c, lock, almost_full, \f1/N_330 , \f1/N_39_i , 
         \port2/i2s_rx_inst/left_data_ones_compl_i_i[0] , 
         \port1/i2s_rx_inst/ws_i , 
         \port2/i2s_rx_inst/right_data_ones_compl_i_i[0] , o_sck_c, 
         \div8/o_sck_0 , \port1/o_ws_0_RNO , \port1/o_ws_0 , 
         \vertical_port/un1_o_left_data2_1_i[0] , \port1/count[0] , 
         \port1/count_RNO[0] , \port1/count[1] , \port1/count[2] , 
         \port1/count_RNO[2] , \port1/count_RNO[1] , \r_reg_RNIOPPB1[1] , 
         \port1/count[3] , \port1/count_RNO[3] , \port1/count12_c2 , 
         \port1/i2s_rx_inst/left_vld , \port1/i2s_rx_inst/d1_left_vld , 
         \port1/i2s_rx_inst/ws_reg_i_i , 
         \port1/i2s_rx_inst/right_data_reg_i_i[1] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[0] , 
         \port1/i2s_rx_inst/right_data_reg_i[2] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[3] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[2] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[5] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[4] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[7] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[6] , 
         \port1/i2s_rx_inst/right_data_reg_i[8] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[9] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[8] , 
         \port1/i2s_rx_inst/right_data_reg_i[11] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[11] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[10] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[13] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[12] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[15] , 
         \port1/i2s_rx_inst/right_data_reg_i_i[14] , 
         \port2/i2s_rx_inst/right_vld , \port2/i2s_rx_inst/left_data_reg_i[1] , 
         \port2/i2s_rx_inst/left_data_reg_i[0] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[1] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[0] , 
         \port2/i2s_rx_inst/left_data_reg_i[3] , 
         \port2/i2s_rx_inst/left_data_reg_i[2] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[3] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[2] , 
         \port2/i2s_rx_inst/left_data_reg_i[5] , 
         \port2/i2s_rx_inst/left_data_reg_i[4] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[5] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[4] , 
         \port2/i2s_rx_inst/left_data_reg_i[7] , 
         \port2/i2s_rx_inst/left_data_reg_i[6] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[7] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[6] , 
         \port2/i2s_rx_inst/left_data_reg_i[9] , 
         \port2/i2s_rx_inst/left_data_reg_i[8] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[9] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[8] , 
         \port2/i2s_rx_inst/left_data_reg_i[11] , 
         \port2/i2s_rx_inst/left_data_reg_i[10] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[11] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[10] , 
         \port2/i2s_rx_inst/left_data_reg_i[13] , 
         \port2/i2s_rx_inst/left_data_reg_i[12] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[13] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[12] , 
         \port2/i2s_rx_inst/left_data_reg_i[15] , 
         \port2/i2s_rx_inst/left_data_reg_i[14] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[15] , 
         \port2/i2s_rx_inst/left_data_reg_i_i[14] , 
         \port2/i2s_rx_inst/right_data_reg_i[1] , 
         \port2/i2s_rx_inst/right_data_reg_i[0] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[1] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[0] , 
         \port2/i2s_rx_inst/right_data_reg_i[3] , 
         \port2/i2s_rx_inst/right_data_reg_i[2] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[3] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[2] , 
         \port2/i2s_rx_inst/right_data_reg_i[4] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[5] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[4] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[7] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[6] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[9] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[8] , 
         \port2/i2s_rx_inst/right_data_reg_i[11] , 
         \port2/i2s_rx_inst/right_data_reg_i[10] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[11] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[10] , 
         \port2/i2s_rx_inst/right_data_reg_i[13] , 
         \port2/i2s_rx_inst/right_data_reg_i[12] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[13] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[12] , 
         \port2/i2s_rx_inst/right_data_reg_i[15] , 
         \port2/i2s_rx_inst/right_data_reg_i[14] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[15] , 
         \port2/i2s_rx_inst/right_data_reg_i_i[14] , \ste2/window_count_3[6] , 
         \ste2/sq1/qdataout0_ffin , \ste2/sq1/mem_0_0_1_f5b , 
         \ste2/sq1/mem_0_0_0_f5a , \ste2/square[0] , \ste2/N_9_4 , 
         \ste2/sum_3_0_550_i_a3_0_a2_0 , \ste2/sum[0] , \ste2/N_284_i , 
         \ste2/N_9_i , \ste2/window_count_3[0] , \ste2.ste_3[0] , 
         \subMean1/sumf[0] , \subMean1/sum[0] , \subMean1/fifo_out[1] , 
         \subMean1/fifo_out[0] , \subMean1/un2[1] , \subMean1/un2[0] , 
         \subMean1/un2f[1] , \subMean1/fifo_out[3] , \subMean1/fifo_out[2] , 
         \subMean1/un2[3] , \subMean1/un2[2] , \subMean1/un2f[2] , 
         \subMean1/un2f[3] , \subMean1/fifo_out[5] , \subMean1/fifo_out[4] , 
         \subMean1/un2[5] , \subMean1/un2[4] , \subMean1/un2f[4] , 
         \subMean1/un2f[5] , \subMean1/fifo_out[7] , \subMean1/fifo_out[6] , 
         \subMean1/un2[7] , \subMean1/un2[6] , \subMean1/un2f[6] , 
         \subMean1/un2f[7] , \subMean1/fifo_out[9] , \subMean1/fifo_out[8] , 
         \subMean1/un2[9] , \subMean1/un2[8] , \subMean1/un2f[8] , 
         \subMean1/un2f[9] , \subMean1/fifo_out[11] , \subMean1/fifo_out[10] , 
         \subMean1/un2[11] , \subMean1/un2[10] , \subMean1/un2f[10] , 
         \subMean1/un2f[11] , \subMean1/fifo_out[13] , \subMean1/fifo_out[12] , 
         \subMean1/un2[13] , \subMean1/un2[12] , \subMean1/un2f[12] , 
         \subMean1/un2f[13] , \subMean1/fifo_out[14] , \subMean1/un2[14] , 
         \subMean1/un2f[14] , \subMean1/r1/N_2145_0 , 
         \port1/i2s_rx_inst/right_data_ones_compl_i_i[0] , o_left_vld, 
         \zcr2/window_count[2] , \zcr2/window_count[3] , \zcr2/N_447 , 
         \zcr2/N_293 , \zcr2/N_446 , \zcr2.window_count[6] , 
         \zcr2/window_count_RNO[6] , \zcr2/N_320 , \zcr2/current_2_62_i_18 , 
         \zcr2/un3lto0 , \zcr2/un3lto1 , \zcr2/current_2_62_i_19 , 
         \zcr2/N_14_i_1 , \zcr2/N_321 , \zcr2/N_14_i , \zcr2/N_291_i , 
         \zcr2/current , \zcr2/un72_not_previous_62_i_18[0] , 
         \zcr2/un72_not_previous_62_i_20[0] , 
         \zcr2/un72_not_previous_62_i_19[0] , \zcr2/N_16 , \zcr2/not_previous , 
         \zcr2/un3_window_count_1[1] , \zcr2/window_count_3[0] , 
         \zcr2/un3_window_count_1[3] , \zcr2/un3_window_count_1[2] , 
         \zcr2/un3_window_count_1_c3 , \zcr2/window_count[4] , 
         \zcr2/window_count[5] , \zcr2/un3_window_count_1[5] , 
         \zcr2/un3_window_count_1[4] , \horizontal_out_c[15] , 
         \zcr2/zcr_window[1]_4[15] , \zcr2/zcr_window[0]_RNO[15] , 
         \zcr2/zcr_window[0][15] , \zcr2/N_42 , GND, \zcr2/zcr_window[44][15] , 
         \zcr2/N_40 , \horizontal_port/un1_fifo_in1_i[1] , 
         \zcr2/zcr_window[45][15] , \zcr2/N_55 , 
         \horizontal_port/un1_fifo_in1_i[3] , \zcr2/zcr_window[46][15] , 
         \horizontal_port/un1_fifo_in1_i[2] , \zcr2/N_53 , 
         \horizontal_port/un1_fifo_in1_i[5] , \zcr2/zcr_window[47][15] , 
         \horizontal_port/un1_fifo_in1_i[4] , \zcr2/N_38 , 
         \horizontal_port/un1_fifo_in1_i[7] , \zcr2/zcr_window[48][15] , 
         \horizontal_port/un1_fifo_in1_i[6] , \zcr2/N_35 , 
         \horizontal_port/un1_fifo_in1_i[9] , \zcr2/zcr_window[49][15] , 
         \horizontal_port/un1_fifo_in1_i[8] , \zcr2/N_80 , 
         \horizontal_port/un1_fifo_in1_i[11] , \zcr2/zcr_window[4][15] , 
         \horizontal_port/un1_fifo_in1_i[10] , \zcr2/N_33 , 
         \horizontal_port/un1_fifo_in1_i[13] , \zcr2/zcr_window[50][15] , 
         \horizontal_port/un1_fifo_in1_i[12] , \zcr2/N_51 , 
         \horizontal_port/un1_fifo_in1_i[15] , \zcr2/zcr_window[51][15] , 
         \horizontal_port/un1_fifo_in1_i[14] , \zcr2/N_31 , 
         \vertical_port/un1_o_left_data2_1_i[15] , \zcr2/zcr_window[52][15] , 
         \f1/state_3_i_0_a2_0_3 , \zcr2/N_29 , 
         \vertical_port/un1_o_left_data2_1_i[13] , \zcr2/zcr_window[53][15] , 
         \vertical_port/un1_o_left_data2_1_i[14] , \zcr2/N_49 , 
         \vertical_port/un1_o_left_data2_1_i[11] , \zcr2/zcr_window[54][15] , 
         \vertical_port/un1_o_left_data2_1_i[12] , \zcr2/N_47 , 
         \vertical_port/un1_o_left_data2_1_i[9] , \zcr2/zcr_window[55][15] , 
         \vertical_port/un1_o_left_data2_1_i[10] , \zcr2/N_26 , 
         \vertical_port/un1_o_left_data2_1_i[7] , \zcr2/zcr_window[56][15] , 
         \vertical_port/un1_o_left_data2_1_i[8] , \zcr2/N_45 , 
         \vertical_port/un1_o_left_data2_1_i[5] , \zcr2/zcr_window[57][15] , 
         \vertical_port/un1_o_left_data2_1_i[6] , \zcr2/N_43 , 
         \vertical_port/un1_o_left_data2_1_i[3] , \zcr2/zcr_window[58][15] , 
         \vertical_port/un1_o_left_data2_1_i[4] , \zcr2/N_41 , 
         \vertical_port/un1_o_left_data2_1_i[1] , \zcr2/zcr_window[59][15] , 
         \vertical_port/un1_o_left_data2_1_i[2] , \zcr2/zcr_window[26][15] , 
         \zcr2/zcr_window[18][15] , \zcr2/N_78 , \zcr2/zcr_window[5][15] , 
         \zcr2/N_290 , \zcr2/N_24 , \zcr2/zcr_window[60][15] , \zcr2/N_22 , 
         \zcr2/zcr_window[61][15] , \zcr2/N_39 , \zcr2/zcr_window[62][15] , 
         \zcr2/zcr_window[63]_0_sqmuxa , \zcr2/zcr_window[63][15] , 
         \zcr2/N_97 , \zcr2/zcr_window[6][15] , \zcr2/N_95 , 
         \zcr2/zcr_window[7][15] , \zcr2/N_76 , \zcr2/zcr_window[8][15] , 
         \zcr2/N_74 , \subMean1.un2_subMean_out_axb_0_i , 
         \zcr2/zcr_window[9][15] , \zcr2/zcr_window[22][15] , 
         \zcr2/zcr_window[38][15] , \zcr2/N_485 , \zcr2/zcr_window[43][15] , 
         \zcr2/zcr_window[29][15] , \zcr2/zcr_window[27][15] , 
         \zcr2/current_2_62_i_o2_4_1_tz , \zcr2/current_2_62_i_o2_4_0_tz , 
         wr_en2, \zcr2/zcr_window[40][15] , \zcr2/N_524 , \zcr2/N_310 , 
         \zcr2/N_522 , \zcr2/zcr_window[28][15] , \zcr2/zcr_window[16][15] , 
         \zcr2/zcr_window[24][15] , \zcr2/N_309 , \zcr2/zcr_window[20][15] , 
         \zcr2/N_466 , \zcr2/N_308 , \zcr2/zcr_window[36][15] , 
         \zcr2/zcr_window[32][15] , \zcr2/N_481 , \zcr2/N_307 , \zcr2/N_334 , 
         \zcr2/N_543 , \zcr2/current_2_62_i_7_1 , \zcr2/N_333_1 , \zcr2/N_489 , 
         \zcr2/current_2_62_i_7 , \zcr2/N_456 , \zcr2/N_292 , \zcr2/N_46 , 
         \zcr2/current_2_62_i_a2_15_0 , \zcr2/N_538 , 
         \zcr2/current_2_62_i_a2_14_0 , \zcr2/current_2_62_i_1 , \zcr2/N_539 , 
         \zcr2/N_537 , \zcr2/N_343 , \zcr2/N_462 , \zcr2/N_60 , \zcr2/N_458 , 
         \zcr2/N_91 , \zcr2/N_275 , \zcr2/N_541 , \zcr2/N_370 , \zcr2/N_464 , 
         \zcr2/N_79 , \zcr2/zcr_window[11][15] , \zcr2/N_460 , 
         \zcr2/zcr_window[13][15] , \zcr2/N_532 , 
         \zcr2/current_2_62_i_a2_18_0 , \zcr2/N_454 , 
         \zcr2/un72_not_previous_62_i_a2_11_0[0] , 
         \zcr2/un72_not_previous_62_i_6[0] , \zcr2/zcr_window[34][15] , 
         \zcr2/zcr_window[2][15] , rd_en1, \zcr2/N_371 , \zcr2/N_353 , 
         \zcr2/N_544 , \zcr2/current_2_62_i_12 , \zcr2/zcr_window[1][15] , 
         \zcr2/zcr_window[30][15] , \zcr2/current_2_62_i_17 , \zcr2/N_70 , 
         \zcr2/N_66 , \zcr2/N_540 , \zcr2/N_103 , \zcr2/N_52 , \zcr2/N_295 , 
         \zcr2/N_448 , \zcr2/N_58 , \zcr2/N_455 , \zcr2/N_89 , 
         \zcr2/zcr_window[18]_RNO[15] , \zcr2/zcr_window[14][15] , 
         \zcr2/N_463 , \zcr2/N_64 , \zcr2/N_67 , \zcr2/N_54 , \zcr2/N_65 , 
         \zcr2/zcr_window[35][15] , \zcr2/N_542 , \zcr2/N_50 , \zcr2/N_296 , 
         \zcr2/N_409 , \zcr2/zcr_count_temp16_0_0_a2_i , \zcr2/N_61 , 
         \zcr2/zcr_window[39][15] , \zcr2/N_549 , \zcr2/N_73 , \zcr2/N_461 , 
         \zcr2/N_69 , \zcr2/zcr_window[31][15] , 
         \zcr2/un72_not_previous_62_i_9[0] , \zcr2/N_378 , 
         \zcr2/un72_not_previous_62_i_8[0] , 
         \zcr2/un72_not_previous_62_i_7[0] , \zcr2/N_376 , 
         \zcr2/un72_not_previous_62_i_12[0] , 
         \zcr2/un72_not_previous_62_i_17[0] , \zcr2/N_336 , 
         \zcr2/current_2_62_i_14 , \zcr2/current_2_62_i_8 , 
         un2_i_sys_rst_i_i_o2, \zcr2/un72_not_previous_62_i_2[0] , 
         \zcr2/current_2_62_i_a2_16_0 , \zcr2/un72_not_previous_62_i_11[0] , 
         \zcr2/un72_not_previous_62_i_10[0] , \zcr2/current_2_62_i_a2_12_0 , 
         \zcr2/current_2_62_i_3 , \zcr2/current_2_62_i_10 , 
         \zcr2/current_2_62_i_11 , \zcr2/N_457 , \zcr2/current_2_62_i_a2_10_0 , 
         \zcr2/un72_not_previous_62_i_5[0] , \zcr2/current_2_62_i_a2_8_0 , 
         \zcr2/N_340 , \zcr2/current_2_62_i_5 , \zcr2/current_2_62_i_o2_4_4 , 
         \zcr2/N_536 , \zcr2/N_531 , \zcr2/N_488 , \zcr2/N_357 , \zcr2/N_358 , 
         \zcr2/current_2_62_i_a2_3_0 , \zcr2/N_364 , 
         \zcr2/un72_not_previous_62_i_1[0] , \zcr2/current_2_62_i_a2_17_0 , 
         \zcr2/current_2_62_i_a2_13_0 , \zcr2/current_2_62_i_6 , 
         \zcr2/current_2_62_i_o2_3_0 , \zcr2/N_459 , \zcr2/zcr_window[23][15] , 
         \zcr2/zcr_window[15][15] , \zcr2/zcr_window[19][15] , 
         \zcr2/zcr_window[3][15] , \zcr2/zcr_window[25][15] , 
         \zcr2/zcr_window[17][15] , \zcr2/zcr_window[33][15] , 
         \zcr2/zcr_window[37][15] , \f1/N_545 , i_sys_rst_i, \zcr2/N_57 , 
         \zcr2/N_72 , \zcr2/N_68 , \zcr2/zcr_window[12][15] , \zcr2/N_71 , 
         \zcr2/N_87 , \zcr2/zcr_window[19]_RNO[15] , \zcr2/N_48 , \zcr2/N_93 , 
         \zcr2/zcr_window[10][15] , \zcr2/N_75 , \zcr2/N_44 , \zcr2/N_81 , 
         \zcr2/N_99 , \zcr2/N_63 , \zcr2/N_62 , \zcr2/N_59 , \zcr2/N_77 , 
         \zcr2/N_56 , \port2/i2s_rx_inst/left_data_reg_i_cnv[0] , 
         \port2.i2s_rx_inst.sd_i , \zcr2.zcr_count_1_sqmuxa , un2_i_sys_rst_i, 
         \zcr2/zcr_window[21][15] , \zcr2/N_101 , \zcr2/zcr_window[41][15] , 
         \zcr2/zcr_window[42][15] , \subMean_left_out_c[15] , 
         \subMean_left_out_c[14] , \subMean_left_out_c[13] , 
         \subMean_left_out_c[12] , \subMean_left_out_c[11] , 
         \subMean_left_out_c[10] , \subMean_left_out_c[9] , 
         \subMean_left_out_c[8] , \subMean_left_out_c[7] , 
         \subMean_left_out_c[6] , \subMean_left_out_c[5] , 
         \subMean_left_out_c[4] , \subMean_left_out_c[3] , 
         \subMean_left_out_c[2] , \subMean_left_out_c[1] , 
         \subMean_left_out_c[0] , ste_left_valid_c, ste_left_c, 
         zcr_valid_left_c, \zcr_count_left_c[5] , \zcr_count_left_c[4] , 
         \zcr_count_left_c[3] , \zcr_count_left_c[2] , \zcr_count_left_c[1] , 
         \zcr_count_left_c[0] , \vertical_out_c[15] , \vertical_out_c[14] , 
         \vertical_out_c[13] , \vertical_out_c[12] , \vertical_out_c[11] , 
         \vertical_out_c[10] , \vertical_out_c[9] , \vertical_out_c[8] , 
         \vertical_out_c[7] , \vertical_out_c[6] , \vertical_out_c[5] , 
         \vertical_out_c[4] , \vertical_out_c[3] , \vertical_out_c[2] , 
         \vertical_out_c[1] , \vertical_out_c[0] , i_sd2_c, i_sd_c, osc_clk, 
         \subMean1/f1/Empty , \vertical_port/Full , \vertical_port/Empty , 
         \horizontal_port/Full , \horizontal_port/Empty , VCCI;

  SLICE_0 SLICE_0( .C1(\o_left_data2_c[0] ), .B1(o_ws_c), 
    .A1(\o_right_data2_c[0] ), .M0(subMean_left_valid_c), .CLK(fpga_clk), 
    .Q0(\subMean1/subMean_left_valid_cf ), .FCO(un1_o_left_data2_1_cry_0));
  subMean1_SLICE_1 \subMean1/SLICE_1 ( .C0(\subMean1/sumf[19] ), 
    .B0(\subMean1/subMean_left_valid_cf ), .A0(\subMean1/sumf[18] ), 
    .DI0(\subMean1/sum[19] ), .M1(\subMean1/sum[15] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un1_sum_0_cry_18 ), .F0(\subMean1/sum[19] ), 
    .Q0(\subMean1/sumf[19] ), .Q1(\subMean1/avg[11] ));
  subMean1_SLICE_2 \subMean1/SLICE_2 ( .C1(\subMean1/sumf[18] ), 
    .B1(\subMean1/subMean_left_valid_cf ), .A1(\subMean1/sumf[17] ), 
    .C0(\subMean1/sumf[17] ), .B0(\subMean1/subMean_left_valid_cf ), 
    .A0(\subMean1/sumf[16] ), .DI1(\subMean1/sum[18] ), 
    .DI0(\subMean1/sum[17] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un1_sum_0_cry_16 ), .F0(\subMean1/sum[17] ), 
    .Q0(\subMean1/sumf[17] ), .F1(\subMean1/sum[18] ), 
    .Q1(\subMean1/sumf[18] ), .FCO(\subMean1/un1_sum_0_cry_18 ));
  subMean1_SLICE_3 \subMean1/SLICE_3 ( .C1(\subMean1/sumf[16] ), 
    .B1(\subMean1/subMean_left_valid_cf ), .A1(\subMean1/sumf[15] ), 
    .C0(\subMean1/un1_sum_74 ), .B0(\subMean1/un1_sum_73_0 ), 
    .A0(\subMean1/un1_sum_43 ), .DI1(\subMean1/sum[16] ), 
    .DI0(\subMean1/sum[15] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un1_sum_0_cry_14 ), .F0(\subMean1/sum[15] ), 
    .Q0(\subMean1/sumf[15] ), .F1(\subMean1/sum[16] ), 
    .Q1(\subMean1/sumf[16] ), .FCO(\subMean1/un1_sum_0_cry_16 ));
  subMean1_SLICE_4 \subMean1/SLICE_4 ( .C1(\subMean1/un1_sum_69 ), 
    .B1(\subMean1/un1_sum_40 ), .A1(\subMean1/un1_sum_68_0 ), 
    .C0(\subMean1/un1_sum_64 ), .B0(\subMean1/un1_sum_37 ), 
    .A0(\subMean1/un1_sum_63_0 ), .DI1(\subMean1/sum[14] ), 
    .DI0(\subMean1/sum[13] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un1_sum_0_cry_12 ), .F0(\subMean1/sum[13] ), 
    .Q0(\subMean1/sumf[13] ), .F1(\subMean1/sum[14] ), 
    .Q1(\subMean1/sumf[14] ), .FCO(\subMean1/un1_sum_0_cry_14 ));
  subMean1_SLICE_5 \subMean1/SLICE_5 ( .C1(\subMean1/un1_sum_59 ), 
    .B1(\subMean1/un1_sum_34_0 ), .A1(\subMean1/un1_sum_58_0 ), 
    .C0(\subMean1/un1_sum_54 ), .B0(\subMean1/un1_sum_31 ), 
    .A0(\subMean1/un1_sum_53_0 ), .DI1(\subMean1/sum[12] ), 
    .DI0(\subMean1/sum[11] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un1_sum_0_cry_10 ), .F0(\subMean1/sum[11] ), 
    .Q0(\subMean1/sumf[11] ), .F1(\subMean1/sum[12] ), 
    .Q1(\subMean1/sumf[12] ), .FCO(\subMean1/un1_sum_0_cry_12 ));
  subMean1_SLICE_6 \subMean1/SLICE_6 ( .C1(\subMean1/un1_sum_49 ), 
    .B1(\subMean1/un1_sum_48_0 ), .A1(\subMean1/un1_sum_28 ), 
    .C0(\subMean1/un1_sum_44 ), .B0(\subMean1/un1_sum_43_0 ), 
    .A0(\subMean1/un1_sum_25 ), .DI1(\subMean1/sum[10] ), 
    .DI0(\subMean1/sum[9] ), .CLK(fpga_clk), .FCI(\subMean1/un1_sum_0_cry_8 ), 
    .F0(\subMean1/sum[9] ), .Q0(\subMean1/sumf[9] ), .F1(\subMean1/sum[10] ), 
    .Q1(\subMean1/sumf[10] ), .FCO(\subMean1/un1_sum_0_cry_10 ));
  subMean1_SLICE_7 \subMean1/SLICE_7 ( .C1(\subMean1/un1_sum_39 ), 
    .B1(\subMean1/un1_sum_38_0 ), .A1(\subMean1/un1_sum_22 ), 
    .C0(\subMean1/un1_sum_34 ), .B0(\subMean1/un1_sum_33_0 ), 
    .A0(\subMean1/un1_sum_19_0 ), .DI1(\subMean1/sum[8] ), 
    .DI0(\subMean1/sum[7] ), .CLK(fpga_clk), .FCI(\subMean1/un1_sum_0_cry_6 ), 
    .F0(\subMean1/sum[7] ), .Q0(\subMean1/sumf[7] ), .F1(\subMean1/sum[8] ), 
    .Q1(\subMean1/sumf[8] ), .FCO(\subMean1/un1_sum_0_cry_8 ));
  subMean1_SLICE_8 \subMean1/SLICE_8 ( .C1(\subMean1/un1_sum_29 ), 
    .B1(\subMean1/un1_sum_28_0 ), .A1(\subMean1/un1_sum_16 ), 
    .C0(\subMean1/un1_sum_24 ), .B0(\subMean1/un1_sum_23_0 ), 
    .A0(\subMean1/un1_sum_13 ), .DI1(\subMean1/sum[6] ), 
    .DI0(\subMean1/sum[5] ), .CLK(fpga_clk), .FCI(\subMean1/un1_sum_0_cry_4 ), 
    .F0(\subMean1/sum[5] ), .Q0(\subMean1/sumf[5] ), .F1(\subMean1/sum[6] ), 
    .Q1(\subMean1/sumf[6] ), .FCO(\subMean1/un1_sum_0_cry_6 ));
  subMean1_SLICE_9 \subMean1/SLICE_9 ( .C1(\subMean1/un1_sum_19 ), 
    .B1(\subMean1/un1_sum_18_0 ), .A1(\subMean1/un1_sum_10 ), 
    .C0(\subMean1/un1_sum_14 ), .B0(\subMean1/un1_sum_7 ), 
    .A0(\subMean1/un1_sum_13_0 ), .DI1(\subMean1/sum[4] ), 
    .DI0(\subMean1/sum[3] ), .CLK(fpga_clk), .FCI(\subMean1/un1_sum_0_cry_2 ), 
    .F0(\subMean1/sum[3] ), .Q0(\subMean1/sumf[3] ), .F1(\subMean1/sum[4] ), 
    .Q1(\subMean1/sumf[4] ), .FCO(\subMean1/un1_sum_0_cry_4 ));
  subMean1_SLICE_10 \subMean1/SLICE_10 ( .C1(\subMean1/un1_sum_9 ), 
    .B1(\subMean1/un1_sum_4_0 ), .A1(\subMean1/un1_sum_8_0 ), 
    .C0(\subMean1/un1_sum_4 ), .B0(\subMean1/un1_sum_1 ), 
    .A0(\subMean1/un1_sum_3_0 ), .DI1(\subMean1/sum[2] ), 
    .DI0(\subMean1/sum[1] ), .CLK(fpga_clk), .FCI(\subMean1/un1_sum_0_cry_0 ), 
    .F0(\subMean1/sum[1] ), .Q0(\subMean1/sumf[1] ), .F1(\subMean1/sum[2] ), 
    .Q1(\subMean1/sumf[2] ), .FCO(\subMean1/un1_sum_0_cry_2 ));
  SLICE_11 SLICE_11( .C1(\subMean1/un2f[0] ), .B1(\subMean1/un1_sum_0 ), 
    .A1(\subMean1/subMean_left_valid_cf ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[6] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[5] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[6] ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[7] ), 
    .FCO(\subMean1/un1_sum_0_cry_0 ));
  subMean1_SLICE_12 \subMean1/SLICE_12 ( .B0(\subMean1/avg_i[15] ), 
    .M1(\subMean1/sum[11] ), .M0(\subMean1/sum[10] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un2_subMean_out_cry_14 ), .F0(un2_subMean_out_s_15_0_S0), 
    .Q0(\subMean1/avg[6] ), .Q1(\subMean1/avg[7] ));
  SLICE_13 SLICE_13( .B1(\subMean1/avg[14] ), .A1(\horizontal_out_c[14] ), 
    .B0(\horizontal_out_c[13] ), .A0(\subMean1/avg[13] ), 
    .M0(\port2.i2s_rx_inst.ws_reg_i ), .CE(ws_i_RNI5U2R1), .LSR(i_sys_rst), 
    .CLK(mclk_c), .FCI(\subMean1/un2_subMean_out_cry_12 ), 
    .F0(un2_subMean_out_cry_13_0_S0), .Q0(\port2/i2s_rx_inst/right_vld_i ), 
    .F1(un2_subMean_out_cry_13_0_S1), .FCO(\subMean1/un2_subMean_out_cry_14 ));
  SLICE_14 SLICE_14( .B1(\subMean1/avg[12] ), .A1(\horizontal_out_c[12] ), 
    .B0(\horizontal_out_c[11] ), .A0(\subMean1/avg[11] ), 
    .M1(\port2/i2s_rx_inst/right_data_reg_i[8] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[7] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .FCI(\subMean1/un2_subMean_out_cry_10 ), 
    .F0(un2_subMean_out_cry_11_0_S0), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[8] ), 
    .F1(un2_subMean_out_cry_11_0_S1), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[9] ), 
    .FCO(\subMean1/un2_subMean_out_cry_12 ));
  subMean1_SLICE_15 \subMean1/SLICE_15 ( .B1(\subMean1/avg[10] ), 
    .A1(\horizontal_out_c[10] ), .B0(\subMean1/avg[9] ), 
    .A0(\horizontal_out_c[9] ), .M1(\subMean1/sum[9] ), .M0(\subMean1/sum[8] ), 
    .CLK(fpga_clk), .FCI(\subMean1/un2_subMean_out_cry_8 ), 
    .F0(un2_subMean_out_cry_9_0_S0), .Q0(\subMean1/avg[4] ), 
    .F1(un2_subMean_out_cry_9_0_S1), .Q1(\subMean1/avg[5] ), 
    .FCO(\subMean1/un2_subMean_out_cry_10 ));
  subMean1_SLICE_16 \subMean1/SLICE_16 ( .B1(\subMean1/avg[8] ), 
    .A1(\horizontal_out_c[8] ), .B0(\subMean1/avg[7] ), 
    .A0(\horizontal_out_c[7] ), .M1(\subMean1/sum[7] ), .M0(\subMean1/sum[6] ), 
    .CLK(fpga_clk), .FCI(\subMean1/un2_subMean_out_cry_6 ), 
    .F0(un2_subMean_out_cry_7_0_S0), .Q0(\subMean1/avg[2] ), 
    .F1(un2_subMean_out_cry_7_0_S1), .Q1(\subMean1/avg[3] ), 
    .FCO(\subMean1/un2_subMean_out_cry_8 ));
  subMean1_SLICE_17 \subMean1/SLICE_17 ( .B1(\subMean1/avg[6] ), 
    .A1(\horizontal_out_c[6] ), .B0(\subMean1/avg[5] ), 
    .A0(\horizontal_out_c[5] ), .M1(\subMean1/sum[5] ), 
    .M0(\subMean1/sum[19] ), .CLK(fpga_clk), 
    .FCI(\subMean1/un2_subMean_out_cry_4 ), .F0(un2_subMean_out_cry_5_0_S0), 
    .Q0(\subMean1/avg[15] ), .F1(un2_subMean_out_cry_5_0_S1), 
    .Q1(\subMean1/avg[1] ), .FCO(\subMean1/un2_subMean_out_cry_6 ));
  subMean1_SLICE_18 \subMean1/SLICE_18 ( .B1(\subMean1/avg[4] ), 
    .A1(\horizontal_out_c[4] ), .B0(\horizontal_out_c[3] ), 
    .A0(\subMean1/avg[3] ), .M1(\subMean1/sum[18] ), .M0(\subMean1/sum[17] ), 
    .CLK(fpga_clk), .FCI(\subMean1/un2_subMean_out_cry_2 ), 
    .F0(un2_subMean_out_cry_3_0_S0), .Q0(\subMean1/avg[13] ), 
    .F1(un2_subMean_out_cry_3_0_S1), .Q1(\subMean1/avg[14] ), 
    .FCO(\subMean1/un2_subMean_out_cry_4 ));
  SLICE_19 SLICE_19( .B1(\horizontal_out_c[2] ), .A1(\subMean1/avg[2] ), 
    .B0(\horizontal_out_c[1] ), .A0(\subMean1/avg[1] ), 
    .M0(\port2/i2s_rx_inst/right_vld_i ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), .FCI(\subMean1/un2_subMean_out_cry_0 ), 
    .F0(un2_subMean_out_cry_1_0_S0), .Q0(\port2/i2s_rx_inst/right_vld_reg_i ), 
    .F1(un2_subMean_out_cry_1_0_S1), .FCO(\subMean1/un2_subMean_out_cry_2 ));
  SLICE_20 SLICE_20( .B1(\horizontal_out_c[0] ), .A1(\subMean1/avg[0] ), 
    .M1(\port2/i2s_rx_inst/right_data_reg_i[6] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[5] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[6] ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[7] ), 
    .FCO(\subMean1/un2_subMean_out_cry_0 ));
  ste2_SLICE_21 \ste2/SLICE_21 ( .A1(\ste2.window_count[6] ), 
    .A0(\ste2/window_count[5] ), .DI0(\ste2/un3_window_count_1[5] ), 
    .CLK(fpga_clk), .FCI(\ste2/un3_window_count_1_cry_4 ), 
    .F0(\ste2/un3_window_count_1[5] ), .Q0(\ste2/window_count[5] ), 
    .F1(\ste2/un3_window_count_1_cry_5_0_S1 ));
  ste2_SLICE_22 \ste2/SLICE_22 ( .A1(\ste2/window_count[4] ), 
    .A0(\ste2/window_count[3] ), .DI1(\ste2/un3_window_count_1[4] ), 
    .DI0(\ste2/un3_window_count_1[3] ), .CLK(fpga_clk), 
    .FCI(\ste2/un3_window_count_1_cry_2 ), .F0(\ste2/un3_window_count_1[3] ), 
    .Q0(\ste2/window_count[3] ), .F1(\ste2/un3_window_count_1[4] ), 
    .Q1(\ste2/window_count[4] ), .FCO(\ste2/un3_window_count_1_cry_4 ));
  ste2_SLICE_23 \ste2/SLICE_23 ( .A1(\ste2/window_count[2] ), 
    .A0(\ste2/un3lto1 ), .DI1(\ste2/un3_window_count_1[2] ), 
    .DI0(\ste2/un3_window_count_1[1] ), .CLK(fpga_clk), 
    .FCI(\ste2/un3_window_count_1_cry_0 ), .F0(\ste2/un3_window_count_1[1] ), 
    .Q0(\ste2/un3lto1 ), .F1(\ste2/un3_window_count_1[2] ), 
    .Q1(\ste2/window_count[2] ), .FCO(\ste2/un3_window_count_1_cry_2 ));
  SLICE_24 SLICE_24( .B1(\ste2/un3lto0 ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[4] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[3] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[4] ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[5] ), 
    .FCO(\ste2/un3_window_count_1_cry_0 ));
  zcr2_SLICE_25 \zcr2/SLICE_25 ( .B0(\zcr2.zcr_count_temp[5] ), 
    .A0(\zcr2/N_772_i ), .DI0(\zcr2/zcr_count_temp_s[5] ), 
    .CE(\zcr2/zcr_count_tempe ), .CLK(fpga_clk), 
    .FCI(\zcr2/zcr_count_temp_cry[4] ), .F0(\zcr2/zcr_count_temp_s[5] ), 
    .Q0(\zcr2.zcr_count_temp[5] ));
  zcr2_SLICE_26 \zcr2/SLICE_26 ( .B1(\zcr2/N_772_i ), 
    .A1(\zcr2.zcr_count_temp[4] ), .B0(\zcr2/N_772_i ), 
    .A0(\zcr2.zcr_count_temp[3] ), .DI1(\zcr2/zcr_count_temp_s[4] ), 
    .DI0(\zcr2/zcr_count_temp_s[3] ), .CE(\zcr2/zcr_count_tempe ), 
    .CLK(fpga_clk), .FCI(\zcr2/zcr_count_temp_cry[2] ), 
    .F0(\zcr2/zcr_count_temp_s[3] ), .Q0(\zcr2.zcr_count_temp[3] ), 
    .F1(\zcr2/zcr_count_temp_s[4] ), .Q1(\zcr2.zcr_count_temp[4] ), 
    .FCO(\zcr2/zcr_count_temp_cry[4] ));
  zcr2_SLICE_27 \zcr2/SLICE_27 ( .B1(\zcr2.zcr_count_temp[2] ), 
    .A1(\zcr2/N_772_i ), .B0(\zcr2.zcr_count_temp[1] ), .A0(\zcr2/N_772_i ), 
    .DI1(\zcr2/zcr_count_temp_s[2] ), .DI0(\zcr2/zcr_count_temp_s[1] ), 
    .CE(\zcr2/zcr_count_tempe ), .CLK(fpga_clk), 
    .FCI(\zcr2/zcr_count_temp_cry[0] ), .F0(\zcr2/zcr_count_temp_s[1] ), 
    .Q0(\zcr2.zcr_count_temp[1] ), .F1(\zcr2/zcr_count_temp_s[2] ), 
    .Q1(\zcr2.zcr_count_temp[2] ), .FCO(\zcr2/zcr_count_temp_cry[2] ));
  zcr2_SLICE_28 \zcr2/SLICE_28 ( .B1(\zcr2/N_772_i ), 
    .A1(\zcr2.zcr_count_temp[0] ), .B0(\zcr2/N_772_i ), 
    .DI1(\zcr2/zcr_count_temp_s[0] ), .CE(\zcr2/zcr_count_tempe ), 
    .CLK(fpga_clk), .F1(\zcr2/zcr_count_temp_s[0] ), 
    .Q1(\zcr2.zcr_count_temp[0] ), .FCO(\zcr2/zcr_count_temp_cry[0] ));
  f1_SLICE_29 \f1/SLICE_29 ( .A1(\f1/counter[6] ), .A0(\f1/counter[5] ), 
    .DI1(\f1/un1_counter[6] ), .DI0(\f1/un1_counter[5] ), .LSR(\f1/N_11 ), 
    .CLK(fpga_clk), .FCI(\f1/un1_counter_cry_4 ), .F0(\f1/un1_counter[5] ), 
    .Q0(\f1/counter[5] ), .F1(\f1/un1_counter[6] ), .Q1(\f1/counter[6] ));
  f1_SLICE_30 \f1/SLICE_30 ( .A1(\f1/counter[4] ), .A0(\f1/counter[3] ), 
    .DI1(\f1/un1_counter[4] ), .DI0(\f1/un1_counter[3] ), .LSR(\f1/N_11 ), 
    .CLK(fpga_clk), .FCI(\f1/un1_counter_cry_2 ), .F0(\f1/un1_counter[3] ), 
    .Q0(\f1/counter[3] ), .F1(\f1/un1_counter[4] ), .Q1(\f1/counter[4] ), 
    .FCO(\f1/un1_counter_cry_4 ));
  f1_SLICE_31 \f1/SLICE_31 ( .A1(\f1/counter[2] ), .A0(\f1/counter[1] ), 
    .DI1(\f1/un1_counter[2] ), .DI0(\f1/un1_counter[1] ), .LSR(\f1/N_11 ), 
    .CLK(fpga_clk), .FCI(\f1/un1_counter_cry_0 ), .F0(\f1/un1_counter[1] ), 
    .Q0(\f1/counter[1] ), .F1(\f1/un1_counter[2] ), .Q1(\f1/counter[2] ), 
    .FCO(\f1/un1_counter_cry_2 ));
  f1_SLICE_32 \f1/SLICE_32 ( .A1(\f1/counter[0] ), .B0(\f1/state ), 
    .DI1(\f1/un1_counter[0] ), .LSR(\f1/N_11 ), .CLK(fpga_clk), 
    .F1(\f1/un1_counter[0] ), .Q1(\f1/counter[0] ), 
    .FCO(\f1/un1_counter_cry_0 ));
  port2_i2s_rx_inst_SLICE_33 \port2/i2s_rx_inst/SLICE_33 ( 
    .B0(\port2/i2s_rx_inst/right_data_ones_compl_i[15] ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_s_15_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_14 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_s_15_0_S0 ), 
    .Q0(\o_right_data2_c[15] ));
  port2_i2s_rx_inst_SLICE_34 \port2/i2s_rx_inst/SLICE_34 ( 
    .A1(\port2/i2s_rx_inst/right_data_ones_compl_i[14] ), 
    .B0(\port2/i2s_rx_inst/right_data_ones_compl_i[13] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_12 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0_S0 ), 
    .Q0(\o_right_data2_c[13] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0_S1 ), 
    .Q1(\o_right_data2_c[14] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_14 ));
  port2_i2s_rx_inst_SLICE_35 \port2/i2s_rx_inst/SLICE_35 ( 
    .B1(\port2/i2s_rx_inst/right_data_ones_compl_i[12] ), 
    .B0(\port2/i2s_rx_inst/right_data_ones_compl_i[11] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_10 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0_S0 ), 
    .Q0(\o_right_data2_c[11] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0_S1 ), 
    .Q1(\o_right_data2_c[12] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_12 ));
  port2_i2s_rx_inst_SLICE_36 \port2/i2s_rx_inst/SLICE_36 ( 
    .B1(\port2/i2s_rx_inst/right_data_ones_compl_i[10] ), 
    .A0(\port2/i2s_rx_inst/right_data_ones_compl_i[9] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_8 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0_S0 ), 
    .Q0(\o_right_data2_c[9] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0_S1 ), 
    .Q1(\o_right_data2_c[10] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_10 ));
  port2_i2s_rx_inst_SLICE_37 \port2/i2s_rx_inst/SLICE_37 ( 
    .B1(\port2/i2s_rx_inst/right_data_ones_compl_i[8] ), 
    .A0(\port2/i2s_rx_inst/right_data_ones_compl_i[7] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_6 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0_S0 ), 
    .Q0(\o_right_data2_c[7] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0_S1 ), 
    .Q1(\o_right_data2_c[8] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_8 ));
  port2_i2s_rx_inst_SLICE_38 \port2/i2s_rx_inst/SLICE_38 ( 
    .A1(\port2/i2s_rx_inst/right_data_ones_compl_i[6] ), 
    .B0(\port2/i2s_rx_inst/right_data_ones_compl_i[5] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_4 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0_S0 ), 
    .Q0(\o_right_data2_c[5] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0_S1 ), 
    .Q1(\o_right_data2_c[6] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_6 ));
  port2_i2s_rx_inst_SLICE_39 \port2/i2s_rx_inst/SLICE_39 ( 
    .A1(\port2/i2s_rx_inst/right_data_ones_compl_i[4] ), 
    .B0(\port2/i2s_rx_inst/right_data_ones_compl_i[3] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_2 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0_S0 ), 
    .Q0(\o_right_data2_c[3] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0_S1 ), 
    .Q1(\o_right_data2_c[4] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_4 ));
  port2_i2s_rx_inst_SLICE_40 \port2/i2s_rx_inst/SLICE_40 ( 
    .A1(\port2/i2s_rx_inst/right_data_ones_compl_i[2] ), 
    .A0(\port2/i2s_rx_inst/right_data_ones_compl_i[1] ), 
    .DI1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0 ), 
    .F0(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0_S0 ), 
    .Q0(\o_right_data2_c[1] ), 
    .F1(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0_S1 ), 
    .Q1(\o_right_data2_c[2] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_2 ));
  SLICE_41 SLICE_41( .B1(\port2/i2s_rx_inst/right_data_ones_compl_i[0] ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[0] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[14] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[15] ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[1] ), 
    .FCO(\port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0 ));
  port2_i2s_rx_inst_SLICE_42 \port2/i2s_rx_inst/SLICE_42 ( 
    .B0(\port2/i2s_rx_inst/left_data_ones_compl_i[15] ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_s_15_0_S0 ), 
    .M1(\port2/i2s_rx_inst/d1_right_vld ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_14 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_s_15_0_S0 ), 
    .Q0(\o_left_data2_c[15] ), .Q1(o_right_vld2_c));
  port2_i2s_rx_inst_SLICE_43 \port2/i2s_rx_inst/SLICE_43 ( 
    .B1(\port2/i2s_rx_inst/left_data_ones_compl_i[14] ), 
    .B0(\port2/i2s_rx_inst/left_data_ones_compl_i[13] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_12 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0_S0 ), 
    .Q0(\o_left_data2_c[13] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0_S1 ), 
    .Q1(\o_left_data2_c[14] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_14 ));
  port2_i2s_rx_inst_SLICE_44 \port2/i2s_rx_inst/SLICE_44 ( 
    .A1(\port2/i2s_rx_inst/left_data_ones_compl_i[12] ), 
    .A0(\port2/i2s_rx_inst/left_data_ones_compl_i[11] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_10 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0_S0 ), 
    .Q0(\o_left_data2_c[11] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0_S1 ), 
    .Q1(\o_left_data2_c[12] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_12 ));
  port2_i2s_rx_inst_SLICE_45 \port2/i2s_rx_inst/SLICE_45 ( 
    .A1(\port2/i2s_rx_inst/left_data_ones_compl_i[10] ), 
    .B0(\port2/i2s_rx_inst/left_data_ones_compl_i[9] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_8 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0_S0 ), 
    .Q0(\o_left_data2_c[9] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0_S1 ), 
    .Q1(\o_left_data2_c[10] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_10 ));
  port2_i2s_rx_inst_SLICE_46 \port2/i2s_rx_inst/SLICE_46 ( 
    .A1(\port2/i2s_rx_inst/left_data_ones_compl_i[8] ), 
    .A0(\port2/i2s_rx_inst/left_data_ones_compl_i[7] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_6 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0_S0 ), 
    .Q0(\o_left_data2_c[7] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0_S1 ), 
    .Q1(\o_left_data2_c[8] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_8 ));
  port2_i2s_rx_inst_SLICE_47 \port2/i2s_rx_inst/SLICE_47 ( 
    .B1(\port2/i2s_rx_inst/left_data_ones_compl_i[6] ), 
    .A0(\port2/i2s_rx_inst/left_data_ones_compl_i[5] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_4 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0_S0 ), 
    .Q0(\o_left_data2_c[5] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0_S1 ), 
    .Q1(\o_left_data2_c[6] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_6 ));
  port2_i2s_rx_inst_SLICE_48 \port2/i2s_rx_inst/SLICE_48 ( 
    .A1(\port2/i2s_rx_inst/left_data_ones_compl_i[4] ), 
    .A0(\port2/i2s_rx_inst/left_data_ones_compl_i[3] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_2 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0_S0 ), 
    .Q0(\o_left_data2_c[3] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0_S1 ), 
    .Q1(\o_left_data2_c[4] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_4 ));
  port2_i2s_rx_inst_SLICE_49 \port2/i2s_rx_inst/SLICE_49 ( 
    .B1(\port2/i2s_rx_inst/left_data_ones_compl_i[2] ), 
    .A0(\port2/i2s_rx_inst/left_data_ones_compl_i[1] ), 
    .DI1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0_S1 ), 
    .DI0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0_S0 ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_0 ), 
    .F0(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0_S0 ), 
    .Q0(\o_left_data2_c[1] ), 
    .F1(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0_S1 ), 
    .Q1(\o_left_data2_c[2] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_2 ));
  SLICE_50 SLICE_50( .B1(\port2/i2s_rx_inst/left_data_ones_compl_i[0] ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[13] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[12] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[13] ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[14] ), 
    .FCO(\port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_0 ));
  port1_i2s_rx_inst_SLICE_51 \port1/i2s_rx_inst/SLICE_51 ( 
    .B0(\port1/i2s_rx_inst/right_data_ones_compl_i[15] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[15] ), 
    .M1(\port1/i2s_rx_inst/left_vld_i ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_14 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[15] ), 
    .Q0(\port1/i2s_rx_inst/o_right_data[15] ), 
    .Q1(\port1/i2s_rx_inst/left_vld_reg_i ));
  port1_i2s_rx_inst_SLICE_52 \port1/i2s_rx_inst/SLICE_52 ( 
    .A1(\port1/i2s_rx_inst/right_data_ones_compl_i[14] ), 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[13] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[14] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[13] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_12 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[13] ), 
    .Q0(\o_right_data[13] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[14] ), 
    .Q1(\o_right_data[14] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_14 ));
  port1_i2s_rx_inst_SLICE_53 \port1/i2s_rx_inst/SLICE_53 ( 
    .A1(\port1/i2s_rx_inst/right_data_ones_compl_i[12] ), 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[11] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[12] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[11] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_10 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[11] ), 
    .Q0(\o_right_data[11] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[12] ), 
    .Q1(\o_right_data[12] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_12 ));
  port1_i2s_rx_inst_SLICE_54 \port1/i2s_rx_inst/SLICE_54 ( 
    .B1(\port1/i2s_rx_inst/right_data_ones_compl_i[10] ), 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[9] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[10] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[9] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_8 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[9] ), 
    .Q0(\o_right_data[9] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[10] ), 
    .Q1(\o_right_data[10] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_10 ));
  port1_i2s_rx_inst_SLICE_55 \port1/i2s_rx_inst/SLICE_55 ( 
    .B1(\port1/i2s_rx_inst/right_data_ones_compl_i[8] ), 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[7] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[8] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[7] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_6 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[7] ), 
    .Q0(\o_right_data[7] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[8] ), 
    .Q1(\o_right_data[8] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_8 ));
  port1_i2s_rx_inst_SLICE_56 \port1/i2s_rx_inst/SLICE_56 ( 
    .B1(\port1/i2s_rx_inst/right_data_ones_compl_i[6] ), 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[5] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[6] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[5] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_4 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[5] ), 
    .Q0(\o_right_data[5] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[6] ), 
    .Q1(\o_right_data[6] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_6 ));
  port1_i2s_rx_inst_SLICE_57 \port1/i2s_rx_inst/SLICE_57 ( 
    .B1(\port1/i2s_rx_inst/right_data_ones_compl_i[4] ), 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[3] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[4] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[3] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_2 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[3] ), 
    .Q0(\o_right_data[3] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[4] ), 
    .Q1(\o_right_data[4] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_4 ));
  port1_i2s_rx_inst_SLICE_58 \port1/i2s_rx_inst/SLICE_58 ( 
    .A1(\port1/i2s_rx_inst/right_data_ones_compl_i[2] ), 
    .B0(\port1/i2s_rx_inst/right_data_ones_compl_i[1] ), 
    .DI1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[2] ), 
    .DI0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[1] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .FCI(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0 ), 
    .F0(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[1] ), 
    .Q0(\o_right_data[1] ), 
    .F1(\port1/i2s_rx_inst/un1_right_data_twos_compl_i[2] ), 
    .Q1(\o_right_data[2] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_2 ));
  port1_i2s_rx_inst_SLICE_59 \port1/i2s_rx_inst/SLICE_59 ( 
    .A1(\port1/i2s_rx_inst/right_data_ones_compl_i[0] ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[9] ), 
    .M0(\port1.i2s_rx_inst.sd_i ), .CE(ws_reg_i_RNID2EK1), .LSR(i_sys_rst), 
    .CLK(mclk_c), .Q0(\port1/i2s_rx_inst/right_data_reg_i[0] ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[10] ), 
    .FCO(\port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0 ));
  SLICE_60 SLICE_60( .A0(\o_right_data_i[15] ), .M1(\horizontal_out_c[14] ), 
    .M0(\horizontal_out_c[13] ), .CLK(fpga_clk), .FCI(un1_fifo_in1_cry_14), 
    .F0(\un1_fifo_in1[15] ), .Q0(\subMean1/horizontal_out_cf[13] ), 
    .Q1(\subMean1/horizontal_out_cf[14] ));
  SLICE_61 SLICE_61( .B1(\o_right_data[14] ), .A0(\o_right_data[13] ), 
    .M1(\horizontal_out_c[2] ), .M0(\horizontal_out_c[1] ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_12), .F0(\un1_fifo_in1[13] ), 
    .Q0(\subMean1/horizontal_out_cf[1] ), .F1(\un1_fifo_in1[14] ), 
    .Q1(\subMean1/horizontal_out_cf[2] ), .FCO(un1_fifo_in1_cry_14));
  SLICE_62 SLICE_62( .A1(\o_right_data[12] ), .A0(\o_right_data[11] ), 
    .M1(\horizontal_out_c[0] ), .M0(\subMean1/Full ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_10), .F0(\un1_fifo_in1[11] ), 
    .Q0(\subMean1/r1/temp ), .F1(\un1_fifo_in1[12] ), 
    .Q1(\subMean1/horizontal_out_cf[0] ), .FCO(un1_fifo_in1_cry_12));
  SLICE_63 SLICE_63( .B1(\o_right_data[10] ), .B0(\o_right_data[9] ), 
    .M1(\horizontal_out_c[12] ), .M0(\horizontal_out_c[11] ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_8), .F0(\un1_fifo_in1[9] ), 
    .Q0(\subMean1/horizontal_out_cf[11] ), .F1(\un1_fifo_in1[10] ), 
    .Q1(\subMean1/horizontal_out_cf[12] ), .FCO(un1_fifo_in1_cry_10));
  SLICE_64 SLICE_64( .B1(\o_right_data[8] ), .B0(\o_right_data[7] ), 
    .M1(\horizontal_out_c[10] ), .M0(\horizontal_out_c[9] ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_6), .F0(\un1_fifo_in1[7] ), 
    .Q0(\subMean1/horizontal_out_cf[9] ), .F1(\un1_fifo_in1[8] ), 
    .Q1(\subMean1/horizontal_out_cf[10] ), .FCO(un1_fifo_in1_cry_8));
  SLICE_65 SLICE_65( .B1(\o_right_data[6] ), .A0(\o_right_data[5] ), 
    .M1(\horizontal_out_c[8] ), .M0(\horizontal_out_c[7] ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_4), .F0(\un1_fifo_in1[5] ), 
    .Q0(\subMean1/horizontal_out_cf[7] ), .F1(\un1_fifo_in1[6] ), 
    .Q1(\subMean1/horizontal_out_cf[8] ), .FCO(un1_fifo_in1_cry_6));
  SLICE_66 SLICE_66( .A1(\o_right_data[4] ), .A0(\o_right_data[3] ), 
    .M1(\horizontal_out_c[6] ), .M0(\horizontal_out_c[5] ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_2), .F0(\un1_fifo_in1[3] ), 
    .Q0(\subMean1/horizontal_out_cf[5] ), .F1(\un1_fifo_in1[4] ), 
    .Q1(\subMean1/horizontal_out_cf[6] ), .FCO(un1_fifo_in1_cry_4));
  SLICE_67 SLICE_67( .B1(\o_right_data[2] ), .B0(\o_right_data[1] ), 
    .M1(\horizontal_out_c[4] ), .M0(\horizontal_out_c[3] ), .CLK(fpga_clk), 
    .FCI(un1_fifo_in1_cry_0), .F0(\un1_fifo_in1[1] ), 
    .Q0(\subMean1/horizontal_out_cf[3] ), .F1(\un1_fifo_in1[2] ), 
    .Q1(\subMean1/horizontal_out_cf[4] ), .FCO(un1_fifo_in1_cry_2));
  SLICE_68 SLICE_68( .B1(un1_fifo_in1), .M1(\subMean1/sum[13] ), 
    .M0(\subMean1/sum[12] ), .CLK(fpga_clk), .Q0(\subMean1/avg[8] ), 
    .Q1(\subMean1/avg[9] ), .FCO(un1_fifo_in1_cry_0));
  SLICE_69 SLICE_69( .C0(\o_left_data2_c[15] ), .B0(o_ws_c), 
    .A0(\o_right_data2_c[15] ), .FCI(un1_o_left_data2_1_cry_14), 
    .F0(un1_o_left_data2_1_s_15_0_S0));
  SLICE_70 SLICE_70( .C1(\o_left_data2_c[14] ), .B1(o_ws_c), 
    .A1(\o_right_data2_c[14] ), .C0(\o_left_data2_c[13] ), .B0(o_ws_c), 
    .A0(\o_right_data2_c[13] ), .FCI(un1_o_left_data2_1_cry_12), 
    .F0(un1_o_left_data2_1_cry_13_0_S0), .F1(un1_o_left_data2_1_cry_13_0_S1), 
    .FCO(un1_o_left_data2_1_cry_14));
  SLICE_71 SLICE_71( .C1(\o_left_data2_c[12] ), .B1(o_ws_c), 
    .A1(\o_right_data2_c[12] ), .C0(\o_left_data2_c[11] ), .B0(o_ws_c), 
    .A0(\o_right_data2_c[11] ), .FCI(un1_o_left_data2_1_cry_10), 
    .F0(un1_o_left_data2_1_cry_11_0_S0), .F1(un1_o_left_data2_1_cry_11_0_S1), 
    .FCO(un1_o_left_data2_1_cry_12));
  SLICE_72 SLICE_72( .C1(\o_left_data2_c[10] ), .B1(o_ws_c), 
    .A1(\o_right_data2_c[10] ), .C0(\o_left_data2_c[9] ), .B0(o_ws_c), 
    .A0(\o_right_data2_c[9] ), .FCI(un1_o_left_data2_1_cry_8), 
    .F0(un1_o_left_data2_1_cry_9_0_S0), .F1(un1_o_left_data2_1_cry_9_0_S1), 
    .FCO(un1_o_left_data2_1_cry_10));
  SLICE_73 SLICE_73( .C1(\o_left_data2_c[8] ), .B1(o_ws_c), 
    .A1(\o_right_data2_c[8] ), .C0(\o_left_data2_c[7] ), .B0(o_ws_c), 
    .A0(\o_right_data2_c[7] ), .FCI(un1_o_left_data2_1_cry_6), 
    .F0(un1_o_left_data2_1_cry_7_0_S0), .F1(un1_o_left_data2_1_cry_7_0_S1), 
    .FCO(un1_o_left_data2_1_cry_8));
  SLICE_74 SLICE_74( .C1(\o_left_data2_c[6] ), .B1(\o_right_data2_c[6] ), 
    .A1(o_ws_c), .C0(\o_left_data2_c[5] ), .B0(\o_right_data2_c[5] ), 
    .A0(o_ws_c), .FCI(un1_o_left_data2_1_cry_4), 
    .F0(un1_o_left_data2_1_cry_5_0_S0), .F1(un1_o_left_data2_1_cry_5_0_S1), 
    .FCO(un1_o_left_data2_1_cry_6));
  SLICE_75 SLICE_75( .C1(\o_left_data2_c[4] ), .B1(o_ws_c), 
    .A1(\o_right_data2_c[4] ), .C0(\o_left_data2_c[3] ), .B0(o_ws_c), 
    .A0(\o_right_data2_c[3] ), .FCI(un1_o_left_data2_1_cry_2), 
    .F0(un1_o_left_data2_1_cry_3_0_S0), .F1(un1_o_left_data2_1_cry_3_0_S1), 
    .FCO(un1_o_left_data2_1_cry_4));
  SLICE_76 SLICE_76( .C1(\o_left_data2_c[2] ), .B1(\o_right_data2_c[2] ), 
    .A1(o_ws_c), .C0(\o_left_data2_c[1] ), .B0(\o_right_data2_c[1] ), 
    .A0(o_ws_c), .FCI(un1_o_left_data2_1_cry_0), 
    .F0(un1_o_left_data2_1_cry_1_0_S0), .F1(un1_o_left_data2_1_cry_1_0_S1), 
    .FCO(un1_o_left_data2_1_cry_2));
  div8_SLICE_77 \div8/SLICE_77 ( .D1(\div8.r_reg[0] ), .A1(\div8.r_reg[1] ), 
    .A0(\div8.r_reg[0] ), .DI1(\div8/r_nxt[1] ), .DI0(\div8/r_reg_i[0] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\div8/r_reg_i[0] ), 
    .Q0(\div8.r_reg[0] ), .F1(\div8/r_nxt[1] ), .Q1(\div8.r_reg[1] ));
  SLICE_78 SLICE_78( .D1(rst_c), .B1(lock), .D0(almost_full), .C0(i_sys_rst), 
    .B0(\f1/N_330 ), .A0(\f1/state ), .DI0(\f1/N_39_i ), .CLK(fpga_clk), 
    .F0(\f1/N_39_i ), .Q0(\f1/state ), .F1(i_sys_rst));
  SLICE_79 SLICE_79( .C0(\port2/i2s_rx_inst/left_data_ones_compl_i[0] ), 
    .DI0(\port2/i2s_rx_inst/left_data_ones_compl_i_i[0] ), 
    .M1(\port1/i2s_rx_inst/ws_i ), .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\port2/i2s_rx_inst/left_data_ones_compl_i_i[0] ), 
    .Q0(\o_left_data2_c[0] ), .Q1(\port2.i2s_rx_inst.ws_reg_i ));
  port2_i2s_rx_inst_SLICE_81 \port2/i2s_rx_inst/SLICE_81 ( 
    .B0(\port2/i2s_rx_inst/right_data_ones_compl_i[0] ), 
    .DI0(\port2/i2s_rx_inst/right_data_ones_compl_i_i[0] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_ones_compl_i_i[0] ), 
    .Q0(\o_right_data2_c[0] ));
  div8_SLICE_83 \div8/SLICE_83 ( .C0(\div8.r_reg[1] ), .B0(\div8.r_reg[0] ), 
    .A0(o_sck_c), .DI0(\div8/o_sck_0 ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\div8/o_sck_0 ), .Q0(o_sck_c));
  SLICE_84 SLICE_84( .C1(o_ws_c), .B1(\o_right_data2_c[0] ), 
    .A1(\o_left_data2_c[0] ), .C0(o_ws_c), .A0(\port1/o_ws_0_RNO ), 
    .DI0(\port1/o_ws_0 ), .LSR(i_sys_rst), .CLK(mclk_c), .F0(\port1/o_ws_0 ), 
    .Q0(o_ws_c), .F1(\vertical_port/un1_o_left_data2_1_i[0] ));
  port1_SLICE_85 \port1/SLICE_85 ( .D0(\div8.r_reg[0] ), .C0(o_sck_c), 
    .B0(\port1/count[0] ), .A0(\div8.r_reg[1] ), .DI0(\port1/count_RNO[0] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\port1/count_RNO[0] ), 
    .Q0(\port1/count[0] ));
  port1_SLICE_86 \port1/SLICE_86 ( .D1(\port1/count[0] ), 
    .B1(\port1/count[1] ), .A1(\port1/count[2] ), .D0(\port1/count[0] ), 
    .A0(\port1/count[1] ), .DI1(\port1/count_RNO[2] ), 
    .DI0(\port1/count_RNO[1] ), .CE(\r_reg_RNIOPPB1[1] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\port1/count_RNO[1] ), .Q0(\port1/count[1] ), 
    .F1(\port1/count_RNO[2] ), .Q1(\port1/count[2] ));
  port1_SLICE_87 \port1/SLICE_87 ( .C1(\port1/count[1] ), 
    .B1(\port1/count[0] ), .D0(\port1/count[2] ), .C0(\port1/count[1] ), 
    .B0(\port1/count[0] ), .A0(\port1/count[3] ), .DI0(\port1/count_RNO[3] ), 
    .CE(\r_reg_RNIOPPB1[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/count_RNO[3] ), .Q0(\port1/count[3] ), .F1(\port1/count12_c2 ));
  port1_i2s_rx_inst_SLICE_88 \port1/i2s_rx_inst/SLICE_88 ( 
    .D0(\port1/i2s_rx_inst/left_vld_i ), 
    .A0(\port1/i2s_rx_inst/left_vld_reg_i ), 
    .DI0(\port1/i2s_rx_inst/left_vld ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\port1/i2s_rx_inst/left_vld ), 
    .Q0(\port1/i2s_rx_inst/d1_left_vld ));
  port1_i2s_rx_inst_SLICE_89 \port1/i2s_rx_inst/SLICE_89 ( 
    .D0(\port2.i2s_rx_inst.ws_reg_i ), .DI0(\port1/i2s_rx_inst/ws_reg_i_i ), 
    .CE(ws_i_RNI5U2R1), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/ws_reg_i_i ), .Q0(\port1/i2s_rx_inst/left_vld_i ));
  port1_i2s_rx_inst_SLICE_91 \port1/i2s_rx_inst/SLICE_91 ( 
    .A1(\port1/i2s_rx_inst/right_data_reg_i[1] ), 
    .D0(\port1/i2s_rx_inst/right_data_reg_i[0] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[1] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[0] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[0] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[0] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[1] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[1] ));
  port1_i2s_rx_inst_SLICE_92 \port1/i2s_rx_inst/SLICE_92 ( 
    .D1(\port1/i2s_rx_inst/right_data_reg_i[3] ), 
    .C0(\port1/i2s_rx_inst/right_data_reg_i[2] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[3] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[2] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[2] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[2] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[3] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[3] ));
  port1_i2s_rx_inst_SLICE_93 \port1/i2s_rx_inst/SLICE_93 ( 
    .A1(\port1/i2s_rx_inst/right_data_reg_i[5] ), 
    .B0(\port1/i2s_rx_inst/right_data_reg_i[4] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[5] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[4] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[4] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[4] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[5] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[5] ));
  port1_i2s_rx_inst_SLICE_94 \port1/i2s_rx_inst/SLICE_94 ( 
    .B1(\port1/i2s_rx_inst/right_data_reg_i[7] ), 
    .A0(\port1/i2s_rx_inst/right_data_reg_i[6] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[7] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[6] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[6] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[6] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[7] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[7] ));
  port1_i2s_rx_inst_SLICE_95 \port1/i2s_rx_inst/SLICE_95 ( 
    .C1(\port1/i2s_rx_inst/right_data_reg_i[9] ), 
    .C0(\port1/i2s_rx_inst/right_data_reg_i[8] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[9] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[8] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[8] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[8] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[9] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[9] ));
  port1_i2s_rx_inst_SLICE_96 \port1/i2s_rx_inst/SLICE_96 ( 
    .A1(\port1/i2s_rx_inst/right_data_reg_i[11] ), 
    .C0(\port1/i2s_rx_inst/right_data_reg_i[10] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[11] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[10] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[10] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[10] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[11] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[11] ));
  port1_i2s_rx_inst_SLICE_97 \port1/i2s_rx_inst/SLICE_97 ( 
    .A1(\port1/i2s_rx_inst/right_data_reg_i[13] ), 
    .D0(\port1/i2s_rx_inst/right_data_reg_i[12] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[13] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[12] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[12] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[12] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[13] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[13] ));
  port1_i2s_rx_inst_SLICE_98 \port1/i2s_rx_inst/SLICE_98 ( 
    .C1(\port1/i2s_rx_inst/right_data_reg_i[15] ), 
    .C0(\port1/i2s_rx_inst/right_data_reg_i[14] ), 
    .DI1(\port1/i2s_rx_inst/right_data_reg_i_i[15] ), 
    .DI0(\port1/i2s_rx_inst/right_data_reg_i_i[14] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_reg_i_i[14] ), 
    .Q0(\port1/i2s_rx_inst/right_data_ones_compl_i[14] ), 
    .F1(\port1/i2s_rx_inst/right_data_reg_i_i[15] ), 
    .Q1(\port1/i2s_rx_inst/right_data_ones_compl_i[15] ));
  SLICE_109 SLICE_109( .D0(\port2/i2s_rx_inst/right_vld_i ), 
    .B0(\port2/i2s_rx_inst/right_vld_reg_i ), 
    .DI0(\port2/i2s_rx_inst/right_vld ), .M1(o_ws_c), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_vld ), .Q0(\port2/i2s_rx_inst/d1_right_vld ), 
    .Q1(\port1/i2s_rx_inst/ws_i ));
  port2_i2s_rx_inst_SLICE_110 \port2/i2s_rx_inst/SLICE_110 ( 
    .D1(\port2/i2s_rx_inst/left_data_reg_i[1] ), 
    .D0(\port2/i2s_rx_inst/left_data_reg_i[0] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[1] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[0] ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[0] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[0] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[1] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[1] ));
  port2_i2s_rx_inst_SLICE_111 \port2/i2s_rx_inst/SLICE_111 ( 
    .D1(\port2/i2s_rx_inst/left_data_reg_i[3] ), 
    .D0(\port2/i2s_rx_inst/left_data_reg_i[2] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[3] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[2] ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[2] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[2] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[3] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[3] ));
  port2_i2s_rx_inst_SLICE_112 \port2/i2s_rx_inst/SLICE_112 ( 
    .C1(\port2/i2s_rx_inst/left_data_reg_i[5] ), 
    .D0(\port2/i2s_rx_inst/left_data_reg_i[4] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[5] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[4] ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[4] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[4] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[5] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[5] ));
  port2_i2s_rx_inst_SLICE_113 \port2/i2s_rx_inst/SLICE_113 ( 
    .D1(\port2/i2s_rx_inst/left_data_reg_i[7] ), 
    .D0(\port2/i2s_rx_inst/left_data_reg_i[6] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[7] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[6] ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[6] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[6] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[7] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[7] ));
  port2_i2s_rx_inst_SLICE_114 \port2/i2s_rx_inst/SLICE_114 ( 
    .B1(\port2/i2s_rx_inst/left_data_reg_i[9] ), 
    .C0(\port2/i2s_rx_inst/left_data_reg_i[8] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[9] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[8] ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[8] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[8] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[9] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[9] ));
  port2_i2s_rx_inst_SLICE_115 \port2/i2s_rx_inst/SLICE_115 ( 
    .D1(\port2/i2s_rx_inst/left_data_reg_i[11] ), 
    .A0(\port2/i2s_rx_inst/left_data_reg_i[10] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[11] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[10] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[10] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[10] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[11] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[11] ));
  port2_i2s_rx_inst_SLICE_116 \port2/i2s_rx_inst/SLICE_116 ( 
    .A1(\port2/i2s_rx_inst/left_data_reg_i[13] ), 
    .A0(\port2/i2s_rx_inst/left_data_reg_i[12] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[13] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[12] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[12] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[12] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[13] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[13] ));
  port2_i2s_rx_inst_SLICE_117 \port2/i2s_rx_inst/SLICE_117 ( 
    .C1(\port2/i2s_rx_inst/left_data_reg_i[15] ), 
    .D0(\port2/i2s_rx_inst/left_data_reg_i[14] ), 
    .DI1(\port2/i2s_rx_inst/left_data_reg_i_i[15] ), 
    .DI0(\port2/i2s_rx_inst/left_data_reg_i_i[14] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_i[14] ), 
    .Q0(\port2/i2s_rx_inst/left_data_ones_compl_i[14] ), 
    .F1(\port2/i2s_rx_inst/left_data_reg_i_i[15] ), 
    .Q1(\port2/i2s_rx_inst/left_data_ones_compl_i[15] ));
  port2_i2s_rx_inst_SLICE_126 \port2/i2s_rx_inst/SLICE_126 ( 
    .C1(\port2/i2s_rx_inst/right_data_reg_i[1] ), 
    .D0(\port2/i2s_rx_inst/right_data_reg_i[0] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[1] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[0] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[0] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[0] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[1] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[1] ));
  port2_i2s_rx_inst_SLICE_127 \port2/i2s_rx_inst/SLICE_127 ( 
    .D1(\port2/i2s_rx_inst/right_data_reg_i[3] ), 
    .D0(\port2/i2s_rx_inst/right_data_reg_i[2] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[3] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[2] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[2] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[2] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[3] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[3] ));
  port2_i2s_rx_inst_SLICE_128 \port2/i2s_rx_inst/SLICE_128 ( 
    .D1(\port2/i2s_rx_inst/right_data_reg_i[5] ), 
    .D0(\port2/i2s_rx_inst/right_data_reg_i[4] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[5] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[4] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[4] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[4] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[5] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[5] ));
  port2_i2s_rx_inst_SLICE_129 \port2/i2s_rx_inst/SLICE_129 ( 
    .C1(\port2/i2s_rx_inst/right_data_reg_i[7] ), 
    .A0(\port2/i2s_rx_inst/right_data_reg_i[6] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[7] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[6] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[6] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[6] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[7] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[7] ));
  port2_i2s_rx_inst_SLICE_130 \port2/i2s_rx_inst/SLICE_130 ( 
    .D1(\port2/i2s_rx_inst/right_data_reg_i[9] ), 
    .B0(\port2/i2s_rx_inst/right_data_reg_i[8] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[9] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[8] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[8] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[8] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[9] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[9] ));
  port2_i2s_rx_inst_SLICE_131 \port2/i2s_rx_inst/SLICE_131 ( 
    .A1(\port2/i2s_rx_inst/right_data_reg_i[11] ), 
    .C0(\port2/i2s_rx_inst/right_data_reg_i[10] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[11] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[10] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[10] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[10] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[11] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[11] ));
  port2_i2s_rx_inst_SLICE_132 \port2/i2s_rx_inst/SLICE_132 ( 
    .D1(\port2/i2s_rx_inst/right_data_reg_i[13] ), 
    .C0(\port2/i2s_rx_inst/right_data_reg_i[12] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[13] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[12] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[12] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[12] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[13] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[13] ));
  port2_i2s_rx_inst_SLICE_133 \port2/i2s_rx_inst/SLICE_133 ( 
    .A1(\port2/i2s_rx_inst/right_data_reg_i[15] ), 
    .B0(\port2/i2s_rx_inst/right_data_reg_i[14] ), 
    .DI1(\port2/i2s_rx_inst/right_data_reg_i_i[15] ), 
    .DI0(\port2/i2s_rx_inst/right_data_reg_i_i[14] ), 
    .CE(\r_reg_RNIOPPB1_0[1] ), .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/right_data_reg_i_i[14] ), 
    .Q0(\port2/i2s_rx_inst/right_data_ones_compl_i[14] ), 
    .F1(\port2/i2s_rx_inst/right_data_reg_i_i[15] ), 
    .Q1(\port2/i2s_rx_inst/right_data_ones_compl_i[15] ));
  ste2_SLICE_145 \ste2/SLICE_145 ( .C0(\ste2/un3_window_count_1_cry_5_0_S1 ), 
    .A0(\ste2.window_count[6] ), .DI0(\ste2/window_count_3[6] ), 
    .CLK(fpga_clk), .F0(\ste2/window_count_3[6] ), .Q0(\ste2.window_count[6] ));
  ste2_sq1_SLICE_146 \ste2/sq1/SLICE_146 ( .DI1(\ste2/sq1/qdataout0_ffin ), 
    .M1(\horizontal_out_c[8] ), .FXB(\ste2/sq1/mem_0_0_1_f5b ), 
    .FXA(\ste2/sq1/mem_0_0_0_f5a ), .CLK(fpga_clk), 
    .OFX0(\ste2/sq1/mem_0_0_1_f5b ), .Q1(\ste2/square[0] ), 
    .OFX1(\ste2/sq1/qdataout0_ffin ));
  ste2_SLICE_147 \ste2/SLICE_147 ( .D1(\ste2/un3lto1 ), 
    .A1(\ste2/window_count[3] ), .D0(\ste2/square[0] ), .C0(\ste2/N_9_4 ), 
    .B0(\ste2/sum_3_0_550_i_a3_0_a2_0 ), .A0(\ste2/sum[0] ), 
    .DI0(\ste2/N_284_i ), .CE(\ste2/N_9_i ), .CLK(fpga_clk), 
    .F0(\ste2/N_284_i ), .Q0(\ste2/sum[0] ), 
    .F1(\ste2/sum_3_0_550_i_a3_0_a2_0 ));
  ste2_SLICE_148 \ste2/SLICE_148 ( .B1(\ste2.window_count[6] ), 
    .A1(\ste2/sum[0] ), .B0(\ste2.window_count[6] ), .A0(\ste2/un3lto0 ), 
    .DI0(\ste2/window_count_3[0] ), .CLK(fpga_clk), 
    .F0(\ste2/window_count_3[0] ), .Q0(\ste2/un3lto0 ), .F1(\ste2.ste_3[0] ));
  subMean1_SLICE_167 \subMean1/SLICE_167 ( .D1(\subMean1/un2f[0] ), 
    .C1(\subMean1/horizontal_out_cf[0] ), .B1(\subMean1/sumf[0] ), 
    .D0(\subMean1/un2f[0] ), .C0(\subMean1/horizontal_out_cf[0] ), 
    .B0(\subMean1/subMean_left_valid_cf ), .A0(\subMean1/sumf[0] ), 
    .DI0(\subMean1/sum[0] ), .M1(\subMean1/sum[14] ), .CLK(fpga_clk), 
    .F0(\subMean1/sum[0] ), .Q0(\subMean1/sumf[0] ), 
    .F1(\subMean1/un1_sum_3_0 ), .Q1(\subMean1/avg[10] ));
  subMean1_SLICE_168 \subMean1/SLICE_168 ( .C1(\subMean1/fifo_out[1] ), 
    .A1(subMean_left_valid_c), .C0(\subMean1/fifo_out[0] ), 
    .A0(subMean_left_valid_c), .DI1(\subMean1/un2[1] ), 
    .DI0(\subMean1/un2[0] ), .CLK(fpga_clk), .F0(\subMean1/un2[0] ), 
    .Q0(\subMean1/un2f[0] ), .F1(\subMean1/un2[1] ), .Q1(\subMean1/un2f[1] ));
  subMean1_SLICE_169 \subMean1/SLICE_169 ( .B1(\subMean1/fifo_out[3] ), 
    .A1(subMean_left_valid_c), .C0(\subMean1/fifo_out[2] ), 
    .A0(subMean_left_valid_c), .DI1(\subMean1/un2[3] ), 
    .DI0(\subMean1/un2[2] ), .CLK(fpga_clk), .F0(\subMean1/un2[2] ), 
    .Q0(\subMean1/un2f[2] ), .F1(\subMean1/un2[3] ), .Q1(\subMean1/un2f[3] ));
  subMean1_SLICE_170 \subMean1/SLICE_170 ( .C1(subMean_left_valid_c), 
    .B1(\subMean1/fifo_out[5] ), .C0(subMean_left_valid_c), 
    .B0(\subMean1/fifo_out[4] ), .DI1(\subMean1/un2[5] ), 
    .DI0(\subMean1/un2[4] ), .CLK(fpga_clk), .F0(\subMean1/un2[4] ), 
    .Q0(\subMean1/un2f[4] ), .F1(\subMean1/un2[5] ), .Q1(\subMean1/un2f[5] ));
  subMean1_SLICE_171 \subMean1/SLICE_171 ( .C1(\subMean1/fifo_out[7] ), 
    .A1(subMean_left_valid_c), .C0(\subMean1/fifo_out[6] ), 
    .A0(subMean_left_valid_c), .DI1(\subMean1/un2[7] ), 
    .DI0(\subMean1/un2[6] ), .CLK(fpga_clk), .F0(\subMean1/un2[6] ), 
    .Q0(\subMean1/un2f[6] ), .F1(\subMean1/un2[7] ), .Q1(\subMean1/un2f[7] ));
  subMean1_SLICE_172 \subMean1/SLICE_172 ( .D1(\subMean1/fifo_out[9] ), 
    .A1(subMean_left_valid_c), .C0(\subMean1/fifo_out[8] ), 
    .A0(subMean_left_valid_c), .DI1(\subMean1/un2[9] ), 
    .DI0(\subMean1/un2[8] ), .CLK(fpga_clk), .F0(\subMean1/un2[8] ), 
    .Q0(\subMean1/un2f[8] ), .F1(\subMean1/un2[9] ), .Q1(\subMean1/un2f[9] ));
  subMean1_SLICE_173 \subMean1/SLICE_173 ( .D1(subMean_left_valid_c), 
    .B1(\subMean1/fifo_out[11] ), .D0(subMean_left_valid_c), 
    .B0(\subMean1/fifo_out[10] ), .DI1(\subMean1/un2[11] ), 
    .DI0(\subMean1/un2[10] ), .CLK(fpga_clk), .F0(\subMean1/un2[10] ), 
    .Q0(\subMean1/un2f[10] ), .F1(\subMean1/un2[11] ), 
    .Q1(\subMean1/un2f[11] ));
  subMean1_SLICE_174 \subMean1/SLICE_174 ( .C1(\subMean1/fifo_out[13] ), 
    .A1(subMean_left_valid_c), .C0(\subMean1/fifo_out[12] ), 
    .A0(subMean_left_valid_c), .DI1(\subMean1/un2[13] ), 
    .DI0(\subMean1/un2[12] ), .CLK(fpga_clk), .F0(\subMean1/un2[12] ), 
    .Q0(\subMean1/un2f[12] ), .F1(\subMean1/un2[13] ), 
    .Q1(\subMean1/un2f[13] ));
  subMean1_SLICE_175 \subMean1/SLICE_175 ( .B0(\subMean1/fifo_out[14] ), 
    .A0(subMean_left_valid_c), .DI0(\subMean1/un2[14] ), 
    .M1(\subMean1/sum[16] ), .CLK(fpga_clk), .F0(\subMean1/un2[14] ), 
    .Q0(\subMean1/un2f[14] ), .Q1(\subMean1/avg[12] ));
  subMean1_SLICE_176 \subMean1/SLICE_176 ( .D0(\subMean1/Full ), 
    .B0(\subMean1/r1/temp ), .A0(subMean_left_valid_c), 
    .DI0(\subMean1/r1/N_2145_0 ), .M1(\subMean1/sum[4] ), .CLK(fpga_clk), 
    .F0(\subMean1/r1/N_2145_0 ), .Q0(subMean_left_valid_c), 
    .Q1(\subMean1/avg[0] ));
  port1_i2s_rx_inst_SLICE_177 \port1/i2s_rx_inst/SLICE_177 ( 
    .A0(\port1/i2s_rx_inst/right_data_ones_compl_i[0] ), 
    .DI0(\port1/i2s_rx_inst/right_data_ones_compl_i_i[0] ), 
    .M1(\port1/i2s_rx_inst/d1_left_vld ), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port1/i2s_rx_inst/right_data_ones_compl_i_i[0] ), .Q0(un1_fifo_in1), 
    .Q1(o_left_vld));
  zcr2_SLICE_178 \zcr2/SLICE_178 ( .C1(\zcr2/window_count[2] ), 
    .A1(\zcr2/window_count[3] ), .D0(\zcr2/N_447 ), .C0(\zcr2/N_293 ), 
    .B0(\zcr2/N_446 ), .A0(\zcr2.window_count[6] ), 
    .DI0(\zcr2/window_count_RNO[6] ), .CLK(fpga_clk), 
    .F0(\zcr2/window_count_RNO[6] ), .Q0(\zcr2.window_count[6] ), 
    .F1(\zcr2/N_446 ));
  zcr2_SLICE_179 \zcr2/SLICE_179 ( .D1(\zcr2/N_320 ), 
    .C1(\zcr2/current_2_62_i_18 ), .B1(\zcr2/un3lto0 ), .A1(\zcr2/un3lto1 ), 
    .D0(\zcr2/current_2_62_i_19 ), .C0(\zcr2/N_14_i_1 ), .B0(\zcr2/N_321 ), 
    .A0(\zcr2/un3lto0 ), .DI0(\zcr2/N_14_i ), .CE(\zcr2/N_291_i ), 
    .CLK(fpga_clk), .F0(\zcr2/N_14_i ), .Q0(\zcr2/current ), 
    .F1(\zcr2/N_14_i_1 ));
  zcr2_SLICE_180 \zcr2/SLICE_180 ( .D1(\zcr2/un72_not_previous_62_i_18[0] ), 
    .C1(\zcr2/un3lto1 ), .B1(\zcr2/un3lto0 ), .A1(\zcr2/N_320 ), 
    .D0(\zcr2/N_321 ), .C0(\zcr2/un72_not_previous_62_i_20[0] ), 
    .B0(\zcr2/un3lto0 ), .A0(\zcr2/un72_not_previous_62_i_19[0] ), 
    .DI0(\zcr2/N_16 ), .CE(\zcr2/N_291_i ), .CLK(fpga_clk), .F0(\zcr2/N_16 ), 
    .Q0(\zcr2/not_previous ), .F1(\zcr2/un72_not_previous_62_i_20[0] ));
  zcr2_SLICE_181 \zcr2/SLICE_181 ( .D1(\zcr2/un3lto0 ), .A1(\zcr2/un3lto1 ), 
    .B0(\zcr2.window_count[6] ), .A0(\zcr2/un3lto0 ), 
    .DI1(\zcr2/un3_window_count_1[1] ), .DI0(\zcr2/window_count_3[0] ), 
    .CLK(fpga_clk), .F0(\zcr2/window_count_3[0] ), .Q0(\zcr2/un3lto0 ), 
    .F1(\zcr2/un3_window_count_1[1] ), .Q1(\zcr2/un3lto1 ));
  zcr2_SLICE_182 \zcr2/SLICE_182 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/window_count[3] ), .B1(\zcr2/un3lto0 ), .A1(\zcr2/un3lto1 ), 
    .D0(\zcr2/window_count[2] ), .B0(\zcr2/un3lto0 ), .A0(\zcr2/un3lto1 ), 
    .DI1(\zcr2/un3_window_count_1[3] ), .DI0(\zcr2/un3_window_count_1[2] ), 
    .CLK(fpga_clk), .F0(\zcr2/un3_window_count_1[2] ), 
    .Q0(\zcr2/window_count[2] ), .F1(\zcr2/un3_window_count_1[3] ), 
    .Q1(\zcr2/window_count[3] ));
  zcr2_SLICE_183 \zcr2/SLICE_183 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/un3_window_count_1_c3 ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/window_count[5] ), .D0(\zcr2/window_count[3] ), 
    .C0(\zcr2/un3_window_count_1_c3 ), .A0(\zcr2/window_count[4] ), 
    .DI1(\zcr2/un3_window_count_1[5] ), .DI0(\zcr2/un3_window_count_1[4] ), 
    .CLK(fpga_clk), .F0(\zcr2/un3_window_count_1[4] ), 
    .Q0(\zcr2/window_count[4] ), .F1(\zcr2/un3_window_count_1[5] ), 
    .Q1(\zcr2/window_count[5] ));
  zcr2_SLICE_184 \zcr2/SLICE_184 ( .C0(\horizontal_out_c[15] ), 
    .B0(\zcr2.window_count[6] ), .DI0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/zcr_window[0]_RNO[15] ), .CLK(fpga_clk), 
    .F0(\zcr2/zcr_window[1]_4[15] ), .Q0(\zcr2/zcr_window[0][15] ));
  SLICE_222 SLICE_222( .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_42 ), 
    .CLK(fpga_clk), .F0(GND), .Q0(\zcr2/zcr_window[44][15] ));
  SLICE_223 SLICE_223( .C1(\port1/i2s_rx_inst/o_right_data[15] ), 
    .C0(\un1_fifo_in1[1] ), .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_40 ), 
    .CLK(fpga_clk), .F0(\horizontal_port/un1_fifo_in1_i[1] ), 
    .Q0(\zcr2/zcr_window[45][15] ), .F1(\o_right_data_i[15] ));
  SLICE_224 SLICE_224( .B1(\un1_fifo_in1[2] ), .D0(\un1_fifo_in1[3] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_55 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[3] ), .Q0(\zcr2/zcr_window[46][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[2] ));
  SLICE_225 SLICE_225( .B1(\un1_fifo_in1[4] ), .C0(\un1_fifo_in1[5] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_53 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[5] ), .Q0(\zcr2/zcr_window[47][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[4] ));
  SLICE_226 SLICE_226( .D1(\un1_fifo_in1[6] ), .A0(\un1_fifo_in1[7] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_38 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[7] ), .Q0(\zcr2/zcr_window[48][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[6] ));
  SLICE_227 SLICE_227( .A1(\un1_fifo_in1[8] ), .B0(\un1_fifo_in1[9] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_35 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[9] ), .Q0(\zcr2/zcr_window[49][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[8] ));
  SLICE_228 SLICE_228( .A1(\un1_fifo_in1[10] ), .B0(\un1_fifo_in1[11] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_80 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[11] ), .Q0(\zcr2/zcr_window[4][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[10] ));
  SLICE_229 SLICE_229( .B1(\un1_fifo_in1[12] ), .D0(\un1_fifo_in1[13] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_33 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[13] ), .Q0(\zcr2/zcr_window[50][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[12] ));
  SLICE_230 SLICE_230( .D1(\un1_fifo_in1[14] ), .B0(\un1_fifo_in1[15] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_51 ), .CLK(fpga_clk), 
    .F0(\horizontal_port/un1_fifo_in1_i[15] ), .Q0(\zcr2/zcr_window[51][15] ), 
    .F1(\horizontal_port/un1_fifo_in1_i[14] ));
  SLICE_231 SLICE_231( .D1(\f1/counter[4] ), .C1(\f1/counter[0] ), 
    .B1(\f1/counter[1] ), .A1(\f1/counter[3] ), 
    .C0(un1_o_left_data2_1_s_15_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_31 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[15] ), 
    .Q0(\zcr2/zcr_window[52][15] ), .F1(\f1/state_3_i_0_a2_0_3 ));
  SLICE_232 SLICE_232( .B1(un1_o_left_data2_1_cry_13_0_S1), 
    .B0(un1_o_left_data2_1_cry_13_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_29 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[13] ), 
    .Q0(\zcr2/zcr_window[53][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[14] ));
  SLICE_233 SLICE_233( .D1(un1_o_left_data2_1_cry_11_0_S1), 
    .D0(un1_o_left_data2_1_cry_11_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_49 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[11] ), 
    .Q0(\zcr2/zcr_window[54][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[12] ));
  SLICE_234 SLICE_234( .A1(un1_o_left_data2_1_cry_9_0_S1), 
    .A0(un1_o_left_data2_1_cry_9_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_47 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[9] ), 
    .Q0(\zcr2/zcr_window[55][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[10] ));
  SLICE_235 SLICE_235( .A1(un1_o_left_data2_1_cry_7_0_S1), 
    .A0(un1_o_left_data2_1_cry_7_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_26 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[7] ), 
    .Q0(\zcr2/zcr_window[56][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[8] ));
  SLICE_236 SLICE_236( .B1(un1_o_left_data2_1_cry_5_0_S1), 
    .B0(un1_o_left_data2_1_cry_5_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_45 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[5] ), 
    .Q0(\zcr2/zcr_window[57][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[6] ));
  SLICE_237 SLICE_237( .C1(un1_o_left_data2_1_cry_3_0_S1), 
    .C0(un1_o_left_data2_1_cry_3_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_43 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[3] ), 
    .Q0(\zcr2/zcr_window[58][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[4] ));
  SLICE_238 SLICE_238( .B1(un1_o_left_data2_1_cry_1_0_S1), 
    .B0(un1_o_left_data2_1_cry_1_0_S0), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_41 ), .CLK(fpga_clk), 
    .F0(\vertical_port/un1_o_left_data2_1_i[1] ), 
    .Q0(\zcr2/zcr_window[59][15] ), 
    .F1(\vertical_port/un1_o_left_data2_1_i[2] ));
  SLICE_239 SLICE_239( .D1(\zcr2/zcr_window[26][15] ), 
    .C1(\zcr2/zcr_window[18][15] ), .A1(\zcr2/window_count[3] ), 
    .C0(\subMean1/avg[15] ), .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_78 ), 
    .CLK(fpga_clk), .F0(\subMean1/avg_i[15] ), .Q0(\zcr2/zcr_window[5][15] ), 
    .F1(\zcr2/N_290 ));
  SLICE_240 SLICE_240( .B1(\subMean1/subMean_left_valid_cf ), 
    .A1(\subMean1/sumf[15] ), .B0(\subMean1/horizontal_out_cf[14] ), 
    .A0(\subMean1/un2f[14] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_24 ), .CLK(fpga_clk), .F0(\subMean1/un1_sum_43 ), 
    .Q0(\zcr2/zcr_window[60][15] ), .F1(\subMean1/un1_sum_74 ));
  SLICE_241 SLICE_241( .C1(\subMean1/un2f[13] ), 
    .B1(\subMean1/horizontal_out_cf[13] ), .D0(\subMean1/un2f[12] ), 
    .C0(\subMean1/horizontal_out_cf[12] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_22 ), .CLK(fpga_clk), .F0(\subMean1/un1_sum_37 ), 
    .Q0(\zcr2/zcr_window[61][15] ), .F1(\subMean1/un1_sum_40 ));
  SLICE_242 SLICE_242( .B1(\subMean1/un2f[11] ), 
    .A1(\subMean1/horizontal_out_cf[11] ), 
    .B0(\subMean1/horizontal_out_cf[10] ), .A0(\subMean1/un2f[10] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_39 ), .CLK(fpga_clk), 
    .F0(\subMean1/un1_sum_31 ), .Q0(\zcr2/zcr_window[62][15] ), 
    .F1(\subMean1/un1_sum_34_0 ));
  SLICE_243 SLICE_243( .D1(\subMean1/horizontal_out_cf[9] ), 
    .B1(\subMean1/un2f[9] ), .C0(\subMean1/un2f[8] ), 
    .A0(\subMean1/horizontal_out_cf[8] ), .M0(\horizontal_out_c[15] ), 
    .CE(\zcr2/zcr_window[63]_0_sqmuxa ), .CLK(fpga_clk), 
    .F0(\subMean1/un1_sum_25 ), .Q0(\zcr2/zcr_window[63][15] ), 
    .F1(\subMean1/un1_sum_28 ));
  SLICE_244 SLICE_244( .D1(\subMean1/horizontal_out_cf[7] ), 
    .A1(\subMean1/un2f[7] ), .C0(\subMean1/horizontal_out_cf[6] ), 
    .B0(\subMean1/un2f[6] ), .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_97 ), 
    .CLK(fpga_clk), .F0(\subMean1/un1_sum_19_0 ), 
    .Q0(\zcr2/zcr_window[6][15] ), .F1(\subMean1/un1_sum_22 ));
  SLICE_245 SLICE_245( .D1(\subMean1/horizontal_out_cf[5] ), 
    .B1(\subMean1/un2f[5] ), .C0(\subMean1/horizontal_out_cf[4] ), 
    .B0(\subMean1/un2f[4] ), .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_95 ), 
    .CLK(fpga_clk), .F0(\subMean1/un1_sum_13 ), .Q0(\zcr2/zcr_window[7][15] ), 
    .F1(\subMean1/un1_sum_16 ));
  SLICE_246 SLICE_246( .B1(\subMean1/horizontal_out_cf[3] ), 
    .A1(\subMean1/un2f[3] ), .D0(\subMean1/un2f[2] ), 
    .C0(\subMean1/horizontal_out_cf[2] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_76 ), .CLK(fpga_clk), .F0(\subMean1/un1_sum_7 ), 
    .Q0(\zcr2/zcr_window[8][15] ), .F1(\subMean1/un1_sum_10 ));
  SLICE_247 SLICE_247( .B1(\subMean1/un2f[1] ), 
    .A1(\subMean1/horizontal_out_cf[1] ), .C0(\subMean1/avg[0] ), 
    .B0(\horizontal_out_c[0] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_74 ), .CLK(fpga_clk), .F0(\subMean1.un2_subMean_out_axb_0_i ), 
    .Q0(\zcr2/zcr_window[9][15] ), .F1(\subMean1/un1_sum_4_0 ));
  zcr2_current_2_62_i_m2_8_SLICE_248 \zcr2/current_2_62_i_m2_8/SLICE_248 ( 
    .D1(\zcr2/zcr_window[22][15] ), .C1(\zcr2/window_count[5] ), 
    .B1(\zcr2/zcr_window[54][15] ), .D0(\zcr2/zcr_window[38][15] ), 
    .C0(\zcr2/window_count[5] ), .B0(\zcr2/zcr_window[6][15] ), 
    .M0(\zcr2/window_count[4] ), .OFX0(\zcr2/N_485 ));
  zcr2_current_2_62_i_o2_4_1_tz_SLICE_249 
    \zcr2/current_2_62_i_o2_4_1_tz/SLICE_249 ( .D1(\zcr2/un3lto1 ), 
    .C1(\zcr2/zcr_window[43][15] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/zcr_window[45][15] ), .D0(\zcr2/un3lto1 ), 
    .C0(\zcr2/zcr_window[29][15] ), .B0(\zcr2/window_count[4] ), 
    .A0(\zcr2/zcr_window[27][15] ), .M0(\zcr2/window_count[5] ), 
    .OFX0(\zcr2/current_2_62_i_o2_4_1_tz ));
  zcr2_current_2_62_i_o2_4_0_tz_SLICE_250 
    \zcr2/current_2_62_i_o2_4_0_tz/SLICE_250 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/un3lto1 ), .B1(\zcr2/zcr_window[57][15] ), 
    .A1(\zcr2/zcr_window[55][15] ), .D0(\zcr2/window_count[2] ), 
    .C0(\zcr2/un3lto1 ), .B0(\zcr2/zcr_window[53][15] ), 
    .A0(\zcr2/zcr_window[51][15] ), .M0(\zcr2/window_count[3] ), 
    .OFX0(\zcr2/current_2_62_i_o2_4_0_tz ));
  SLICE_251 SLICE_251( .D1(o_left_vld), .A1(o_right_vld2_c), 
    .OFX0(\ste2/sq1/mem_0_0_0_f5a ), .F1(wr_en2));
  zcr2_SLICE_252 \zcr2/SLICE_252 ( .D1(\zcr2/zcr_window[40][15] ), 
    .C1(\zcr2/window_count[4] ), .B1(\zcr2/zcr_window[8][15] ), 
    .A1(\zcr2/window_count[5] ), .D0(\zcr2/N_524 ), 
    .C0(\zcr2/window_count[4] ), .B0(\zcr2/zcr_window[56][15] ), 
    .A0(\zcr2/window_count[5] ), .F0(\zcr2/N_310 ), .F1(\zcr2/N_524 ));
  zcr2_SLICE_253 \zcr2/SLICE_253 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/N_522 ), .B1(\zcr2/zcr_window[28][15] ), 
    .A1(\zcr2/window_count[3] ), .D0(\zcr2/window_count[2] ), 
    .C0(\zcr2/zcr_window[16][15] ), .B0(\zcr2/zcr_window[24][15] ), 
    .A0(\zcr2/window_count[3] ), .F0(\zcr2/N_522 ), .F1(\zcr2/N_309 ));
  zcr2_SLICE_254 \zcr2/SLICE_254 ( .D1(\zcr2/zcr_window[4][15] ), 
    .C1(\zcr2/zcr_window[20][15] ), .A1(\zcr2/window_count[4] ), 
    .D0(\zcr2/zcr_window[52][15] ), .C0(\zcr2/N_466 ), 
    .B0(\zcr2/window_count[5] ), .A0(\zcr2/window_count[4] ), 
    .F0(\zcr2/N_308 ), .F1(\zcr2/N_466 ));
  zcr2_SLICE_255 \zcr2/SLICE_255 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/zcr_window[36][15] ), .B1(\zcr2/zcr_window[32][15] ), 
    .D0(\zcr2/window_count[2] ), .C0(\zcr2/window_count[3] ), 
    .B0(\zcr2/N_481 ), .A0(\zcr2/zcr_window[44][15] ), .F0(\zcr2/N_307 ), 
    .F1(\zcr2/N_481 ));
  SLICE_256 SLICE_256( .D1(\ste2/window_count[5] ), 
    .C1(\ste2.window_count[6] ), .B1(\ste2/window_count[2] ), 
    .A1(\ste2/window_count[4] ), .D0(\ste2/N_9_4 ), .C0(\ste2/un3lto0 ), 
    .B0(\ste2/un3lto1 ), .A0(\ste2/window_count[3] ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[2] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[1] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\ste2/N_9_i ), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[2] ), .F1(\ste2/N_9_4 ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[3] ));
  zcr2_SLICE_257 \zcr2/SLICE_257 ( .D1(\zcr2/N_309 ), .C1(\zcr2/N_334 ), 
    .B1(\zcr2/N_543 ), .A1(\zcr2/current_2_62_i_7_1 ), 
    .D0(\zcr2/window_count[3] ), .C0(\zcr2/window_count[2] ), 
    .B0(\zcr2/N_333_1 ), .A0(\zcr2/N_489 ), .F0(\zcr2/current_2_62_i_7_1 ), 
    .F1(\zcr2/current_2_62_i_7 ));
  zcr2_SLICE_258 \zcr2/SLICE_258 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/N_456 ), .B1(\zcr2/N_292 ), .A1(\zcr2/window_count[3] ), 
    .D0(\zcr2/window_count[4] ), .C0(\zcr2/un3lto0 ), .B0(\zcr2/un3lto1 ), 
    .A0(\zcr2/window_count[5] ), .F0(\zcr2/N_456 ), .F1(\zcr2/N_46 ));
  zcr2_SLICE_259 \zcr2/SLICE_259 ( .D1(\zcr2/current_2_62_i_a2_15_0 ), 
    .C1(\zcr2/N_538 ), .B1(\zcr2/current_2_62_i_a2_14_0 ), .A1(\zcr2/N_333_1 ), 
    .C0(\zcr2/window_count[4] ), .B0(\zcr2/un3lto1 ), .A0(\zcr2/un3lto0 ), 
    .F0(\zcr2/N_333_1 ), .F1(\zcr2/current_2_62_i_1 ));
  zcr2_SLICE_260 \zcr2/SLICE_260 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/N_539 ), .D0(\zcr2/window_count[3] ), 
    .C0(\zcr2/window_count[2] ), .B0(\zcr2/un3lto1 ), .A0(\zcr2/un3lto0 ), 
    .F0(\zcr2/N_539 ), .F1(\zcr2/N_76 ));
  zcr2_SLICE_261 \zcr2/SLICE_261 ( .D1(\zcr2/N_290 ), 
    .C1(\zcr2/window_count[2] ), .A1(\zcr2/N_537 ), .D0(\zcr2/un3lto1 ), 
    .C0(\zcr2/window_count[5] ), .B0(\zcr2/window_count[4] ), 
    .A0(\zcr2/un3lto0 ), .F0(\zcr2/N_537 ), .F1(\zcr2/N_343 ));
  zcr2_SLICE_262 \zcr2/SLICE_262 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/N_462 ), .B1(\zcr2/N_292 ), .A1(\zcr2/window_count[3] ), 
    .D0(\zcr2/un3lto1 ), .C0(\zcr2/un3lto0 ), .B0(\zcr2/window_count[4] ), 
    .A0(\zcr2/window_count[5] ), .F0(\zcr2/N_462 ), .F1(\zcr2/N_60 ));
  zcr2_SLICE_263 \zcr2/SLICE_263 ( .D1(\zcr2/N_292 ), .C1(\zcr2/N_458 ), 
    .B1(\zcr2/window_count[4] ), .A1(\zcr2/window_count[5] ), 
    .D0(\zcr2/un3lto1 ), .C0(\zcr2/un3lto0 ), .B0(\zcr2/window_count[3] ), 
    .A0(\zcr2/window_count[2] ), .F0(\zcr2/N_458 ), .F1(\zcr2/N_91 ));
  zcr2_SLICE_264 \zcr2/SLICE_264 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/N_275 ), .B1(\zcr2/N_541 ), .D0(\zcr2/un3lto1 ), 
    .C0(\zcr2/un3lto0 ), .B0(\zcr2/window_count[2] ), 
    .A0(\zcr2/window_count[3] ), .F0(\zcr2/N_541 ), .F1(\zcr2/N_370 ));
  zcr2_SLICE_265 \zcr2/SLICE_265 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/N_464 ), .D0(\zcr2/un3lto1 ), .C0(\zcr2/window_count[3] ), 
    .B0(\zcr2/window_count[2] ), .A0(\zcr2/un3lto0 ), .F0(\zcr2/N_464 ), 
    .F1(\zcr2/N_79 ));
  zcr2_SLICE_266 \zcr2/SLICE_266 ( .D1(\zcr2/zcr_window[11][15] ), 
    .C1(\zcr2/N_460 ), .B1(\zcr2/un3lto1 ), .A1(\zcr2/zcr_window[13][15] ), 
    .D0(\zcr2/window_count[2] ), .C0(\zcr2/window_count[4] ), 
    .B0(\zcr2/window_count[3] ), .A0(\zcr2/window_count[5] ), 
    .F0(\zcr2/N_460 ), .F1(\zcr2/N_532 ));
  zcr2_SLICE_267 \zcr2/SLICE_267 ( .D1(\zcr2/current_2_62_i_a2_18_0 ), 
    .C1(\zcr2/N_454 ), .B1(\zcr2/N_462 ), 
    .A1(\zcr2/un72_not_previous_62_i_a2_11_0[0] ), .D0(\zcr2/window_count[2] ), 
    .C0(\zcr2/zcr_window[18][15] ), .B0(\zcr2/zcr_window[26][15] ), 
    .A0(\zcr2/window_count[3] ), .F0(\zcr2/un72_not_previous_62_i_a2_11_0[0] ), 
    .F1(\zcr2/un72_not_previous_62_i_6[0] ));
  zcr2_SLICE_268 \zcr2/SLICE_268 ( .D1(\zcr2/zcr_window[34][15] ), 
    .C1(\zcr2/zcr_window[2][15] ), .B1(\zcr2/window_count[5] ), 
    .D0(\zcr2/window_count[3] ), .C0(\zcr2/N_275 ), 
    .A0(\zcr2/window_count[2] ), .F0(\zcr2/current_2_62_i_a2_14_0 ), 
    .F1(\zcr2/N_275 ));
  zcr2_SLICE_269 \zcr2/SLICE_269 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/N_292 ), .B1(\zcr2/N_454 ), .A1(\zcr2/window_count[5] ), 
    .D0(rd_en1), .C0(rst_c), .B0(lock), .A0(\zcr2.window_count[6] ), 
    .F0(\zcr2/N_292 ), .F1(\zcr2/N_74 ));
  zcr2_SLICE_270 \zcr2/SLICE_270 ( .D1(\zcr2/un3lto1 ), .A1(\zcr2/un3lto0 ), 
    .D0(\zcr2/window_count[2] ), .C0(\zcr2/N_293 ), 
    .B0(\zcr2/current_2_62_i_a2_15_0 ), .A0(\zcr2/window_count[3] ), 
    .F0(\zcr2/N_371 ), .F1(\zcr2/N_293 ));
  zcr2_SLICE_271 \zcr2/SLICE_271 ( .D1(\zcr2/N_353 ), .C1(\zcr2/N_544 ), 
    .B1(\zcr2/current_2_62_i_12 ), .A1(\zcr2/zcr_window[1][15] ), 
    .D0(\zcr2/zcr_window[30][15] ), .C0(\zcr2/window_count[2] ), 
    .B0(\zcr2/N_537 ), .A0(\zcr2/window_count[3] ), .F0(\zcr2/N_353 ), 
    .F1(\zcr2/current_2_62_i_17 ));
  zcr2_SLICE_272 \zcr2/SLICE_272 ( .C1(\zcr2/window_count[5] ), 
    .B1(\zcr2/window_count[4] ), .D0(\zcr2/N_446 ), .C0(\zcr2/N_447 ), 
    .B0(\zcr2/N_293 ), .A0(\zcr2/N_292 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_46 ), .CLK(fpga_clk), .F0(\zcr2/zcr_window[63]_0_sqmuxa ), 
    .Q0(\zcr2/zcr_window[40][15] ), .F1(\zcr2/N_447 ));
  zcr2_SLICE_273 \zcr2/SLICE_273 ( .D1(\zcr2/un3lto0 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/un3lto1 ), .D0(\zcr2/N_543 ), .C0(\zcr2/N_292 ), 
    .B0(\zcr2/window_count[3] ), .A0(\zcr2/window_count[2] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_70 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_66 ), .Q0(\zcr2/zcr_window[13][15] ), .F1(\zcr2/N_543 ));
  zcr2_SLICE_274 \zcr2/SLICE_274 ( .D1(\zcr2/un3lto1 ), .C1(\zcr2/un3lto0 ), 
    .B1(\zcr2/window_count[4] ), .A1(\zcr2/window_count[5] ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/N_540 ), .B0(\zcr2/window_count[2] ), 
    .A0(\zcr2/window_count[3] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_103 ), .CLK(fpga_clk), .F0(\zcr2/N_52 ), 
    .Q0(\zcr2/zcr_window[1][15] ), .F1(\zcr2/N_540 ));
  zcr2_SLICE_275 \zcr2/SLICE_275 ( .D1(\zcr2/window_count[2] ), 
    .A1(\zcr2/window_count[3] ), .D0(\zcr2/N_447 ), .C0(\zcr2/N_295 ), 
    .B0(\zcr2/N_448 ), .A0(\zcr2/N_292 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_58 ), .CLK(fpga_clk), .F0(\zcr2/N_38 ), 
    .Q0(\zcr2/zcr_window[28][15] ), .F1(\zcr2/N_295 ));
  zcr2_SLICE_276 \zcr2/SLICE_276 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/un3lto1 ), .A1(\zcr2/un3lto0 ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/window_count[2] ), .B0(\zcr2/N_455 ), 
    .A0(\zcr2/window_count[3] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_89 ), .CLK(fpga_clk), .F0(\zcr2/zcr_window[18]_RNO[15] ), 
    .Q0(\zcr2/zcr_window[14][15] ), .F1(\zcr2/N_455 ));
  zcr2_SLICE_277 \zcr2/SLICE_277 ( .D1(\zcr2/un3lto1 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/un3lto0 ), .D0(\zcr2/N_292 ), .C0(\zcr2/window_count[3] ), 
    .B0(\zcr2/window_count[2] ), .A0(\zcr2/N_463 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_64 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_67 ), .Q0(\zcr2/zcr_window[20][15] ), .F1(\zcr2/N_463 ));
  zcr2_SLICE_278 \zcr2/SLICE_278 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/window_count[3] ), .B1(\zcr2/un3lto1 ), .A1(\zcr2/un3lto0 ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/window_count[4] ), .B0(\zcr2/N_538 ), 
    .A0(\zcr2/window_count[5] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_54 ), .CLK(fpga_clk), .F0(\zcr2/N_49 ), 
    .Q0(\zcr2/zcr_window[32][15] ), .F1(\zcr2/N_538 ));
  zcr2_SLICE_279 \zcr2/SLICE_279 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/window_count[3] ), .B1(\zcr2/un3lto1 ), .A1(\zcr2/un3lto0 ), 
    .D0(\zcr2/window_count[4] ), .C0(\zcr2/window_count[5] ), 
    .B0(\zcr2/N_292 ), .A0(\zcr2/N_454 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_65 ), .CLK(fpga_clk), .F0(\zcr2/N_45 ), 
    .Q0(\zcr2/zcr_window[35][15] ), .F1(\zcr2/N_454 ));
  zcr2_SLICE_280 \zcr2/SLICE_280 ( .D1(\zcr2/un3lto1 ), .C1(\zcr2/un3lto0 ), 
    .B1(\zcr2/window_count[2] ), .A1(\zcr2/window_count[3] ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/window_count[5] ), 
    .B0(\zcr2/window_count[4] ), .A0(\zcr2/N_542 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_50 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_43 ), .Q0(\zcr2/zcr_window[36][15] ), .F1(\zcr2/N_542 ));
  zcr2_SLICE_281 \zcr2/SLICE_281 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/window_count[5] ), 
    .A1(\zcr2/window_count[4] ), .D0(\zcr2/un3lto1 ), .C0(\zcr2/un3lto0 ), 
    .B0(\zcr2/N_292 ), .A0(\zcr2/N_296 ), .F0(\zcr2/zcr_window[0]_RNO[15] ), 
    .F1(\zcr2/N_296 ));
  zcr2_SLICE_282 \zcr2/SLICE_282 ( .D1(\zcr2/not_previous ), .C1(\zcr2/N_409 ), 
    .B1(\zcr2/current ), .A1(\zcr2/zcr_count_temp16_0_0_a2_i ), 
    .D0(\zcr2.window_count[6] ), .C0(\zcr2/N_296 ), .B0(\zcr2/un3lto0 ), 
    .A0(\zcr2/un3lto1 ), .F0(\zcr2/N_409 ), .F1(\zcr2/zcr_count_tempe ));
  zcr2_SLICE_283 \zcr2/SLICE_283 ( .B1(\zcr2/un3lto0 ), .A1(\zcr2/un3lto1 ), 
    .D0(\zcr2/N_446 ), .C0(\zcr2/N_448 ), .B0(\zcr2/N_292 ), .A0(\zcr2/N_447 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_61 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_24 ), .Q0(\zcr2/zcr_window[39][15] ), .F1(\zcr2/N_448 ));
  zcr2_SLICE_284 \zcr2/SLICE_284 ( .D1(\zcr2/un3lto0 ), 
    .C1(\zcr2/window_count[4] ), .B1(\zcr2/un3lto1 ), 
    .A1(\zcr2/window_count[5] ), .D0(\zcr2/window_count[3] ), 
    .C0(\zcr2/N_549 ), .B0(\zcr2/N_292 ), .A0(\zcr2/window_count[2] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_73 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_53 ), .Q0(\zcr2/zcr_window[27][15] ), .F1(\zcr2/N_549 ));
  zcr2_SLICE_285 \zcr2/SLICE_285 ( .D1(\zcr2/un3lto1 ), 
    .C1(\zcr2/window_count[3] ), .B1(\zcr2/window_count[2] ), 
    .A1(\zcr2/un3lto0 ), .D0(\zcr2/window_count[5] ), 
    .C0(\zcr2/window_count[4] ), .B0(\zcr2/N_461 ), .A0(\zcr2/N_292 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_69 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_29 ), .Q0(\zcr2/zcr_window[31][15] ), .F1(\zcr2/N_461 ));
  zcr2_SLICE_286 \zcr2/SLICE_286 ( .D1(\zcr2/un72_not_previous_62_i_9[0] ), 
    .C1(\zcr2/N_378 ), .B1(\zcr2/un72_not_previous_62_i_8[0] ), 
    .A1(\zcr2/un72_not_previous_62_i_7[0] ), .D0(\zcr2/window_count[2] ), 
    .C0(\zcr2/N_456 ), .B0(\zcr2/zcr_window[30][15] ), 
    .A0(\zcr2/window_count[3] ), .F0(\zcr2/N_378 ), 
    .F1(\zcr2/un72_not_previous_62_i_18[0] ));
  zcr2_SLICE_287 \zcr2/SLICE_287 ( .D1(\zcr2/zcr_window[0][15] ), 
    .C1(\zcr2/N_376 ), .B1(\zcr2/N_544 ), 
    .A1(\zcr2/un72_not_previous_62_i_12[0] ), .D0(\zcr2/zcr_window[1][15] ), 
    .C0(\zcr2/N_296 ), .B0(\zcr2/un3lto1 ), .A0(\zcr2/un3lto0 ), 
    .F0(\zcr2/N_376 ), .F1(\zcr2/un72_not_previous_62_i_17[0] ));
  zcr2_SLICE_288 \zcr2/SLICE_288 ( .D1(\zcr2/N_336 ), 
    .C1(\zcr2/current_2_62_i_1 ), .B1(\zcr2/current_2_62_i_14 ), 
    .A1(\zcr2/current_2_62_i_8 ), .D0(\zcr2/N_447 ), .C0(\zcr2/N_524 ), 
    .B0(\zcr2/zcr_window[56][15] ), .A0(\zcr2/N_454 ), .F0(\zcr2/N_336 ), 
    .F1(\zcr2/current_2_62_i_18 ));
  zcr2_SLICE_289 \zcr2/SLICE_289 ( .D1(lock), .C1(rd_en1), .A1(rst_c), 
    .D0(\zcr2.window_count[6] ), .C0(\zcr2/N_293 ), .B0(\zcr2/N_296 ), 
    .A0(un2_i_sys_rst_i_i_o2), .F0(\zcr2/N_291_i ), .F1(un2_i_sys_rst_i_i_o2));
  zcr2_SLICE_290 \zcr2/SLICE_290 ( .D1(\zcr2/N_370 ), 
    .C1(\zcr2/un72_not_previous_62_i_2[0] ), 
    .B1(\zcr2/current_2_62_i_a2_16_0 ), .A1(\zcr2/N_537 ), 
    .D0(\zcr2/un72_not_previous_62_i_11[0] ), 
    .C0(\zcr2/un72_not_previous_62_i_10[0] ), 
    .A0(\zcr2/un72_not_previous_62_i_17[0] ), 
    .F0(\zcr2/un72_not_previous_62_i_19[0] ), 
    .F1(\zcr2/un72_not_previous_62_i_10[0] ));
  zcr2_SLICE_291 \zcr2/SLICE_291 ( .D1(\zcr2/current_2_62_i_a2_12_0 ), 
    .C1(\zcr2/N_542 ), .B1(\zcr2/current_2_62_i_3 ), .A1(\zcr2/N_343 ), 
    .D0(\zcr2/current_2_62_i_10 ), .C0(\zcr2/current_2_62_i_17 ), 
    .B0(\zcr2/current_2_62_i_11 ), .F0(\zcr2/current_2_62_i_19 ), 
    .F1(\zcr2/current_2_62_i_10 ));
  zcr2_SLICE_292 \zcr2/SLICE_292 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[2] ), 
    .A1(\zcr2/window_count[4] ), .D0(\zcr2/current_2_62_i_7 ), 
    .C0(\zcr2/zcr_window[62][15] ), .B0(\zcr2/N_293 ), .A0(\zcr2/N_457 ), 
    .F0(\zcr2/current_2_62_i_14 ), .F1(\zcr2/N_457 ));
  zcr2_SLICE_293 \zcr2/SLICE_293 ( .D1(\zcr2/current_2_62_i_a2_12_0 ), 
    .C1(\zcr2/N_458 ), .B1(\zcr2/N_461 ), .A1(\zcr2/current_2_62_i_a2_10_0 ), 
    .D0(\zcr2/N_371 ), .C0(\zcr2/un72_not_previous_62_i_5[0] ), 
    .B0(\zcr2/N_485 ), .A0(\zcr2/N_539 ), 
    .F0(\zcr2/un72_not_previous_62_i_11[0] ), 
    .F1(\zcr2/un72_not_previous_62_i_5[0] ));
  zcr2_SLICE_294 \zcr2/SLICE_294 ( .C1(\zcr2/current_2_62_i_a2_8_0 ), 
    .B1(\zcr2/N_463 ), .D0(\zcr2/N_464 ), .C0(\zcr2/N_340 ), 
    .B0(\zcr2/current_2_62_i_5 ), .A0(\zcr2/N_485 ), 
    .F0(\zcr2/current_2_62_i_11 ), .F1(\zcr2/N_340 ));
  zcr2_SLICE_295 \zcr2/SLICE_295 ( .D1(\zcr2/N_447 ), 
    .C1(\zcr2/current_2_62_i_o2_4_4 ), .B1(\zcr2/current_2_62_i_o2_4_0_tz ), 
    .A1(\zcr2/N_536 ), .D0(\zcr2/N_532 ), .C0(\zcr2/current_2_62_i_o2_4_1_tz ), 
    .B0(\zcr2/N_531 ), .A0(\zcr2/N_446 ), .F0(\zcr2/current_2_62_i_o2_4_4 ), 
    .F1(\zcr2/N_321 ));
  zcr2_SLICE_296 \zcr2/SLICE_296 ( .D1(\zcr2/N_448 ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/N_488 ), .A1(\zcr2/N_447 ), 
    .D0(\zcr2/N_455 ), .C0(\zcr2/N_357 ), .B0(\zcr2/N_309 ), .A0(\zcr2/N_358 ), 
    .F0(\zcr2/un72_not_previous_62_i_7[0] ), .F1(\zcr2/N_358 ));
  zcr2_SLICE_297 \zcr2/SLICE_297 ( .D1(\zcr2/current_2_62_i_a2_3_0 ), 
    .C1(\zcr2/N_448 ), .B1(\zcr2/N_446 ), .A1(\zcr2/N_364 ), 
    .C0(\zcr2/un72_not_previous_62_i_1[0] ), .B0(\zcr2/N_542 ), 
    .A0(\zcr2/N_310 ), .F0(\zcr2/un72_not_previous_62_i_9[0] ), 
    .F1(\zcr2/un72_not_previous_62_i_1[0] ));
  zcr2_SLICE_298 \zcr2/SLICE_298 ( .D1(\zcr2/N_456 ), .C1(\zcr2/N_462 ), 
    .B1(\zcr2/current_2_62_i_a2_17_0 ), .A1(\zcr2/current_2_62_i_a2_13_0 ), 
    .D0(\zcr2/un3lto1 ), .C0(\zcr2/current_2_62_i_6 ), .B0(\zcr2/N_296 ), 
    .A0(\zcr2/zcr_window[63][15] ), .F0(\zcr2/current_2_62_i_12 ), 
    .F1(\zcr2/current_2_62_i_6 ));
  zcr2_SLICE_299 \zcr2/SLICE_299 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/window_count[5] ), .C0(\zcr2/current_2_62_i_o2_3_0 ), 
    .B0(\zcr2/N_459 ), .A0(\zcr2/zcr_window[48][15] ), .F0(\zcr2/N_320 ), 
    .F1(\zcr2/N_459 ));
  zcr2_SLICE_300 \zcr2/SLICE_300 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/zcr_window[23][15] ), 
    .A1(\zcr2/zcr_window[15][15] ), .D0(\zcr2/N_543 ), .C0(\zcr2/N_540 ), 
    .B0(\zcr2/current_2_62_i_a2_17_0 ), .A0(\zcr2/current_2_62_i_a2_13_0 ), 
    .F0(\zcr2/un72_not_previous_62_i_2[0] ), 
    .F1(\zcr2/current_2_62_i_a2_17_0 ));
  zcr2_SLICE_301 \zcr2/SLICE_301 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/zcr_window[19][15] ), 
    .A1(\zcr2/zcr_window[3][15] ), .D0(\zcr2/current_2_62_i_a2_18_0 ), 
    .C0(\zcr2/N_541 ), .B0(\zcr2/current_2_62_i_a2_10_0 ), .A0(\zcr2/N_539 ), 
    .F0(\zcr2/current_2_62_i_3 ), .F1(\zcr2/current_2_62_i_a2_10_0 ));
  zcr2_SLICE_302 \zcr2/SLICE_302 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/zcr_window[25][15] ), .B1(\zcr2/window_count[3] ), 
    .A1(\zcr2/zcr_window[17][15] ), .D0(\zcr2/current_2_62_i_a2_3_0 ), 
    .C0(\zcr2/N_455 ), .B0(\zcr2/N_458 ), .A0(\zcr2/current_2_62_i_a2_16_0 ), 
    .F0(\zcr2/current_2_62_i_5 ), .F1(\zcr2/current_2_62_i_a2_16_0 ));
  zcr2_SLICE_303 \zcr2/SLICE_303 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/zcr_window[33][15] ), .B1(\zcr2/zcr_window[37][15] ), 
    .A1(\zcr2/window_count[3] ), .D0(\zcr2/N_549 ), 
    .B0(\zcr2/current_2_62_i_a2_8_0 ), .F0(\zcr2/N_364 ), 
    .F1(\zcr2/current_2_62_i_a2_8_0 ));
  zcr2_SLICE_304 \zcr2/SLICE_304 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/zcr_window[50][15] ), .A1(\zcr2/zcr_window[58][15] ), 
    .D0(\zcr2/window_count[2] ), .C0(\zcr2/N_488 ), .B0(\zcr2/N_293 ), 
    .A0(\zcr2/N_447 ), .F0(\zcr2/N_334 ), .F1(\zcr2/N_488 ));
  zcr2_SLICE_305 \zcr2/SLICE_305 ( .C1(\zcr2/zcr_window[46][15] ), 
    .B1(\zcr2/zcr_window[14][15] ), .A1(\zcr2/window_count[5] ), 
    .D0(\zcr2/window_count[4] ), .C0(\zcr2/N_489 ), .B0(\zcr2/N_295 ), 
    .A0(\zcr2/N_448 ), .F0(\zcr2/N_357 ), .F1(\zcr2/N_489 ));
  f1_SLICE_306 \f1/SLICE_306 ( .B1(\f1/state ), .A1(\f1/counter[6] ), 
    .D0(\f1/counter[2] ), .C0(\f1/N_545 ), .B0(\f1/state_3_i_0_a2_0_3 ), 
    .A0(\f1/counter[5] ), .M0(\f1/state ), .CE(i_sys_rst_i), .CLK(fpga_clk), 
    .F0(\f1/N_330 ), .Q0(rd_en1), .F1(\f1/N_545 ));
  SLICE_307 SLICE_307( .D1(\port1/count12_c2 ), .C1(\r_reg_RNIOPPB1[1] ), 
    .B1(\port1/count[3] ), .A1(\port1/count[2] ), .D0(\div8.r_reg[0] ), 
    .B0(\div8.r_reg[1] ), .A0(o_sck_c), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_57 ), .CLK(fpga_clk), .F0(\r_reg_RNIOPPB1[1] ), 
    .Q0(\zcr2/zcr_window[43][15] ), .F1(\port1/o_ws_0_RNO ));
  SLICE_308 SLICE_308( .D1(\port2.i2s_rx_inst.ws_reg_i ), 
    .C1(\r_reg_RNIOPPB1_0[1] ), .A1(\port1/i2s_rx_inst/ws_i ), .D0(o_sck_c), 
    .C0(\div8.r_reg[0] ), .B0(\div8.r_reg[1] ), .F0(\r_reg_RNIOPPB1_0[1] ), 
    .F1(ws_i_RNI5U2R1));
  zcr2_SLICE_309 \zcr2/SLICE_309 ( .D1(\zcr2/window_count[2] ), 
    .C1(\zcr2/N_462 ), .B1(\zcr2/window_count[3] ), .A1(\zcr2/N_292 ), 
    .D0(\zcr2/window_count[2] ), .C0(\zcr2/N_462 ), 
    .B0(\zcr2/window_count[3] ), .A0(\zcr2/N_292 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_72 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_68 ), .Q0(\zcr2/zcr_window[12][15] ), .F1(\zcr2/N_64 ));
  zcr2_SLICE_310 \zcr2/SLICE_310 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/N_292 ), .A1(\zcr2/N_456 ), 
    .D0(\zcr2/window_count[3] ), .C0(\zcr2/window_count[2] ), 
    .B0(\zcr2/N_292 ), .A0(\zcr2/N_456 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_60 ), .CLK(fpga_clk), .F0(\zcr2/N_42 ), 
    .Q0(\zcr2/zcr_window[24][15] ), .F1(\zcr2/N_50 ));
  zcr2_SLICE_311 \zcr2/SLICE_311 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/N_541 ), .B1(\zcr2/N_292 ), .A1(\zcr2/window_count[5] ), 
    .D0(\zcr2/window_count[4] ), .C0(\zcr2/N_541 ), .B0(\zcr2/N_292 ), 
    .A0(\zcr2/window_count[5] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_71 ), .CLK(fpga_clk), .F0(\zcr2/N_31 ), 
    .Q0(\zcr2/zcr_window[30][15] ), .F1(\zcr2/N_80 ));
  zcr2_SLICE_312 \zcr2/SLICE_312 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/N_537 ), 
    .A1(\zcr2/window_count[3] ), .D0(\zcr2/N_292 ), 
    .C0(\zcr2/window_count[2] ), .B0(\zcr2/N_537 ), 
    .A0(\zcr2/window_count[3] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_87 ), .CLK(fpga_clk), .F0(\zcr2/zcr_window[19]_RNO[15] ), 
    .Q0(\zcr2/zcr_window[15][15] ), .F1(\zcr2/N_69 ));
  zcr2_SLICE_313 \zcr2/SLICE_313 ( .D1(\zcr2/N_292 ), .C1(\zcr2/N_464 ), 
    .B1(\zcr2/window_count[5] ), .A1(\zcr2/window_count[4] ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/N_464 ), .B0(\zcr2/window_count[5] ), 
    .A0(\zcr2/window_count[4] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_52 ), .CLK(fpga_clk), .F0(\zcr2/N_47 ), 
    .Q0(\zcr2/zcr_window[33][15] ), .F1(\zcr2/N_61 ));
  zcr2_SLICE_314 \zcr2/SLICE_314 ( .D1(\zcr2/N_458 ), .C1(\zcr2/N_292 ), 
    .B1(\zcr2/window_count[4] ), .A1(\zcr2/window_count[5] ), 
    .D0(\zcr2/N_458 ), .C0(\zcr2/N_292 ), .B0(\zcr2/window_count[4] ), 
    .A0(\zcr2/window_count[5] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_48 ), .CLK(fpga_clk), .F0(\zcr2/N_41 ), 
    .Q0(\zcr2/zcr_window[37][15] ), .F1(\zcr2/N_73 ));
  zcr2_SLICE_315 \zcr2/SLICE_315 ( .D1(\zcr2/N_460 ), .C1(\zcr2/un3lto1 ), 
    .B1(\zcr2/un3lto0 ), .A1(\zcr2/N_292 ), .D0(\zcr2/N_460 ), 
    .C0(\zcr2/un3lto1 ), .B0(\zcr2/un3lto0 ), .A0(\zcr2/N_292 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_91 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_87 ), .Q0(\zcr2/zcr_window[11][15] ), .F1(\zcr2/N_70 ));
  zcr2_SLICE_316 \zcr2/SLICE_316 ( .D1(\zcr2/un3lto0 ), .C1(\zcr2/un3lto1 ), 
    .B1(\zcr2/N_292 ), .A1(\zcr2/N_460 ), .D0(\zcr2/un3lto0 ), 
    .C0(\zcr2/un3lto1 ), .B0(\zcr2/N_292 ), .A0(\zcr2/N_460 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_93 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_72 ), .Q0(\zcr2/zcr_window[10][15] ), .F1(\zcr2/N_89 ));
  zcr2_SLICE_317 \zcr2/SLICE_317 ( .D1(\zcr2/N_292 ), .C1(\zcr2/N_463 ), 
    .B1(\zcr2/window_count[2] ), .A1(\zcr2/window_count[3] ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/N_463 ), .B0(\zcr2/window_count[2] ), 
    .A0(\zcr2/window_count[3] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_75 ), .CLK(fpga_clk), .F0(\zcr2/N_55 ), 
    .Q0(\zcr2/zcr_window[26][15] ), .F1(\zcr2/N_44 ));
  zcr2_SLICE_318 \zcr2/SLICE_318 ( .D1(\zcr2/N_292 ), .C1(\zcr2/N_455 ), 
    .B1(\zcr2/window_count[2] ), .A1(\zcr2/window_count[3] ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/N_455 ), .B0(\zcr2/window_count[2] ), 
    .A0(\zcr2/window_count[3] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/zcr_window[18]_RNO[15] ), .CLK(fpga_clk), .F0(\zcr2/N_71 ), 
    .Q0(\zcr2/zcr_window[18][15] ), .F1(\zcr2/N_75 ));
  zcr2_SLICE_319 \zcr2/SLICE_319 ( .D1(\zcr2/N_292 ), .C1(\zcr2/un3lto1 ), 
    .B1(\zcr2/un3lto0 ), .A1(\zcr2/N_296 ), .D0(\zcr2/N_292 ), 
    .C0(\zcr2/un3lto1 ), .B0(\zcr2/un3lto0 ), .A0(\zcr2/N_296 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_81 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_99 ), .Q0(\zcr2/zcr_window[22][15] ), .F1(\zcr2/N_103 ));
  zcr2_SLICE_320 \zcr2/SLICE_320 ( .D1(\zcr2/N_461 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/N_292 ), .D0(\zcr2/N_461 ), .C0(\zcr2/window_count[5] ), 
    .B0(\zcr2/window_count[4] ), .A0(\zcr2/N_292 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_63 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_78 ), .Q0(\zcr2/zcr_window[38][15] ), .F1(\zcr2/N_62 ));
  zcr2_SLICE_321 \zcr2/SLICE_321 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/window_count[4] ), 
    .A1(\zcr2/N_454 ), .D0(\zcr2/N_292 ), .C0(\zcr2/window_count[5] ), 
    .B0(\zcr2/window_count[4] ), .A0(\zcr2/N_454 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_79 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_59 ), .Q0(\zcr2/zcr_window[23][15] ), .F1(\zcr2/N_77 ));
  zcr2_SLICE_322 \zcr2/SLICE_322 ( .D1(\zcr2/N_292 ), .C1(\zcr2/un3lto0 ), 
    .B1(\zcr2/un3lto1 ), .A1(\zcr2/N_457 ), .D0(\zcr2/N_292 ), 
    .C0(\zcr2/un3lto0 ), .B0(\zcr2/un3lto1 ), .A0(\zcr2/N_457 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_99 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_39 ), .Q0(\zcr2/zcr_window[3][15] ), .F1(\zcr2/N_22 ));
  zcr2_SLICE_323 \zcr2/SLICE_323 ( .D1(\zcr2/N_292 ), .C1(\zcr2/un3lto1 ), 
    .B1(\zcr2/N_459 ), .A1(\zcr2/un3lto0 ), .D0(\zcr2/N_292 ), 
    .C0(\zcr2/un3lto1 ), .B0(\zcr2/N_459 ), .A0(\zcr2/un3lto0 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_56 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_33 ), .Q0(\zcr2/zcr_window[29][15] ), .F1(\zcr2/N_35 ));
  SLICE_324 SLICE_324( .D1(\div8.r_reg[0] ), .C1(\port2.i2s_rx_inst.ws_reg_i ), 
    .B1(\div8.r_reg[1] ), .A1(o_sck_c), .D0(\div8.r_reg[0] ), 
    .C0(\port2.i2s_rx_inst.ws_reg_i ), .B0(\div8.r_reg[1] ), .A0(o_sck_c), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[11] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[10] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), 
    .F0(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[11] ), .F1(ws_reg_i_RNID2EK1), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[12] ));
  SLICE_325 SLICE_325( .C1(\subMean1/un2f[13] ), 
    .B1(\subMean1/horizontal_out_cf[13] ), .A1(\subMean1/sumf[13] ), 
    .C0(\subMean1/un2f[13] ), .B0(\subMean1/horizontal_out_cf[13] ), 
    .A0(\subMean1/sumf[13] ), .M1(\port2/i2s_rx_inst/right_data_reg_i[0] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[14] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\subMean1/un1_sum_68_0 ), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[15] ), .F1(\subMean1/un1_sum_64 ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[1] ));
  SLICE_326 SLICE_326( .C1(\subMean1/un2f[14] ), .B1(\subMean1/sumf[14] ), 
    .A1(\subMean1/horizontal_out_cf[14] ), .C0(\subMean1/un2f[14] ), 
    .B0(\subMean1/sumf[14] ), .A0(\subMean1/horizontal_out_cf[14] ), 
    .M1(\port2/i2s_rx_inst/right_data_reg_i[2] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[1] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\subMean1/un1_sum_73_0 ), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[2] ), .F1(\subMean1/un1_sum_69 ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[3] ));
  SLICE_327 SLICE_327( .C1(\subMean1/un2f[5] ), 
    .B1(\subMean1/horizontal_out_cf[5] ), .A1(\subMean1/sumf[5] ), 
    .C0(\subMean1/un2f[5] ), .B0(\subMean1/horizontal_out_cf[5] ), 
    .A0(\subMean1/sumf[5] ), .M1(\port2/i2s_rx_inst/left_data_reg_i[0] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[14] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_28_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[15] ), .F1(\subMean1/un1_sum_24 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[1] ));
  SLICE_328 SLICE_328( .C1(\subMean1/horizontal_out_cf[11] ), 
    .B1(\subMean1/un2f[11] ), .A1(\subMean1/sumf[11] ), 
    .C0(\subMean1/horizontal_out_cf[11] ), .B0(\subMean1/un2f[11] ), 
    .A0(\subMean1/sumf[11] ), .M1(\port2/i2s_rx_inst/right_data_reg_i[11] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[10] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\subMean1/un1_sum_58_0 ), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[11] ), .F1(\subMean1/un1_sum_54 ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[12] ));
  SLICE_329 SLICE_329( .D1(\subMean1/sumf[4] ), .C1(\subMean1/un2f[4] ), 
    .B1(\subMean1/horizontal_out_cf[4] ), .D0(\subMean1/sumf[4] ), 
    .C0(\subMean1/un2f[4] ), .B0(\subMean1/horizontal_out_cf[4] ), 
    .M1(\port2/i2s_rx_inst/left_data_reg_i[13] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[12] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_23_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[13] ), .F1(\subMean1/un1_sum_19 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[14] ));
  SLICE_330 SLICE_330( .C1(\subMean1/un2f[10] ), .B1(\subMean1/sumf[10] ), 
    .A1(\subMean1/horizontal_out_cf[10] ), .C0(\subMean1/un2f[10] ), 
    .B0(\subMean1/sumf[10] ), .A0(\subMean1/horizontal_out_cf[10] ), 
    .M1(\port2/i2s_rx_inst/right_data_reg_i[9] ), 
    .M0(\port2.i2s_rx_inst.sd_i ), .CE(ws_reg_i_RNID2EK1), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_53_0 ), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[0] ), .F1(\subMean1/un1_sum_49 ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[10] ));
  SLICE_331 SLICE_331( .D1(\subMean1/sumf[3] ), .C1(\subMean1/un2f[3] ), 
    .A1(\subMean1/horizontal_out_cf[3] ), .D0(\subMean1/sumf[3] ), 
    .C0(\subMean1/un2f[3] ), .A0(\subMean1/horizontal_out_cf[3] ), 
    .M1(\port2/i2s_rx_inst/left_data_reg_i[9] ), .M0(\port2.i2s_rx_inst.sd_i ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_18_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[0] ), .F1(\subMean1/un1_sum_14 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[10] ));
  SLICE_332 SLICE_332( .D1(\subMean1/un2f[9] ), 
    .C1(\subMean1/horizontal_out_cf[9] ), .B1(\subMean1/sumf[9] ), 
    .D0(\subMean1/un2f[9] ), .C0(\subMean1/horizontal_out_cf[9] ), 
    .B0(\subMean1/sumf[9] ), .M1(\port2/i2s_rx_inst/left_data_reg_i[8] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[7] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_48_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[8] ), .F1(\subMean1/un1_sum_44 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[9] ));
  SLICE_333 SLICE_333( .D1(\subMean1/sumf[2] ), .B1(\subMean1/un2f[2] ), 
    .A1(\subMean1/horizontal_out_cf[2] ), .D0(\subMean1/sumf[2] ), 
    .B0(\subMean1/un2f[2] ), .A0(\subMean1/horizontal_out_cf[2] ), 
    .M1(\port1/i2s_rx_inst/right_data_reg_i[8] ), 
    .M0(\port1/i2s_rx_inst/right_data_reg_i[7] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\subMean1/un1_sum_13_0 ), 
    .Q0(\port1/i2s_rx_inst/right_data_reg_i[8] ), .F1(\subMean1/un1_sum_9 ), 
    .Q1(\port1/i2s_rx_inst/right_data_reg_i[9] ));
  SLICE_334 SLICE_334( .D1(\subMean1/sumf[8] ), 
    .C1(\subMean1/horizontal_out_cf[8] ), .A1(\subMean1/un2f[8] ), 
    .D0(\subMean1/sumf[8] ), .C0(\subMean1/horizontal_out_cf[8] ), 
    .A0(\subMean1/un2f[8] ), .M1(\port2/i2s_rx_inst/left_data_reg_i[6] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[5] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_43_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[6] ), .F1(\subMean1/un1_sum_39 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[7] ));
  SLICE_335 SLICE_335( .D1(\subMean1/horizontal_out_cf[1] ), 
    .C1(\subMean1/un2f[1] ), .A1(\subMean1/sumf[1] ), 
    .D0(\subMean1/horizontal_out_cf[1] ), .C0(\subMean1/un2f[1] ), 
    .A0(\subMean1/sumf[1] ), .M1(\port2/i2s_rx_inst/right_data_reg_i[4] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[3] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\subMean1/un1_sum_8_0 ), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[4] ), .F1(\subMean1/un1_sum_4 ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[5] ));
  SLICE_336 SLICE_336( .D1(\subMean1/sumf[7] ), .B1(\subMean1/un2f[7] ), 
    .A1(\subMean1/horizontal_out_cf[7] ), .D0(\subMean1/sumf[7] ), 
    .B0(\subMean1/un2f[7] ), .A0(\subMean1/horizontal_out_cf[7] ), 
    .M1(\port2/i2s_rx_inst/left_data_reg_i[4] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[3] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_38_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[4] ), .F1(\subMean1/un1_sum_34 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[5] ));
  SLICE_337 SLICE_337( .D1(\subMean1/sumf[6] ), 
    .B1(\subMean1/horizontal_out_cf[6] ), .A1(\subMean1/un2f[6] ), 
    .D0(\subMean1/sumf[6] ), .B0(\subMean1/horizontal_out_cf[6] ), 
    .A0(\subMean1/un2f[6] ), .M1(\port2/i2s_rx_inst/left_data_reg_i[2] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[1] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_33_0 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[2] ), .F1(\subMean1/un1_sum_29 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[3] ));
  SLICE_338 SLICE_338( .D1(\subMean1/un2f[12] ), .C1(\subMean1/sumf[12] ), 
    .B1(\subMean1/horizontal_out_cf[12] ), .D0(\subMean1/un2f[12] ), 
    .C0(\subMean1/sumf[12] ), .B0(\subMean1/horizontal_out_cf[12] ), 
    .M1(\port2/i2s_rx_inst/right_data_reg_i[13] ), 
    .M0(\port2/i2s_rx_inst/right_data_reg_i[12] ), .CE(ws_reg_i_RNID2EK1), 
    .LSR(i_sys_rst), .CLK(mclk_c), .F0(\subMean1/un1_sum_63_0 ), 
    .Q0(\port2/i2s_rx_inst/right_data_reg_i[13] ), .F1(\subMean1/un1_sum_59 ), 
    .Q1(\port2/i2s_rx_inst/right_data_reg_i[14] ));
  zcr2_SLICE_339 \zcr2/SLICE_339 ( .D1(rst_c), .B1(rd_en1), .A1(lock), 
    .D0(rst_c), .C0(\zcr2.window_count[6] ), .B0(rd_en1), .A0(lock), 
    .F0(\zcr2.zcr_count_1_sqmuxa ), .F1(un2_i_sys_rst_i));
  zcr2_SLICE_340 \zcr2/SLICE_340 ( .D1(\zcr2/window_count[3] ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/N_292 ), .A1(\zcr2/N_463 ), 
    .D0(\zcr2/window_count[3] ), .C0(\zcr2/window_count[2] ), 
    .B0(\zcr2/N_292 ), .A0(\zcr2/N_462 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_68 ), .CLK(fpga_clk), .F0(\zcr2/N_58 ), 
    .Q0(\zcr2/zcr_window[16][15] ), .F1(\zcr2/N_63 ));
  zcr2_SLICE_341 \zcr2/SLICE_341 ( .D1(\zcr2/N_292 ), .C1(\zcr2/N_455 ), 
    .B1(\zcr2/window_count[2] ), .A1(\zcr2/window_count[3] ), 
    .D0(\zcr2/N_540 ), .C0(\zcr2/N_292 ), .B0(\zcr2/window_count[2] ), 
    .A0(\zcr2/window_count[3] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_77 ), .CLK(fpga_clk), .F0(\zcr2/N_40 ), 
    .Q0(\zcr2/zcr_window[25][15] ), .F1(\zcr2/N_81 ));
  zcr2_SLICE_342 \zcr2/SLICE_342 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[4] ), .B1(\zcr2/N_461 ), 
    .A1(\zcr2/window_count[5] ), .D0(\zcr2/window_count[4] ), 
    .C0(\zcr2/N_539 ), .B0(\zcr2/N_292 ), .A0(\zcr2/window_count[5] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_67 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_26 ), .Q0(\zcr2/zcr_window[34][15] ), .F1(\zcr2/N_48 ));
  zcr2_SLICE_343 \zcr2/SLICE_343 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[3] ), .B1(\zcr2/window_count[2] ), 
    .A1(\zcr2/N_543 ), .D0(\zcr2/N_292 ), .C0(\zcr2/window_count[3] ), 
    .B0(\zcr2/window_count[2] ), .A0(\zcr2/N_549 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_62 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_65 ), .Q0(\zcr2/zcr_window[21][15] ), .F1(\zcr2/N_56 ));
  zcr2_SLICE_344 \zcr2/SLICE_344 ( .D1(\zcr2/N_296 ), .B1(\zcr2/un3lto1 ), 
    .A1(\zcr2/un3lto0 ), .D0(\zcr2/N_292 ), .C0(\zcr2/N_296 ), 
    .B0(\zcr2/un3lto1 ), .A0(\zcr2/un3lto0 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_66 ), .CLK(fpga_clk), .F0(\zcr2/N_101 ), 
    .Q0(\zcr2/zcr_window[17][15] ), .F1(\zcr2/N_544 ));
  zcr2_SLICE_345 \zcr2/SLICE_345 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/N_542 ), .A1(\zcr2/N_292 ), 
    .D0(\zcr2/window_count[4] ), .C0(\zcr2/window_count[5] ), 
    .B0(\zcr2/N_292 ), .A0(\zcr2/N_538 ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_59 ), .CLK(fpga_clk), .F0(\zcr2/N_97 ), 
    .Q0(\zcr2/zcr_window[41][15] ), .F1(\zcr2/N_93 ));
  zcr2_SLICE_346 \zcr2/SLICE_346 ( .D1(\zcr2/N_292 ), 
    .C1(\zcr2/window_count[5] ), .B1(\zcr2/N_458 ), 
    .A1(\zcr2/window_count[4] ), .D0(\zcr2/N_464 ), 
    .C0(\zcr2/window_count[5] ), .B0(\zcr2/N_292 ), 
    .A0(\zcr2/window_count[4] ), .M0(\zcr2/zcr_window[1]_4[15] ), 
    .CE(\zcr2/N_44 ), .CLK(fpga_clk), .F0(\zcr2/N_95 ), 
    .Q0(\zcr2/zcr_window[42][15] ), .F1(\zcr2/N_57 ));
  zcr2_SLICE_347 \zcr2/SLICE_347 ( .D1(\zcr2/zcr_window[35][15] ), 
    .C1(\zcr2/zcr_window[31][15] ), .B1(\zcr2/window_count[3] ), 
    .A1(\zcr2/window_count[2] ), .D0(\zcr2/N_292 ), .C0(\zcr2/N_456 ), 
    .B0(\zcr2/window_count[3] ), .A0(\zcr2/window_count[2] ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/zcr_window[19]_RNO[15] ), 
    .CLK(fpga_clk), .F0(\zcr2/N_54 ), .Q0(\zcr2/zcr_window[19][15] ), 
    .F1(\zcr2/current_2_62_i_a2_13_0 ));
  SLICE_348 SLICE_348( .D1(lock), .C1(\f1/counter[6] ), .B1(\f1/state ), 
    .A1(rst_c), .D0(lock), .A0(rst_c), .F0(i_sys_rst_i), .F1(\f1/N_11 ));
  zcr2_SLICE_349 \zcr2/SLICE_349 ( .D1(\zcr2/N_307 ), .C1(\zcr2/N_540 ), 
    .B1(\zcr2/N_461 ), .A1(\zcr2/N_308 ), .D0(\zcr2/N_307 ), .C0(\zcr2/N_538 ), 
    .B0(\zcr2/N_463 ), .A0(\zcr2/N_308 ), 
    .F0(\zcr2/un72_not_previous_62_i_8[0] ), .F1(\zcr2/current_2_62_i_8 ));
  zcr2_SLICE_350 \zcr2/SLICE_350 ( .D1(\zcr2/un3lto1 ), .C1(\zcr2/N_296 ), 
    .A1(\zcr2.window_count[6] ), .D0(\zcr2/un3lto1 ), 
    .C0(\zcr2/zcr_window[62][15] ), .B0(\zcr2/N_296 ), 
    .A0(\zcr2/un72_not_previous_62_i_6[0] ), 
    .F0(\zcr2/un72_not_previous_62_i_12[0] ), .F1(\zcr2/N_772_i ));
  zcr2_SLICE_351 \zcr2/SLICE_351 ( .D1(\zcr2/zcr_window[10][15] ), 
    .C1(\zcr2/window_count[4] ), .B1(\zcr2/window_count[5] ), 
    .A1(\zcr2/zcr_window[42][15] ), .D0(\zcr2/window_count[4] ), 
    .C0(\zcr2/zcr_window[9][15] ), .B0(\zcr2/window_count[5] ), 
    .A0(\zcr2/zcr_window[41][15] ), .F0(\zcr2/current_2_62_i_a2_12_0 ), 
    .F1(\zcr2/current_2_62_i_a2_3_0 ));
  zcr2_SLICE_352 \zcr2/SLICE_352 ( .D1(\zcr2/window_count[4] ), 
    .C1(\zcr2/zcr_window[39][15] ), .B1(\zcr2/zcr_window[7][15] ), 
    .A1(\zcr2/window_count[5] ), .D0(\zcr2/zcr_window[5][15] ), 
    .C0(\zcr2/zcr_window[21][15] ), .B0(\zcr2/window_count[4] ), 
    .A0(\zcr2/window_count[5] ), .F0(\zcr2/current_2_62_i_a2_15_0 ), 
    .F1(\zcr2/current_2_62_i_a2_18_0 ));
  SLICE_353 SLICE_353( .C1(\subMean1/sumf[0] ), 
    .A1(\subMean1/horizontal_out_cf[0] ), .D0(\subMean1/un2f[0] ), 
    .C0(\subMean1/horizontal_out_cf[0] ), 
    .M1(\port2/i2s_rx_inst/left_data_reg_i[11] ), 
    .M0(\port2/i2s_rx_inst/left_data_reg_i[10] ), 
    .CE(\port2/i2s_rx_inst/left_data_reg_i_cnv[0] ), .LSR(i_sys_rst), 
    .CLK(mclk_c), .F0(\subMean1/un1_sum_1 ), 
    .Q0(\port2/i2s_rx_inst/left_data_reg_i[11] ), .F1(\subMean1/un1_sum_0 ), 
    .Q1(\port2/i2s_rx_inst/left_data_reg_i[12] ));
  zcr2_SLICE_354 \zcr2/SLICE_354 ( .D1(un2_i_sys_rst_i_i_o2), 
    .C1(\zcr2.window_count[6] ), .B1(\zcr2/N_296 ), .A1(\zcr2/N_293 ), 
    .D0(\zcr2/N_292 ), .C0(\zcr2/N_295 ), .B0(\zcr2/N_447 ), .A0(\zcr2/N_293 ), 
    .M0(\zcr2/zcr_window[1]_4[15] ), .CE(\zcr2/N_101 ), .CLK(fpga_clk), 
    .F0(\zcr2/N_51 ), .Q0(\zcr2/zcr_window[2][15] ), 
    .F1(\zcr2/zcr_count_temp16_0_0_a2_i ));
  zcr2_SLICE_355 \zcr2/SLICE_355 ( .D1(\zcr2/zcr_window[61][15] ), 
    .C1(\zcr2/zcr_window[59][15] ), .B1(\zcr2/un3lto1 ), .A1(\zcr2/N_457 ), 
    .D0(\zcr2/zcr_window[60][15] ), .C0(\zcr2/zcr_window[12][15] ), 
    .B0(\zcr2/N_460 ), .A0(\zcr2/N_457 ), .F0(\zcr2/current_2_62_i_o2_3_0 ), 
    .F1(\zcr2/N_536 ));
  zcr2_SLICE_356 \zcr2/SLICE_356 ( .D1(\zcr2/un3lto0 ), 
    .C1(\zcr2/window_count[2] ), .B1(\zcr2/un3lto1 ), .D0(\zcr2/N_459 ), 
    .C0(\zcr2/zcr_window[47][15] ), .B0(\zcr2/un3lto1 ), 
    .A0(\zcr2/zcr_window[49][15] ), .F0(\zcr2/N_531 ), 
    .F1(\zcr2/un3_window_count_1_c3 ));
  o_sck o_sck_I( .PADDO(o_sck_c), .o_sck(o_sck));
  rst rst_I( .PADDI(rst_c), .rst(rst));
  o_right_vld2 o_right_vld2_I( .PADDO(o_right_vld2_c), 
    .o_right_vld2(o_right_vld2));
  o_left_vld2 o_left_vld2_I( .PADDO(o_left_vld), .o_left_vld2(o_left_vld2));
  o_right_data2_15_ \o_right_data2[15]_I ( .PADDO(\o_right_data2_c[15] ), 
    .orightdata215(o_right_data2[15]));
  o_right_data2_14_ \o_right_data2[14]_I ( .PADDO(\o_right_data2_c[14] ), 
    .orightdata214(o_right_data2[14]));
  o_right_data2_13_ \o_right_data2[13]_I ( .PADDO(\o_right_data2_c[13] ), 
    .orightdata213(o_right_data2[13]));
  o_right_data2_12_ \o_right_data2[12]_I ( .PADDO(\o_right_data2_c[12] ), 
    .orightdata212(o_right_data2[12]));
  o_right_data2_11_ \o_right_data2[11]_I ( .PADDO(\o_right_data2_c[11] ), 
    .orightdata211(o_right_data2[11]));
  o_right_data2_10_ \o_right_data2[10]_I ( .PADDO(\o_right_data2_c[10] ), 
    .orightdata210(o_right_data2[10]));
  o_right_data2_9_ \o_right_data2[9]_I ( .PADDO(\o_right_data2_c[9] ), 
    .orightdata29(o_right_data2[9]));
  o_right_data2_8_ \o_right_data2[8]_I ( .PADDO(\o_right_data2_c[8] ), 
    .orightdata28(o_right_data2[8]));
  o_right_data2_7_ \o_right_data2[7]_I ( .PADDO(\o_right_data2_c[7] ), 
    .orightdata27(o_right_data2[7]));
  o_right_data2_6_ \o_right_data2[6]_I ( .PADDO(\o_right_data2_c[6] ), 
    .orightdata26(o_right_data2[6]));
  o_right_data2_5_ \o_right_data2[5]_I ( .PADDO(\o_right_data2_c[5] ), 
    .orightdata25(o_right_data2[5]));
  o_right_data2_4_ \o_right_data2[4]_I ( .PADDO(\o_right_data2_c[4] ), 
    .orightdata24(o_right_data2[4]));
  o_right_data2_3_ \o_right_data2[3]_I ( .PADDO(\o_right_data2_c[3] ), 
    .orightdata23(o_right_data2[3]));
  o_right_data2_2_ \o_right_data2[2]_I ( .PADDO(\o_right_data2_c[2] ), 
    .orightdata22(o_right_data2[2]));
  o_right_data2_1_ \o_right_data2[1]_I ( .PADDO(\o_right_data2_c[1] ), 
    .orightdata21(o_right_data2[1]));
  o_right_data2_0_ \o_right_data2[0]_I ( .PADDO(\o_right_data2_c[0] ), 
    .orightdata20(o_right_data2[0]));
  o_left_data2_15_ \o_left_data2[15]_I ( .PADDO(\o_left_data2_c[15] ), 
    .oleftdata215(o_left_data2[15]));
  o_left_data2_14_ \o_left_data2[14]_I ( .PADDO(\o_left_data2_c[14] ), 
    .oleftdata214(o_left_data2[14]));
  o_left_data2_13_ \o_left_data2[13]_I ( .PADDO(\o_left_data2_c[13] ), 
    .oleftdata213(o_left_data2[13]));
  o_left_data2_12_ \o_left_data2[12]_I ( .PADDO(\o_left_data2_c[12] ), 
    .oleftdata212(o_left_data2[12]));
  o_left_data2_11_ \o_left_data2[11]_I ( .PADDO(\o_left_data2_c[11] ), 
    .oleftdata211(o_left_data2[11]));
  o_left_data2_10_ \o_left_data2[10]_I ( .PADDO(\o_left_data2_c[10] ), 
    .oleftdata210(o_left_data2[10]));
  o_left_data2_9_ \o_left_data2[9]_I ( .PADDO(\o_left_data2_c[9] ), 
    .oleftdata29(o_left_data2[9]));
  o_left_data2_8_ \o_left_data2[8]_I ( .PADDO(\o_left_data2_c[8] ), 
    .oleftdata28(o_left_data2[8]));
  o_left_data2_7_ \o_left_data2[7]_I ( .PADDO(\o_left_data2_c[7] ), 
    .oleftdata27(o_left_data2[7]));
  o_left_data2_6_ \o_left_data2[6]_I ( .PADDO(\o_left_data2_c[6] ), 
    .oleftdata26(o_left_data2[6]));
  o_left_data2_5_ \o_left_data2[5]_I ( .PADDO(\o_left_data2_c[5] ), 
    .oleftdata25(o_left_data2[5]));
  o_left_data2_4_ \o_left_data2[4]_I ( .PADDO(\o_left_data2_c[4] ), 
    .oleftdata24(o_left_data2[4]));
  o_left_data2_3_ \o_left_data2[3]_I ( .PADDO(\o_left_data2_c[3] ), 
    .oleftdata23(o_left_data2[3]));
  o_left_data2_2_ \o_left_data2[2]_I ( .PADDO(\o_left_data2_c[2] ), 
    .oleftdata22(o_left_data2[2]));
  o_left_data2_1_ \o_left_data2[1]_I ( .PADDO(\o_left_data2_c[1] ), 
    .oleftdata21(o_left_data2[1]));
  o_left_data2_0_ \o_left_data2[0]_I ( .PADDO(\o_left_data2_c[0] ), 
    .oleftdata20(o_left_data2[0]));
  beam_forming_valid beam_forming_valid_I( .PADDO(GND), 
    .beam_forming_valid(beam_forming_valid));
  led_pattern_7_ \led_pattern[7]_I ( .PADDO(GND), .ledpattern7(led_pattern[7]));
  led_pattern_6_ \led_pattern[6]_I ( .PADDO(GND), .ledpattern6(led_pattern[6]));
  led_pattern_5_ \led_pattern[5]_I ( .PADDO(GND), .ledpattern5(led_pattern[5]));
  led_pattern_4_ \led_pattern[4]_I ( .PADDO(GND), .ledpattern4(led_pattern[4]));
  led_pattern_3_ \led_pattern[3]_I ( .PADDO(GND), .ledpattern3(led_pattern[3]));
  led_pattern_2_ \led_pattern[2]_I ( .PADDO(GND), .ledpattern2(led_pattern[2]));
  led_pattern_1_ \led_pattern[1]_I ( .PADDO(GND), .ledpattern1(led_pattern[1]));
  led_pattern_0_ \led_pattern[0]_I ( .PADDO(GND), .ledpattern0(led_pattern[0]));
  subMean_left_valid subMean_left_valid_I( .PADDO(subMean_left_valid_c), 
    .subMean_left_valid(subMean_left_valid));
  subMean_left_out_15_ \subMean_left_out[15]_I ( 
    .IOLDO(\subMean_left_out_c[15] ), .subMeanleftout15(subMean_left_out[15]));
  subMean_left_out_15__MGIOL \subMean_left_out[15]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[15] ), .OPOS(un2_subMean_out_s_15_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_14_ \subMean_left_out[14]_I ( 
    .IOLDO(\subMean_left_out_c[14] ), .subMeanleftout14(subMean_left_out[14]));
  subMean_left_out_14__MGIOL \subMean_left_out[14]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[14] ), .OPOS(un2_subMean_out_cry_13_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_13_ \subMean_left_out[13]_I ( 
    .IOLDO(\subMean_left_out_c[13] ), .subMeanleftout13(subMean_left_out[13]));
  subMean_left_out_13__MGIOL \subMean_left_out[13]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[13] ), .OPOS(un2_subMean_out_cry_13_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_12_ \subMean_left_out[12]_I ( 
    .IOLDO(\subMean_left_out_c[12] ), .subMeanleftout12(subMean_left_out[12]));
  subMean_left_out_12__MGIOL \subMean_left_out[12]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[12] ), .OPOS(un2_subMean_out_cry_11_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_11_ \subMean_left_out[11]_I ( 
    .IOLDO(\subMean_left_out_c[11] ), .subMeanleftout11(subMean_left_out[11]));
  subMean_left_out_11__MGIOL \subMean_left_out[11]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[11] ), .OPOS(un2_subMean_out_cry_11_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_10_ \subMean_left_out[10]_I ( 
    .IOLDO(\subMean_left_out_c[10] ), .subMeanleftout10(subMean_left_out[10]));
  subMean_left_out_10__MGIOL \subMean_left_out[10]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[10] ), .OPOS(un2_subMean_out_cry_9_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_9_ \subMean_left_out[9]_I ( .IOLDO(\subMean_left_out_c[9] ), 
    .subMeanleftout9(subMean_left_out[9]));
  subMean_left_out_9__MGIOL \subMean_left_out[9]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[9] ), .OPOS(un2_subMean_out_cry_9_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_8_ \subMean_left_out[8]_I ( .IOLDO(\subMean_left_out_c[8] ), 
    .subMeanleftout8(subMean_left_out[8]));
  subMean_left_out_8__MGIOL \subMean_left_out[8]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[8] ), .OPOS(un2_subMean_out_cry_7_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_7_ \subMean_left_out[7]_I ( .IOLDO(\subMean_left_out_c[7] ), 
    .subMeanleftout7(subMean_left_out[7]));
  subMean_left_out_7__MGIOL \subMean_left_out[7]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[7] ), .OPOS(un2_subMean_out_cry_7_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_6_ \subMean_left_out[6]_I ( .IOLDO(\subMean_left_out_c[6] ), 
    .subMeanleftout6(subMean_left_out[6]));
  subMean_left_out_6__MGIOL \subMean_left_out[6]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[6] ), .OPOS(un2_subMean_out_cry_5_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_5_ \subMean_left_out[5]_I ( .IOLDO(\subMean_left_out_c[5] ), 
    .subMeanleftout5(subMean_left_out[5]));
  subMean_left_out_5__MGIOL \subMean_left_out[5]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[5] ), .OPOS(un2_subMean_out_cry_5_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_4_ \subMean_left_out[4]_I ( .IOLDO(\subMean_left_out_c[4] ), 
    .subMeanleftout4(subMean_left_out[4]));
  subMean_left_out_4__MGIOL \subMean_left_out[4]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[4] ), .OPOS(un2_subMean_out_cry_3_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_3_ \subMean_left_out[3]_I ( .IOLDO(\subMean_left_out_c[3] ), 
    .subMeanleftout3(subMean_left_out[3]));
  subMean_left_out_3__MGIOL \subMean_left_out[3]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[3] ), .OPOS(un2_subMean_out_cry_3_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_2_ \subMean_left_out[2]_I ( .IOLDO(\subMean_left_out_c[2] ), 
    .subMeanleftout2(subMean_left_out[2]));
  subMean_left_out_2__MGIOL \subMean_left_out[2]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[2] ), .OPOS(un2_subMean_out_cry_1_0_S1), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_1_ \subMean_left_out[1]_I ( .IOLDO(\subMean_left_out_c[1] ), 
    .subMeanleftout1(subMean_left_out[1]));
  subMean_left_out_1__MGIOL \subMean_left_out[1]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[1] ), .OPOS(un2_subMean_out_cry_1_0_S0), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  subMean_left_out_0_ \subMean_left_out[0]_I ( .IOLDO(\subMean_left_out_c[0] ), 
    .subMeanleftout0(subMean_left_out[0]));
  subMean_left_out_0__MGIOL \subMean_left_out[0]_MGIOL ( 
    .IOLDO(\subMean_left_out_c[0] ), .OPOS(\subMean1.un2_subMean_out_axb_0_i ), 
    .CE(subMean_left_valid_c), .CLK(fpga_clk));
  ste_left_valid ste_left_valid_I( .IOLDO(ste_left_valid_c), 
    .ste_left_valid(ste_left_valid));
  ste_left_valid_MGIOL ste_left_valid_MGIOL( .IOLDO(ste_left_valid_c), 
    .OPOS(\ste2.window_count[6] ), .CE(un2_i_sys_rst_i), .CLK(fpga_clk));
  ste_left ste_left_I( .IOLDO(ste_left_c), .ste_left(ste_left));
  ste_left_MGIOL ste_left_MGIOL( .IOLDO(ste_left_c), .OPOS(\ste2.ste_3[0] ), 
    .CE(un2_i_sys_rst_i), .CLK(fpga_clk));
  zcr_valid_left zcr_valid_left_I( .IOLDO(zcr_valid_left_c), 
    .zcr_valid_left(zcr_valid_left));
  zcr_valid_left_MGIOL zcr_valid_left_MGIOL( .IOLDO(zcr_valid_left_c), 
    .OPOS(\zcr2.window_count[6] ), .CE(un2_i_sys_rst_i), .CLK(fpga_clk));
  zcr_count_left_5_ \zcr_count_left[5]_I ( .IOLDO(\zcr_count_left_c[5] ), 
    .zcrcountleft5(zcr_count_left[5]));
  zcr_count_left_5__MGIOL \zcr_count_left[5]_MGIOL ( 
    .IOLDO(\zcr_count_left_c[5] ), .OPOS(\zcr2.zcr_count_temp[5] ), 
    .CE(\zcr2.zcr_count_1_sqmuxa ), .CLK(fpga_clk));
  zcr_count_left_4_ \zcr_count_left[4]_I ( .IOLDO(\zcr_count_left_c[4] ), 
    .zcrcountleft4(zcr_count_left[4]));
  zcr_count_left_4__MGIOL \zcr_count_left[4]_MGIOL ( 
    .IOLDO(\zcr_count_left_c[4] ), .OPOS(\zcr2.zcr_count_temp[4] ), 
    .CE(\zcr2.zcr_count_1_sqmuxa ), .CLK(fpga_clk));
  zcr_count_left_3_ \zcr_count_left[3]_I ( .IOLDO(\zcr_count_left_c[3] ), 
    .zcrcountleft3(zcr_count_left[3]));
  zcr_count_left_3__MGIOL \zcr_count_left[3]_MGIOL ( 
    .IOLDO(\zcr_count_left_c[3] ), .OPOS(\zcr2.zcr_count_temp[3] ), 
    .CE(\zcr2.zcr_count_1_sqmuxa ), .CLK(fpga_clk));
  zcr_count_left_2_ \zcr_count_left[2]_I ( .IOLDO(\zcr_count_left_c[2] ), 
    .zcrcountleft2(zcr_count_left[2]));
  zcr_count_left_2__MGIOL \zcr_count_left[2]_MGIOL ( 
    .IOLDO(\zcr_count_left_c[2] ), .OPOS(\zcr2.zcr_count_temp[2] ), 
    .CE(\zcr2.zcr_count_1_sqmuxa ), .CLK(fpga_clk));
  zcr_count_left_1_ \zcr_count_left[1]_I ( .IOLDO(\zcr_count_left_c[1] ), 
    .zcrcountleft1(zcr_count_left[1]));
  zcr_count_left_1__MGIOL \zcr_count_left[1]_MGIOL ( 
    .IOLDO(\zcr_count_left_c[1] ), .OPOS(\zcr2.zcr_count_temp[1] ), 
    .CE(\zcr2.zcr_count_1_sqmuxa ), .CLK(fpga_clk));
  zcr_count_left_0_ \zcr_count_left[0]_I ( .IOLDO(\zcr_count_left_c[0] ), 
    .zcrcountleft0(zcr_count_left[0]));
  zcr_count_left_0__MGIOL \zcr_count_left[0]_MGIOL ( 
    .IOLDO(\zcr_count_left_c[0] ), .OPOS(\zcr2.zcr_count_temp[0] ), 
    .CE(\zcr2.zcr_count_1_sqmuxa ), .CLK(fpga_clk));
  vertical_out_15_ \vertical_out[15]_I ( .PADDO(\vertical_out_c[15] ), 
    .verticalout15(vertical_out[15]));
  vertical_out_14_ \vertical_out[14]_I ( .PADDO(\vertical_out_c[14] ), 
    .verticalout14(vertical_out[14]));
  vertical_out_13_ \vertical_out[13]_I ( .PADDO(\vertical_out_c[13] ), 
    .verticalout13(vertical_out[13]));
  vertical_out_12_ \vertical_out[12]_I ( .PADDO(\vertical_out_c[12] ), 
    .verticalout12(vertical_out[12]));
  vertical_out_11_ \vertical_out[11]_I ( .PADDO(\vertical_out_c[11] ), 
    .verticalout11(vertical_out[11]));
  vertical_out_10_ \vertical_out[10]_I ( .PADDO(\vertical_out_c[10] ), 
    .verticalout10(vertical_out[10]));
  vertical_out_9_ \vertical_out[9]_I ( .PADDO(\vertical_out_c[9] ), 
    .verticalout9(vertical_out[9]));
  vertical_out_8_ \vertical_out[8]_I ( .PADDO(\vertical_out_c[8] ), 
    .verticalout8(vertical_out[8]));
  vertical_out_7_ \vertical_out[7]_I ( .PADDO(\vertical_out_c[7] ), 
    .verticalout7(vertical_out[7]));
  vertical_out_6_ \vertical_out[6]_I ( .PADDO(\vertical_out_c[6] ), 
    .verticalout6(vertical_out[6]));
  vertical_out_5_ \vertical_out[5]_I ( .PADDO(\vertical_out_c[5] ), 
    .verticalout5(vertical_out[5]));
  vertical_out_4_ \vertical_out[4]_I ( .PADDO(\vertical_out_c[4] ), 
    .verticalout4(vertical_out[4]));
  vertical_out_3_ \vertical_out[3]_I ( .PADDO(\vertical_out_c[3] ), 
    .verticalout3(vertical_out[3]));
  vertical_out_2_ \vertical_out[2]_I ( .PADDO(\vertical_out_c[2] ), 
    .verticalout2(vertical_out[2]));
  vertical_out_1_ \vertical_out[1]_I ( .PADDO(\vertical_out_c[1] ), 
    .verticalout1(vertical_out[1]));
  vertical_out_0_ \vertical_out[0]_I ( .PADDO(\vertical_out_c[0] ), 
    .verticalout0(vertical_out[0]));
  o_ws2 o_ws2_I( .PADDO(o_ws_c), .o_ws2(o_ws2));
  i_sd2 i_sd2_I( .PADDI(i_sd2_c), .i_sd2(i_sd2));
  i_sd2_MGIOL i_sd2_MGIOL( .DI(i_sd2_c), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), .IN(\port2.i2s_rx_inst.sd_i ));
  mclk mclk_I( .PADDO(mclk_c), .mclk(mclk));
  horizontal_out_15_ \horizontal_out[15]_I ( .PADDO(\horizontal_out_c[15] ), 
    .horizontalout15(horizontal_out[15]));
  horizontal_out_14_ \horizontal_out[14]_I ( .PADDO(\horizontal_out_c[14] ), 
    .horizontalout14(horizontal_out[14]));
  horizontal_out_13_ \horizontal_out[13]_I ( .PADDO(\horizontal_out_c[13] ), 
    .horizontalout13(horizontal_out[13]));
  horizontal_out_12_ \horizontal_out[12]_I ( .PADDO(\horizontal_out_c[12] ), 
    .horizontalout12(horizontal_out[12]));
  horizontal_out_11_ \horizontal_out[11]_I ( .PADDO(\horizontal_out_c[11] ), 
    .horizontalout11(horizontal_out[11]));
  horizontal_out_10_ \horizontal_out[10]_I ( .PADDO(\horizontal_out_c[10] ), 
    .horizontalout10(horizontal_out[10]));
  horizontal_out_9_ \horizontal_out[9]_I ( .PADDO(\horizontal_out_c[9] ), 
    .horizontalout9(horizontal_out[9]));
  horizontal_out_8_ \horizontal_out[8]_I ( .PADDO(\horizontal_out_c[8] ), 
    .horizontalout8(horizontal_out[8]));
  horizontal_out_7_ \horizontal_out[7]_I ( .PADDO(\horizontal_out_c[7] ), 
    .horizontalout7(horizontal_out[7]));
  horizontal_out_6_ \horizontal_out[6]_I ( .PADDO(\horizontal_out_c[6] ), 
    .horizontalout6(horizontal_out[6]));
  horizontal_out_5_ \horizontal_out[5]_I ( .PADDO(\horizontal_out_c[5] ), 
    .horizontalout5(horizontal_out[5]));
  horizontal_out_4_ \horizontal_out[4]_I ( .PADDO(\horizontal_out_c[4] ), 
    .horizontalout4(horizontal_out[4]));
  horizontal_out_3_ \horizontal_out[3]_I ( .PADDO(\horizontal_out_c[3] ), 
    .horizontalout3(horizontal_out[3]));
  horizontal_out_2_ \horizontal_out[2]_I ( .PADDO(\horizontal_out_c[2] ), 
    .horizontalout2(horizontal_out[2]));
  horizontal_out_1_ \horizontal_out[1]_I ( .PADDO(\horizontal_out_c[1] ), 
    .horizontalout1(horizontal_out[1]));
  horizontal_out_0_ \horizontal_out[0]_I ( .PADDO(\horizontal_out_c[0] ), 
    .horizontalout0(horizontal_out[0]));
  o_ws o_ws_I( .PADDO(o_ws_c), .o_ws(o_ws));
  i_sd i_sd_I( .PADDI(i_sd_c), .i_sd(i_sd));
  i_sd_MGIOL i_sd_MGIOL( .DI(i_sd_c), .CE(\r_reg_RNIOPPB1_0[1] ), 
    .LSR(i_sys_rst), .CLK(mclk_c), .IN(\port1.i2s_rx_inst.sd_i ));
  OSCH_inst OSCH_inst( .OSC(osc_clk));
  subMean1_f1_fifo_submean_0_0 \subMean1/f1/fifo_submean_0_0 ( 
    .DIA8(\horizontal_out_c[8] ), .DIA7(\horizontal_out_c[7] ), 
    .DIA6(\horizontal_out_c[6] ), .DIA5(\horizontal_out_c[5] ), 
    .DIA4(\horizontal_out_c[4] ), .DIA3(\horizontal_out_c[3] ), 
    .DIA2(\horizontal_out_c[2] ), .DIA1(\horizontal_out_c[1] ), 
    .DIA0(\horizontal_out_c[0] ), .DOA8(\subMean1/fifo_out[8] ), 
    .DOA7(\subMean1/fifo_out[7] ), .DOA6(\subMean1/fifo_out[6] ), 
    .DOA5(\subMean1/fifo_out[5] ), .DOA4(\subMean1/fifo_out[4] ), 
    .DOA3(\subMean1/fifo_out[3] ), .DOA2(\subMean1/fifo_out[2] ), 
    .DOA1(\subMean1/fifo_out[1] ), .DOA0(\subMean1/fifo_out[0] ), 
    .RSTA(un2_i_sys_rst_i_i_o2), .CLKA(fpga_clk), .CSA2(\subMean1/Full ), 
    .FF(\subMean1/Full ), .EF(\subMean1/f1/Empty ), .CSB2(\subMean1/f1/Empty ), 
    .CLKB(fpga_clk), .OCEB(subMean_left_valid_c), .CEB(subMean_left_valid_c), 
    .DOB0(\subMean1/fifo_out[9] ), .DOB1(\subMean1/fifo_out[10] ), 
    .DOB2(\subMean1/fifo_out[11] ), .DOB3(\subMean1/fifo_out[12] ), 
    .DOB4(\subMean1/fifo_out[13] ), .DOB5(\subMean1/fifo_out[14] ), 
    .DIB0(\horizontal_out_c[9] ), .DIB1(\horizontal_out_c[10] ), 
    .DIB2(\horizontal_out_c[11] ), .DIB3(\horizontal_out_c[12] ), 
    .DIB4(\horizontal_out_c[13] ), .DIB5(\horizontal_out_c[14] ));
  vertical_port_fifo_right_1_0 \vertical_port/fifo_right_1_0 ( 
    .DIA6(\vertical_port/un1_o_left_data2_1_i[15] ), 
    .DIA5(\vertical_port/un1_o_left_data2_1_i[14] ), 
    .DIA4(\vertical_port/un1_o_left_data2_1_i[13] ), 
    .DIA3(\vertical_port/un1_o_left_data2_1_i[12] ), 
    .DIA2(\vertical_port/un1_o_left_data2_1_i[11] ), 
    .DIA1(\vertical_port/un1_o_left_data2_1_i[10] ), 
    .DIA0(\vertical_port/un1_o_left_data2_1_i[9] ), .CEA(wr_en2), 
    .RSTA(i_sys_rst), .CLKA(o_sck_c), .CSA2(\vertical_port/Full ), 
    .CSB2(\vertical_port/Empty ), .CLKB(fpga_clk), .DOB0(\vertical_out_c[9] ), 
    .DOB1(\vertical_out_c[10] ), .DOB2(\vertical_out_c[11] ), 
    .DOB3(\vertical_out_c[12] ), .DOB4(\vertical_out_c[13] ), 
    .DOB5(\vertical_out_c[14] ), .DOB6(\vertical_out_c[15] ));
  vertical_port_fifo_right_0_1 \vertical_port/fifo_right_0_1 ( 
    .DIA8(\vertical_port/un1_o_left_data2_1_i[8] ), 
    .DIA7(\vertical_port/un1_o_left_data2_1_i[7] ), 
    .DIA6(\vertical_port/un1_o_left_data2_1_i[6] ), 
    .DIA5(\vertical_port/un1_o_left_data2_1_i[5] ), 
    .DIA4(\vertical_port/un1_o_left_data2_1_i[4] ), 
    .DIA3(\vertical_port/un1_o_left_data2_1_i[3] ), 
    .DIA2(\vertical_port/un1_o_left_data2_1_i[2] ), 
    .DIA1(\vertical_port/un1_o_left_data2_1_i[1] ), 
    .DIA0(\vertical_port/un1_o_left_data2_1_i[0] ), .CEA(wr_en2), 
    .RSTA(i_sys_rst), .CLKA(o_sck_c), .CSA2(\vertical_port/Full ), 
    .FF(\vertical_port/Full ), .EF(\vertical_port/Empty ), 
    .CSB2(\vertical_port/Empty ), .CLKB(fpga_clk), .DOB0(\vertical_out_c[0] ), 
    .DOB1(\vertical_out_c[1] ), .DOB2(\vertical_out_c[2] ), 
    .DOB3(\vertical_out_c[3] ), .DOB4(\vertical_out_c[4] ), 
    .DOB5(\vertical_out_c[5] ), .DOB6(\vertical_out_c[6] ), 
    .DOB7(\vertical_out_c[7] ), .DOB8(\vertical_out_c[8] ));
  horizontal_port_fifo_left_0_0 \horizontal_port/fifo_left_0_0 ( 
    .DIA8(\horizontal_port/un1_fifo_in1_i[8] ), 
    .DIA7(\horizontal_port/un1_fifo_in1_i[7] ), 
    .DIA6(\horizontal_port/un1_fifo_in1_i[6] ), 
    .DIA5(\horizontal_port/un1_fifo_in1_i[5] ), 
    .DIA4(\horizontal_port/un1_fifo_in1_i[4] ), 
    .DIA3(\horizontal_port/un1_fifo_in1_i[3] ), 
    .DIA2(\horizontal_port/un1_fifo_in1_i[2] ), 
    .DIA1(\horizontal_port/un1_fifo_in1_i[1] ), .DIA0(un1_fifo_in1), 
    .DOA8(\horizontal_out_c[8] ), .DOA7(\horizontal_out_c[7] ), 
    .DOA6(\horizontal_out_c[6] ), .DOA5(\horizontal_out_c[5] ), 
    .DOA4(\horizontal_out_c[4] ), .DOA3(\horizontal_out_c[3] ), 
    .DOA2(\horizontal_out_c[2] ), .DOA1(\horizontal_out_c[1] ), 
    .DOA0(\horizontal_out_c[0] ), .CEA(o_left_vld), .RSTA(i_sys_rst), 
    .CLKA(o_sck_c), .CSA2(\horizontal_port/Full ), .AF(almost_full), 
    .FF(\horizontal_port/Full ), .EF(\horizontal_port/Empty ), 
    .CSB2(\horizontal_port/Empty ), .CLKB(fpga_clk), .OCEB(rd_en1), 
    .CEB(rd_en1), .DOB0(\horizontal_out_c[9] ), .DOB1(\horizontal_out_c[10] ), 
    .DOB2(\horizontal_out_c[11] ), .DOB3(\horizontal_out_c[12] ), 
    .DOB4(\horizontal_out_c[13] ), .DOB5(\horizontal_out_c[14] ), 
    .DOB6(\horizontal_out_c[15] ), .DIB0(\horizontal_port/un1_fifo_in1_i[9] ), 
    .DIB1(\horizontal_port/un1_fifo_in1_i[10] ), 
    .DIB2(\horizontal_port/un1_fifo_in1_i[11] ), 
    .DIB3(\horizontal_port/un1_fifo_in1_i[12] ), 
    .DIB4(\horizontal_port/un1_fifo_in1_i[13] ), 
    .DIB5(\horizontal_port/un1_fifo_in1_i[14] ), 
    .DIB6(\horizontal_port/un1_fifo_in1_i[15] ));
  my_pll_PLLInst_0 \my_pll/PLLInst_0 ( .CLKI(osc_clk), .CLKFB(fpga_clk), 
    .RST(rst_c), .LOCK(lock), .CLKOS(mclk_c), .CLKOP(fpga_clk));
  GSR_INST GSR_INST( .GSRNET(~un2_i_sys_rst_i_i_o2));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
endmodule

module SLICE_0 ( input C1, B1, A1, M0, CLK, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \subMean1/sum_pipe_50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu2 un1_o_left_data2_1_cry_0_0( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h3047;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module subMean1_SLICE_1 ( input C0, B0, A0, DI0, M1, CLK, FCI, output F0, Q0, 
    Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  vmuxregsre \subMean1/avg[11] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \subMean1/un1_sum_0_s_19_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h30B4;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module subMean1_SLICE_2 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 \subMean1/un1_sum_0_cry_17_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h70B4;
  defparam inst1.INIT1 = 16'h70B4;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module subMean1_SLICE_3 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \subMean1/un1_sum_0_cry_15_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h101E;
  defparam inst1.INIT1 = 16'h70B4;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module subMean1_SLICE_4 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_13_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h101E;
  defparam inst1.INIT1 = 16'h101E;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module subMean1_SLICE_5 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_11_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_6 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_9_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_7 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_7_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_8 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_5_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_9 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_3_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_10 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \subMean1/sum_pipe_2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \subMean1/un1_sum_0_cry_1_0 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_11 ( input C1, B1, A1, M1, M0, CE, LSR, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[7] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[6] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20006 \subMean1/un1_sum_0_cry_0_0 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0005 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h5096;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module subMean1_SLICE_12 ( input B0, M1, M0, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/avg[7] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[6] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \subMean1/un2_subMean_out_s_15_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h500C;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_13 ( input B1, A1, B0, A0, M0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_vld_i ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 \subMean1/un2_subMean_out_cry_13_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3009;
  defparam inst1.INIT1 = 16'h5009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_14 ( input B1, A1, B0, A0, M1, M0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[9] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[8] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \subMean1/un2_subMean_out_cry_11_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_15 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/avg[5] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[4] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \subMean1/un2_subMean_out_cry_9_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5009;
  defparam inst1.INIT1 = 16'h5009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module subMean1_SLICE_16 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/avg[3] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[2] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \subMean1/un2_subMean_out_cry_7_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_17 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/avg[1] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \subMean1/un2_subMean_out_cry_5_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_18 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/avg[14] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[13] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20008 \subMean1/un2_subMean_out_cry_3_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_19 ( input B1, A1, B0, A0, M0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_vld_reg_i ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20010 \subMean1/un2_subMean_out_cry_1_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3009;
  defparam inst1.INIT1 = 16'h3009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_20 ( input B1, A1, M1, M0, CE, LSR, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[7] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[6] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20011 \subMean1/un2_subMean_out_cry_0_0 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h000A;
  defparam inst1.INIT1 = 16'h3009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module ste2_SLICE_21 ( input A1, A0, DI0, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \ste2/window_count[5] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20012 \ste2/un3_window_count_1_cry_5_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module ste2_SLICE_22 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ste2/window_count[4] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ste2/window_count[3] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \ste2/un3_window_count_1_cry_3_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ste2_SLICE_23 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ste2/window_count[2] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ste2/window_count[1] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \ste2/un3_window_count_1_cry_1_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_24 ( input B1, M1, M0, CE, LSR, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[5] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[4] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20013 \ste2/un3_window_count_1_cry_0_0 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h000A;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module zcr2_SLICE_25 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \zcr2/zcr_count_temp[5] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20014 \zcr2/zcr_count_temp_s_0[5] ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5008;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module zcr2_SLICE_26 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \zcr2/zcr_count_temp[4] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/zcr_count_temp[3] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 \zcr2/zcr_count_temp_cry_0[3] ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF008;
  defparam inst1.INIT1 = 16'hF008;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module zcr2_SLICE_27 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \zcr2/zcr_count_temp[2] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/zcr_count_temp[1] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 \zcr2/zcr_count_temp_cry_0[1] ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_28 ( input B1, A1, B0, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \zcr2/zcr_count_temp[0] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20016 \zcr2/zcr_count_temp_cry_0[0] ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'hF008;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module f1_SLICE_29 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0017 \f1/counter[6] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0017 \f1/counter[5] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \f1/un1_counter_cry_5_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0017 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module f1_SLICE_30 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0017 \f1/counter[4] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0017 \f1/counter[3] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \f1/un1_counter_cry_3_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module f1_SLICE_31 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0017 \f1/counter[2] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0017 \f1/counter[1] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \f1/un1_counter_cry_1_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module f1_SLICE_32 ( input A1, B0, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0017 \f1/counter[0] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20012 \f1/un1_counter_cry_0_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_33 ( input B0, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[15] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20007 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_s_15_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_34 ( input A1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[14] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[13] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_35 ( input B1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[12] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[11] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20018 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h500C;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module port2_i2s_rx_inst_SLICE_36 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[10] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[9] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module port2_i2s_rx_inst_SLICE_37 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[8] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[7] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_38 ( input A1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[6] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_39 ( input A1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[4] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[3] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_40 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[2] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_41 ( input B1, M1, M0, CE, LSR, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[15] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20013 \port2/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_42 ( input B0, DI0, M1, CE, LSR, CLK, FCI, 
    output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/d2_right_vld ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[15] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_s_15_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_43 ( input B1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[14] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[13] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20018 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_13_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_44 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[12] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[11] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_11_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_45 ( input A1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[10] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[9] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_9_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_46 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[8] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[7] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_7_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_47 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[6] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_5_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_48 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[4] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[3] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_3_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_49 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[2] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_1_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_50 ( input B1, M1, M0, CE, LSR, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[14] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[13] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20013 \port2/i2s_rx_inst/un1_left_data_twos_compl_i_cry_0_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_51 ( input B0, DI0, M1, CE, LSR, CLK, FCI, 
    output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/left_vld_reg_i ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[15] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_s_15_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_52 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[14] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[13] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_13_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_53 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[12] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[11] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_11_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_54 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[10] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[9] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_9_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_55 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[8] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[7] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_7_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_56 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[6] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_5_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_57 ( input B1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[4] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[3] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20019 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_3_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_58 ( input A1, B0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[2] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_1_0 ( .A0(GNDI), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_59 ( input A1, M1, M0, CE, LSR, CLK, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[10] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20020 \port1/i2s_rx_inst/un1_right_data_twos_compl_i_cry_0_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h000A;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_60 ( input A0, M1, M0, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 un1_fifo_in1_s_15_0( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_61 ( input B1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 un1_fifo_in1_cry_13_0( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5001;
  defparam inst1.INIT1 = 16'h0001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_62 ( input A1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/r1/temp ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 un1_fifo_in1_cry_11_0( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5001;
  defparam inst1.INIT1 = 16'h5001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_63 ( input B1, B0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20023 un1_fifo_in1_cry_9_0( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3001;
  defparam inst1.INIT1 = 16'h3001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_64 ( input B1, B0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20023 un1_fifo_in1_cry_7_0( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_65 ( input B1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 un1_fifo_in1_cry_5_0( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5001;
  defparam inst1.INIT1 = 16'h3001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_66 ( input A1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 un1_fifo_in1_cry_3_0( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_67 ( input B1, B0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/sum_pipe_24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/sum_pipe_23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20023 un1_fifo_in1_cry_1_0( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_68 ( input B1, M1, M0, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \subMean1/avg[9] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[8] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 un1_fifo_in1_cry_0_0( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h3001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_69 ( input C0, B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20026 un1_o_left_data2_1_s_15_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3047;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_70 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20027 un1_o_left_data2_1_cry_13_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0047;
  defparam inst1.INIT1 = 16'h0047;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_71 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20027 un1_o_left_data2_1_cry_11_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_72 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20027 un1_o_left_data2_1_cry_9_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_73 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20027 un1_o_left_data2_1_cry_7_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_74 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20028 un1_o_left_data2_1_cry_5_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0027;
  defparam inst1.INIT1 = 16'h0027;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_75 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20027 un1_o_left_data2_1_cry_3_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_76 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20028 un1_o_left_data2_1_cry_1_0( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module div8_SLICE_77 ( input D1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \div8/r_reg_RNO[1] ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \div8/r_reg_RNO[0] ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \div8/r_reg[1] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \div8/r_reg[0] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_78 ( input D1, B1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40030 \zcr2/i_sys_rst ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 \f1/state_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \f1/state ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0302) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_79 ( input C0, DI0, M1, CE, LSR, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  lut40032 \port2/i2s_rx_inst/left_data_twos_compl_i_RNO[0] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/ws_reg_i ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_twos_compl_i[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port2_i2s_rx_inst_SLICE_81 ( input B0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40033 \port2/i2s_rx_inst/right_data_twos_compl_i_RNO[0] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_twos_compl_i[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module div8_SLICE_83 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40034 \div8/clk_track_mx ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \div8/clk_track ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_84 ( input C1, B1, A1, C0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40035 \vertical_port/fifo_right_0_1_RNO ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \port1/o_ws_0 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/o_ws ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_SLICE_85 ( input D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40037 \port1/count_RNO[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/count[0] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_SLICE_86 ( input D1, B1, A1, D0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40038 \port1/count_RNO[2] ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \port1/count_RNO[1] ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/count[2] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/count[1] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h66AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_SLICE_87 ( input C1, B1, D0, C0, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40039 \port1/count12_c2 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \port1/count_RNO[3] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/count[3] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_i2s_rx_inst_SLICE_88 ( input D0, A0, DI0, CE, LSR, CLK, output F0, 
    Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40041 \port1/i2s_rx_inst/left_vld ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/d1_left_vld ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_i2s_rx_inst_SLICE_89 ( input D0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40042 \port1/i2s_rx_inst/left_vld_i_RNO ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/left_vld_i ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_i2s_rx_inst_SLICE_91 ( input A1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[1] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[0] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_92 ( input D1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[3] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[2] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[3] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_93 ( input A1, B0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[5] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[4] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[5] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[4] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_94 ( input B1, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40033 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[7] ( .A(GNDI), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[6] ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[7] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[6] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_95 ( input C1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40032 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[9] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[8] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[9] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[8] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_96 ( input A1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[11] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[10] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[11] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_97 ( input A1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[13] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[12] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[13] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[12] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port1_i2s_rx_inst_SLICE_98 ( input C1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40032 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[15] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port1/i2s_rx_inst/right_data_ones_compl_i_RNO[14] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[15] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_ones_compl_i[14] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_109 ( input D0, B0, DI0, M1, CE, LSR, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  lut40043 \port2/i2s_rx_inst/right_vld ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/ws_i ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/d1_right_vld ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port2_i2s_rx_inst_SLICE_110 ( input D1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[1] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[0] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_111 ( input D1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[3] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[2] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[3] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_112 ( input C1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40032 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[5] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[4] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[5] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[4] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_113 ( input D1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[7] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[6] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[7] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[6] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_114 ( input B1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40033 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[9] ( .A(GNDI), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[8] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[9] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[8] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_115 ( input D1, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[11] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[10] ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[11] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_116 ( input A1, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[13] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[12] ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[13] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[12] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_117 ( input C1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40032 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[15] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/left_data_ones_compl_i_RNO[14] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[15] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_ones_compl_i[14] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_126 ( input C1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40032 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[1] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[0] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_127 ( input D1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[3] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[2] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[3] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_128 ( input D1, D0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[5] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[4] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[5] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[4] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_129 ( input C1, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40032 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[7] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[6] ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[7] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[6] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_130 ( input D1, B0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[9] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[8] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[9] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[8] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_131 ( input A1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[11] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[10] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[11] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_132 ( input D1, C0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40042 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[13] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[12] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[13] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[12] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module port2_i2s_rx_inst_SLICE_133 ( input A1, B0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40029 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[15] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \port2/i2s_rx_inst/right_data_ones_compl_i_RNO[14] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[15] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_ones_compl_i[14] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ste2_SLICE_145 ( input C0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40044 \ste2/window_count_3[6] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ste2/window_count[6] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module ste2_sq1_SLICE_146 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \ste2/sq1/SLICE_146/ste2/sq1/mem_0_0_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40045 \ste2/sq1/mem_0_0_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\ste2/sq1/SLICE_146/ste2/sq1/mem_0_0_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ste2/sq1/FF_0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \ste2/sq1/SLICE_146_K0K1MUX ( 
    .D0(\ste2/sq1/SLICE_146/ste2/sq1/mem_0_0_1_H0 ), .Z(OFX0));
  selmux20046 \ste2/sq1/SLICE_146_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module selmux20046 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module ste2_SLICE_147 ( input D1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40047 \ste2/sum_3_0_550_i_a3_0_a2_0 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \ste2/sum_RNO[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \ste2/sum[0] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0055) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h152A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module ste2_SLICE_148 ( input B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40049 \ste2/ste_3[0] ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \ste2/window_count_3_0_a2[0] ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre \ste2/window_count[0] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_167 ( input D1, C1, B1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40051 \subMean1/un1_sum_3_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \subMean1/sum_pipe_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \subMean1/avg[10] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6996) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_168 ( input C1, A1, C0, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \subMean1/un2[1] ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \subMean1/un2[0] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_36 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_169 ( input B1, A1, C0, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \subMean1/un2[3] ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \subMean1/un2[2] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_38 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_37 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_170 ( input C1, B1, C0, B0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 \subMean1/un2[5] ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 \subMean1/un2[4] ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_40 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_39 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_171 ( input C1, A1, C0, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \subMean1/un2[7] ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \subMean1/un2[6] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_42 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_41 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_172 ( input D1, A1, C0, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 \subMean1/un2[9] ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \subMean1/un2[8] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_44 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_43 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_173 ( input D1, B1, D0, B0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40057 \subMean1/un2[11] ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \subMean1/un2[10] ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_46 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_45 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module subMean1_SLICE_174 ( input C1, A1, C0, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \subMean1/un2[13] ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \subMean1/un2[12] ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \subMean1/sum_pipe_48 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_47 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_175 ( input B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40054 \subMean1/un2[14] ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[12] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/sum_pipe_49 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean1_SLICE_176 ( input D0, B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40058 \subMean1/r1/pe_RNO ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \subMean1/avg[0] ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \subMean1/r1/pe ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module port1_i2s_rx_inst_SLICE_177 ( input A0, DI0, M1, CE, LSR, CLK, output 
    F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  lut40029 \port1/i2s_rx_inst/right_data_twos_compl_i_RNO[0] ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/d2_left_vld ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_twos_compl_i[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_178 ( input C1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40059 \zcr2/current_2_62_i_a2_23 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \zcr2/window_count_RNO[6] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \zcr2/window_count[6] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40061 \zcr2/current_RNO_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \zcr2/current_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \zcr2/current ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40063 \zcr2/un72_not_previous_62_i_20[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40064 \zcr2/un72_not_previous_62_i[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0005 \zcr2/not_previous ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_181 ( input D1, A1, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \zcr2/un3_window_count_1_axbxc1 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \zcr2/window_count_3_0_a2_0_a3_0_a2[0] ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/window_count[1] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \zcr2/window_count[0] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_182 ( input D1, C1, B1, A1, D0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \zcr2/window_count_RNO[3] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 \zcr2/un3_window_count_1_axbxc2 ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/window_count[3] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \zcr2/window_count[2] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7788) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_183 ( input D1, C1, B1, A1, D0, C0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \zcr2/un3_window_count_1_axbxc5 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40068 \zcr2/un3_window_count_1_axbxc4 ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/window_count[5] ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \zcr2/window_count[4] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_184 ( input C0, B0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40069 \zcr2/zcr_window[0]_4[15] ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/zcr_window[0][15] ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_222 ( input M0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40045 GND( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/zcr_window[44][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_223 ( input C1, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40032 \port1/i2s_rx_inst/right_data_twos_compl_i_RNI9TPC[15] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \horizontal_port/fifo_left_0_0_RNO ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[45][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_224 ( input B1, D0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40033 \horizontal_port/fifo_left_0_0_RNO_0 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \horizontal_port/fifo_left_0_0_RNO_1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[46][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_225 ( input B1, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40033 \horizontal_port/fifo_left_0_0_RNO_2 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \horizontal_port/fifo_left_0_0_RNO_3 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[47][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_226 ( input D1, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40042 \horizontal_port/fifo_left_0_0_RNO_4 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \horizontal_port/fifo_left_0_0_RNO_5 ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[48][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_227 ( input A1, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40029 \horizontal_port/fifo_left_0_0_RNO_6 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \horizontal_port/fifo_left_0_0_RNO_7 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[49][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_228 ( input A1, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40029 \horizontal_port/fifo_left_0_0_RNO_8 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \horizontal_port/fifo_left_0_0_RNO_9 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[4][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_229 ( input B1, D0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40033 \horizontal_port/fifo_left_0_0_RNO_10 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \horizontal_port/fifo_left_0_0_RNO_11 ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[50][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_230 ( input D1, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40042 \horizontal_port/fifo_left_0_0_RNO_12 ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \horizontal_port/fifo_left_0_0_RNO_13 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[51][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_231 ( input D1, C1, B1, A1, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40070 \f1/state_3_i_0_a2_0_3 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \vertical_port/fifo_right_1_0_RNO_5 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/zcr_window[52][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_232 ( input B1, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40033 \vertical_port/fifo_right_1_0_RNO_4 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \vertical_port/fifo_right_1_0_RNO_3 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[53][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_233 ( input D1, D0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40042 \vertical_port/fifo_right_1_0_RNO_2 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \vertical_port/fifo_right_1_0_RNO_1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[54][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_234 ( input A1, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40029 \vertical_port/fifo_right_1_0_RNO_0 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \vertical_port/fifo_right_1_0_RNO ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[55][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_235 ( input A1, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40029 \vertical_port/fifo_right_0_1_RNO_7 ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \vertical_port/fifo_right_0_1_RNO_6 ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[56][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_236 ( input B1, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40033 \vertical_port/fifo_right_0_1_RNO_5 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \vertical_port/fifo_right_0_1_RNO_4 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[57][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_237 ( input C1, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40032 \vertical_port/fifo_right_0_1_RNO_3 ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \vertical_port/fifo_right_0_1_RNO_2 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[58][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_238 ( input B1, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40033 \vertical_port/fifo_right_0_1_RNO_1 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \vertical_port/fifo_right_0_1_RNO_0 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[59][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_239 ( input D1, C1, A1, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40071 \zcr2/current_2_62_i_m2_6 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \subMean1/un2_subMean_out_s_15_0_RNO ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[5][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_240 ( input B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40072 \subMean1/un1_sum_74 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \subMean1/un1_sum_72 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[60][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_241 ( input C1, B1, D0, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40074 \subMean1/un1_sum_67 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \subMean1/un1_sum_62 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[61][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_242 ( input B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40049 \subMean1/un1_sum_57 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \subMean1/un1_sum_52 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[62][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_243 ( input D1, B1, C0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40076 \subMean1/un1_sum_47 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \subMean1/un1_sum_42 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \zcr2/zcr_window[63][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_244 ( input D1, A1, C0, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40078 \subMean1/un1_sum_37 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \subMean1/un1_sum_32 ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[6][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_245 ( input D1, B1, C0, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40076 \subMean1/un1_sum_27 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 \subMean1/un1_sum_22 ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \zcr2/zcr_window[7][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_246 ( input B1, A1, D0, C0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40073 \subMean1/un1_sum_17 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \subMean1/un1_sum_12 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[8][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_247 ( input B1, A1, C0, B0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40049 \subMean1/un1_sum_7 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \subMean1/avg_RNIO497[0] ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[9][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_current_2_62_i_m2_8_SLICE_248 ( input D1, C1, B1, D0, C0, B0, M0, 
    output OFX0 );
  wire   GNDI, 
         \zcr2/current_2_62_i_m2_8/SLICE_248/zcr2/current_2_62_i_m2_8/SLICE_248_K1_H1 
         , 
         \zcr2/current_2_62_i_m2_8/SLICE_248/zcr2/current_2_62_i_m2_8/GATE_H0 ;

  lut40081 \zcr2/current_2_62_i_m2_8/SLICE_248_K1 ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\zcr2/current_2_62_i_m2_8/SLICE_248/zcr2/current_2_62_i_m2_8/SLICE_248_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \zcr2/current_2_62_i_m2_8/GATE ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(\zcr2/current_2_62_i_m2_8/SLICE_248/zcr2/current_2_62_i_m2_8/GATE_H0 ));
  selmux20046 \zcr2/current_2_62_i_m2_8/SLICE_248_K0K1MUX ( 
    .D0(\zcr2/current_2_62_i_m2_8/SLICE_248/zcr2/current_2_62_i_m2_8/GATE_H0 ), 
    .D1(\zcr2/current_2_62_i_m2_8/SLICE_248/zcr2/current_2_62_i_m2_8/SLICE_248_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_current_2_62_i_o2_4_1_tz_SLICE_249 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, output OFX0 );
  wire   
         \zcr2/current_2_62_i_o2_4_1_tz/SLICE_249/zcr2/current_2_62_i_o2_4_1_tz/SLICE_249_K1_H1 
         , 
         \zcr2/current_2_62_i_o2_4_1_tz/SLICE_249/zcr2/current_2_62_i_o2_4_1_tz/GATE_H0 
         ;

  lut40083 \zcr2/current_2_62_i_o2_4_1_tz/SLICE_249_K1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), 
    .Z(\zcr2/current_2_62_i_o2_4_1_tz/SLICE_249/zcr2/current_2_62_i_o2_4_1_tz/SLICE_249_K1_H1 )
    );
  lut40084 \zcr2/current_2_62_i_o2_4_1_tz/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\zcr2/current_2_62_i_o2_4_1_tz/SLICE_249/zcr2/current_2_62_i_o2_4_1_tz/GATE_H0 )
    );
  selmux20046 \zcr2/current_2_62_i_o2_4_1_tz/SLICE_249_K0K1MUX ( 
    .D0(\zcr2/current_2_62_i_o2_4_1_tz/SLICE_249/zcr2/current_2_62_i_o2_4_1_tz/GATE_H0 )
    , 
    .D1(\zcr2/current_2_62_i_o2_4_1_tz/SLICE_249/zcr2/current_2_62_i_o2_4_1_tz/SLICE_249_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1103) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_current_2_62_i_o2_4_0_tz_SLICE_250 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, output OFX0 );
  wire   
         \zcr2/current_2_62_i_o2_4_0_tz/SLICE_250/zcr2/current_2_62_i_o2_4_0_tz/SLICE_250_K1_H1 
         , 
         \zcr2/current_2_62_i_o2_4_0_tz/SLICE_250/zcr2/current_2_62_i_o2_4_0_tz/GATE_H0 
         ;

  lut40085 \zcr2/current_2_62_i_o2_4_0_tz/SLICE_250_K1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), 
    .Z(\zcr2/current_2_62_i_o2_4_0_tz/SLICE_250/zcr2/current_2_62_i_o2_4_0_tz/SLICE_250_K1_H1 )
    );
  lut40086 \zcr2/current_2_62_i_o2_4_0_tz/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\zcr2/current_2_62_i_o2_4_0_tz/SLICE_250/zcr2/current_2_62_i_o2_4_0_tz/GATE_H0 )
    );
  selmux20046 \zcr2/current_2_62_i_o2_4_0_tz/SLICE_250_K0K1MUX ( 
    .D0(\zcr2/current_2_62_i_o2_4_0_tz/SLICE_250/zcr2/current_2_62_i_o2_4_0_tz/GATE_H0 )
    , 
    .D1(\zcr2/current_2_62_i_o2_4_0_tz/SLICE_250/zcr2/current_2_62_i_o2_4_0_tz/SLICE_250_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0035) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_251 ( input D1, A1, output OFX0, F1 );
  wire   GNDI, \SLICE_251/ste2/sq1/mem_0_0_0_H0 ;

  lut40087 wr_en2( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \ste2/sq1/mem_0_0_0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_251/ste2/sq1/mem_0_0_0_H0 ));
  selmux2 SLICE_251_K0K1MUX( .D0(\SLICE_251/ste2/sq1/mem_0_0_0_H0 ), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_252 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40089 \zcr2/current_2_62_i_a2_41 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 \zcr2/un72_not_previous_62_i_9_RNO[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h010B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40091 \zcr2/current_2_62_i_o2_1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \zcr2/current_2_62_i_a2_39 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0027) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_254 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 \zcr2/current_2_62_i_m2_17 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \zcr2/current_2_62_i_o2_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h038B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_255 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40095 \zcr2/current_2_62_i_m2_19 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \zcr2/current_2_62_i_o2 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5303) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_256 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40097 \ste2/sum_3_0_550_i_a3_0_a2_4 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40098 \ste2/sum_RNO_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40099 \zcr2/current_2_62_i_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 \zcr2/current_2_62_i_7_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_258 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40101 \zcr2/zcr_window[40]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40102 \zcr2/window_count_RNI69871_1[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_259 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40103 \zcr2/current_2_62_i_1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 \zcr2/window_count_RNIA4ET[0] ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_260 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40105 \zcr2/zcr_window[8]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40106 \zcr2/window_count_RNI25871_2[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_261 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40107 \zcr2/current_2_62_i_a2_11 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 \zcr2/window_count_RNI69871[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_262 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40101 \zcr2/zcr_window[24]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40109 \zcr2/window_count_RNI69871_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_263 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40110 \zcr2/zcr_window[11]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40111 \zcr2/window_count_RNI25871_0[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_264 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40112 \zcr2/un72_not_previous_62_i_a2_14[0] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \zcr2/window_count_RNI25871_1[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_265 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40113 \zcr2/zcr_window[23]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40108 \zcr2/window_count_RNI25871[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_266 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40114 \zcr2/current_2_62_i_a2_55 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 \zcr2/window_count_RNIAD871[5] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40116 \zcr2/un72_not_previous_62_i_6[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40117 \zcr2/un72_not_previous_62_i_6_RNO[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_268 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \zcr2/current_2_62_i_m2_3 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 \zcr2/current_2_62_i_1_RNO ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0005) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_269 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40120 \zcr2/zcr_window[9]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40121 \zcr2/window_count_RNIN31L[6] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_270 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40122 \zcr2/current_2_62_i_o2_5 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \zcr2/un72_not_previous_62_i_11_RNO[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_271 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40124 \zcr2/current_2_62_i_17 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40125 \zcr2/current_2_62_i_17_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_272 ( input C1, B1, D0, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40074 \zcr2/current_2_62_i_a2_24 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \zcr2/zcr_window[63]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[40][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_273 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40127 \zcr2/current_2_62_i_a2_50 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40128 \zcr2/zcr_window[17]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[13][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40129 \zcr2/current_2_62_i_a2_47 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 \zcr2/zcr_window[33]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[1][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_275 ( input D1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40087 \zcr2/current_2_62_i_o2_6 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40131 \zcr2/zcr_window[48]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[28][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_276 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40132 \zcr2/current_2_62_i_a2_27 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40133 \zcr2/zcr_window[18]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[14][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40134 \zcr2/current_2_62_i_a2_32 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40135 \zcr2/zcr_window[34]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[20][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_278 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40132 \zcr2/current_2_62_i_a2_45 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40136 \zcr2/zcr_window[54]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[32][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_279 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40137 \zcr2/current_2_62_i_a2_26 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40138 \zcr2/zcr_window[57]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[35][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_280 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40139 \zcr2/current_2_62_i_a2_49 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40140 \zcr2/zcr_window[58]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[36][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_281 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40141 \zcr2/current_2_62_i_o2_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40142 \zcr2/zcr_window[0]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40143 \zcr2/zcr_count_temp16_0_0_a2_i_RNISELN1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40144 \zcr2/window_count_RNIK3AV[6] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_283 ( input B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40145 \zcr2/un72_not_previous_62_i_a2_24[0] ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 \zcr2/zcr_window[60]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[39][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_284 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40147 \zcr2/un72_not_previous_62_i_a2_25[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40148 \zcr2/zcr_window[47]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[27][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_285 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40149 \zcr2/current_2_62_i_a2_30 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40150 \zcr2/zcr_window[53]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[31][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_286 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40151 \zcr2/un72_not_previous_62_i_18[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40152 \zcr2/un72_not_previous_62_i_18_RNO[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_287 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40153 \zcr2/un72_not_previous_62_i_17[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40154 \zcr2/un72_not_previous_62_i_17_RNO[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40155 \zcr2/current_2_62_i_18 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40156 \zcr2/current_2_62_i_18_RNO ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA2A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_289 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40157 \zcr2/un2_i_sys_rst_i_i_o2 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 \zcr2/current_2_62_i_o2_5_RNI5UOO ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5545) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_290 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40159 \zcr2/un72_not_previous_62_i_10[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40160 \zcr2/un72_not_previous_62_i_19[0] ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_291 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40161 \zcr2/current_2_62_i_10 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40162 \zcr2/current_2_62_i_19 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_292 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40163 \zcr2/current_2_62_i_a2_23_RNIVHNM ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40164 \zcr2/current_2_62_i_14 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_293 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40165 \zcr2/un72_not_previous_62_i_5[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40166 \zcr2/un72_not_previous_62_i_11[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_294 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40074 \zcr2/current_2_62_i_a2_8 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 \zcr2/current_2_62_i_11 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_295 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40168 \zcr2/current_2_62_i_o2_4 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40169 \zcr2/current_2_62_i_o2_4_4 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_296 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40170 \zcr2/un72_not_previous_62_i_a2_2[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40171 \zcr2/un72_not_previous_62_i_7[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_297 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40172 \zcr2/un72_not_previous_62_i_1[0] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40173 \zcr2/un72_not_previous_62_i_9[0] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_298 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 \zcr2/current_2_62_i_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 \zcr2/current_2_62_i_12 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_299 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40176 \zcr2/current_2_62_i_o2_6_RNIU5GL ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40177 \zcr2/current_2_62_i_o2_3 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_300 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 \zcr2/current_2_62_i_a2_17_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40179 \zcr2/un72_not_previous_62_i_2[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0305) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_301 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 \zcr2/current_2_62_i_a2_10_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40181 \zcr2/current_2_62_i_3 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0305) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_302 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40182 \zcr2/current_2_62_i_a2_16_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40183 \zcr2/current_2_62_i_5 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h001D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_303 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40184 \zcr2/current_2_62_i_a2_8_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40076 \zcr2/un72_not_previous_62_i_a2_8[0] ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1105) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_304 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40185 \zcr2/current_2_62_i_m2_11 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40186 \zcr2/current_2_62_i_a2_2 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_305 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40187 \zcr2/current_2_62_i_m2_12 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40188 \zcr2/un72_not_previous_62_i_a2_1[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module f1_SLICE_306 ( input B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40049 \f1/un1_counter19_i_a2 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40189 \f1/state_3_i_0_a2_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \f1/out ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_307 ( input D1, C1, B1, A1, D0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40190 \port1/o_ws_0_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40191 \div8/r_reg_RNIOPPB1[1] ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \zcr2/zcr_window[43][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_308 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40192 \port1/i2s_rx_inst/ws_i_RNI5U2R1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40193 \div8/r_reg_RNIOPPB1_0[1] ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_309 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40194 \zcr2/zcr_window[20]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40195 \zcr2/zcr_window[16]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[12][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAABA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_310 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40196 \zcr2/zcr_window[36]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40197 \zcr2/zcr_window[44]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[24][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_311 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40198 \zcr2/zcr_window[4]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40146 \zcr2/zcr_window[52]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[30][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_312 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40136 \zcr2/zcr_window[31]_RNO[15] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40133 \zcr2/zcr_window[19]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[15][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_313 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40199 \zcr2/zcr_window[39]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40200 \zcr2/zcr_window[55]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[33][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_314 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40201 \zcr2/zcr_window[27]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40202 \zcr2/zcr_window[59]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[37][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_315 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40203 \zcr2/zcr_window[13]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40204 \zcr2/zcr_window[15]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[11][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_316 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40205 \zcr2/zcr_window[14]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40206 \zcr2/zcr_window[12]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[10][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_317 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40207 \zcr2/zcr_window[42]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40208 \zcr2/zcr_window[46]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[26][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_318 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40207 \zcr2/zcr_window[26]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40208 \zcr2/zcr_window[30]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[18][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_319 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40209 \zcr2/zcr_window[1]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40210 \zcr2/zcr_window[3]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[22][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_320 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40203 \zcr2/zcr_window[21]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40211 \zcr2/zcr_window[5]_1_sqmuxa_i_0_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[38][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_321 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40113 \zcr2/zcr_window[25]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40212 \zcr2/zcr_window[41]_1_sqmuxa_i_0_0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[23][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_322 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40213 \zcr2/zcr_window[61]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40214 \zcr2/zcr_window[62]_1_sqmuxa_i_0_0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[3][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_323 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40215 \zcr2/zcr_window[49]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40216 \zcr2/zcr_window[50]_1_sqmuxa_i_0_0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \zcr2/zcr_window[29][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_324 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40217 \port1/i2s_rx_inst/ws_reg_i_RNID2EK1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40218 \port2/i2s_rx_inst/left_data_reg_i_cnv[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[12] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[11] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_325 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40219 \subMean1/un1_sum_64 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 \subMean1/un1_sum_68_0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[15] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9696) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_326 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40221 \subMean1/un1_sum_69 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \subMean1/un1_sum_73_0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9696) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_327 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40219 \subMean1/un1_sum_24 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 \subMean1/un1_sum_28_0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[15] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_328 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40223 \subMean1/un1_sum_54 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40224 \subMean1/un1_sum_58_0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[12] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[11] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9696) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_329 ( input D1, C1, B1, D0, C0, B0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40225 \subMean1/un1_sum_19 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40226 \subMean1/un1_sum_23_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[14] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[13] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC33C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_330 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40221 \subMean1/un1_sum_49 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \subMean1/un1_sum_53_0 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[10] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_331 ( input D1, C1, A1, D0, C0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40227 \subMean1/un1_sum_14 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40228 \subMean1/un1_sum_18_0 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[10] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA55A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_332 ( input D1, C1, B1, D0, C0, B0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40229 \subMean1/un1_sum_44 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \subMean1/un1_sum_48_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[9] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[8] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC33C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_333 ( input D1, B1, A1, D0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40230 \subMean1/un1_sum_9 ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40231 \subMean1/un1_sum_13_0 ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[9] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port1/i2s_rx_inst/right_data_reg_i[8] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9966) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_334 ( input D1, C1, A1, D0, C0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40232 \subMean1/un1_sum_39 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40233 \subMean1/un1_sum_43_0 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[7] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[6] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA55A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_335 ( input D1, C1, A1, D0, C0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40234 \subMean1/un1_sum_4 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40235 \subMean1/un1_sum_8_0 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[5] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[4] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA55A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_336 ( input D1, B1, A1, D0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40230 \subMean1/un1_sum_34 ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40231 \subMean1/un1_sum_38_0 ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[5] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[4] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_337 ( input D1, B1, A1, D0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40236 \subMean1/un1_sum_29 ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \subMean1/un1_sum_33_0 ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9966) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_338 ( input D1, C1, B1, D0, C0, B0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40238 \subMean1/un1_sum_59 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40239 \subMean1/un1_sum_63_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[14] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/right_data_reg_i[13] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC33C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_339 ( input D1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40240 \zcr2/un2_i_sys_rst_i ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40241 \zcr2/window_count_RNIN31L_0[6] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_340 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40196 \zcr2/zcr_window[38]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40197 \zcr2/zcr_window[28]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[16][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_341 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40242 \zcr2/zcr_window[22]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40202 \zcr2/zcr_window[45]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[25][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_342 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40243 \zcr2/zcr_window[37]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40146 \zcr2/zcr_window[56]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[34][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_343 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40140 \zcr2/zcr_window[29]_RNO[15] ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40135 \zcr2/zcr_window[35]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[21][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_344 ( input D1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40244 \zcr2/zcr_window[2]_1_sqmuxa_i_0_0_a2 ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40245 \zcr2/zcr_window[2]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[17][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40245 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_345 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40246 \zcr2/zcr_window[10]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40247 \zcr2/zcr_window[6]_1_sqmuxa_i_0_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[41][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40247 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_346 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40216 \zcr2/zcr_window[43]_1_sqmuxa_i_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40248 \zcr2/zcr_window[7]_1_sqmuxa_i_0_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[42][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCDCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_347 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40249 \zcr2/current_2_62_i_a2_13_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40250 \zcr2/zcr_window[32]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[19][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40249 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0123) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40250 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_348 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40251 \f1/counter_RNIM11L[6] ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40252 \zcr2/i_sys_rst_i ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40251 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40252 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_349 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40253 \zcr2/current_2_62_i_8 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40254 \zcr2/un72_not_previous_62_i_8[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40253 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40254 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_350 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40160 \zcr2/window_count_RNIT3GL[6] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40255 \zcr2/un72_not_previous_62_i_12[0] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40255 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_351 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40256 \zcr2/current_2_62_i_a2_3_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40257 \zcr2/current_2_62_i_a2_12_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0407) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40257 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0047) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_352 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40258 \zcr2/current_2_62_i_a2_18_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40259 \zcr2/current_2_62_i_a2_15_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h001B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0415) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_353 ( input C1, A1, D0, C0, M1, M0, CE, LSR, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40036 \subMean1/un1_sum_0 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \subMean1/un1_sum_2 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[12] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \port2/i2s_rx_inst/left_data_reg_i[11] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr2_SLICE_354 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40260 \zcr2/zcr_count_temp16_0_0_a2_i ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40209 \zcr2/zcr_window[51]_RNO[15] ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \zcr2/zcr_window[2][15] ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_355 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40261 \zcr2/current_2_62_i_a2_43 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40262 \zcr2/current_2_62_i_o2_3_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40261 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h028A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40262 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module zcr2_SLICE_356 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40263 \zcr2/un3_window_count_1_ac0_3 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40264 \zcr2/current_2_62_i_a2_54 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40263 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40264 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module o_sck ( input PADDO, output o_sck );
  wire   GNDI;

  xo2iobuf o_sck_pad( .I(PADDO), .T(GNDI), .PAD(o_sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module rst ( output PADDI, input rst );

  xo2iobuf0265 rst_pad( .Z(PADDI), .PAD(rst));

  specify
    (rst => PADDI) = (0:0:0,0:0:0);
    $width (posedge rst, 0:0:0);
    $width (negedge rst, 0:0:0);
  endspecify

endmodule

module xo2iobuf0265 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module o_right_vld2 ( input PADDO, output o_right_vld2 );
  wire   GNDI;

  xo2iobuf o_right_vld2_pad( .I(PADDO), .T(GNDI), .PAD(o_right_vld2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_right_vld2) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_vld2 ( input PADDO, output o_left_vld2 );
  wire   GNDI;

  xo2iobuf o_left_vld2_pad( .I(PADDO), .T(GNDI), .PAD(o_left_vld2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_left_vld2) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_15_ ( input PADDO, output orightdata215 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[15] ( .I(PADDO), .T(GNDI), .PAD(orightdata215));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata215) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_14_ ( input PADDO, output orightdata214 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[14] ( .I(PADDO), .T(GNDI), .PAD(orightdata214));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata214) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_13_ ( input PADDO, output orightdata213 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[13] ( .I(PADDO), .T(GNDI), .PAD(orightdata213));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata213) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_12_ ( input PADDO, output orightdata212 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[12] ( .I(PADDO), .T(GNDI), .PAD(orightdata212));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata212) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_11_ ( input PADDO, output orightdata211 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[11] ( .I(PADDO), .T(GNDI), .PAD(orightdata211));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata211) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_10_ ( input PADDO, output orightdata210 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[10] ( .I(PADDO), .T(GNDI), .PAD(orightdata210));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata210) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_9_ ( input PADDO, output orightdata29 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[9] ( .I(PADDO), .T(GNDI), .PAD(orightdata29));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata29) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_8_ ( input PADDO, output orightdata28 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[8] ( .I(PADDO), .T(GNDI), .PAD(orightdata28));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata28) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_7_ ( input PADDO, output orightdata27 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[7] ( .I(PADDO), .T(GNDI), .PAD(orightdata27));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata27) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_6_ ( input PADDO, output orightdata26 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[6] ( .I(PADDO), .T(GNDI), .PAD(orightdata26));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata26) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_5_ ( input PADDO, output orightdata25 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[5] ( .I(PADDO), .T(GNDI), .PAD(orightdata25));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata25) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_4_ ( input PADDO, output orightdata24 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[4] ( .I(PADDO), .T(GNDI), .PAD(orightdata24));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata24) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_3_ ( input PADDO, output orightdata23 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[3] ( .I(PADDO), .T(GNDI), .PAD(orightdata23));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata23) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_2_ ( input PADDO, output orightdata22 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[2] ( .I(PADDO), .T(GNDI), .PAD(orightdata22));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata22) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_1_ ( input PADDO, output orightdata21 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[1] ( .I(PADDO), .T(GNDI), .PAD(orightdata21));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata21) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_right_data2_0_ ( input PADDO, output orightdata20 );
  wire   GNDI;

  xo2iobuf \o_right_data2_pad[0] ( .I(PADDO), .T(GNDI), .PAD(orightdata20));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => orightdata20) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_15_ ( input PADDO, output oleftdata215 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[15] ( .I(PADDO), .T(GNDI), .PAD(oleftdata215));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata215) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_14_ ( input PADDO, output oleftdata214 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[14] ( .I(PADDO), .T(GNDI), .PAD(oleftdata214));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata214) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_13_ ( input PADDO, output oleftdata213 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[13] ( .I(PADDO), .T(GNDI), .PAD(oleftdata213));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata213) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_12_ ( input PADDO, output oleftdata212 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[12] ( .I(PADDO), .T(GNDI), .PAD(oleftdata212));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata212) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_11_ ( input PADDO, output oleftdata211 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[11] ( .I(PADDO), .T(GNDI), .PAD(oleftdata211));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata211) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_10_ ( input PADDO, output oleftdata210 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[10] ( .I(PADDO), .T(GNDI), .PAD(oleftdata210));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata210) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_9_ ( input PADDO, output oleftdata29 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[9] ( .I(PADDO), .T(GNDI), .PAD(oleftdata29));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata29) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_8_ ( input PADDO, output oleftdata28 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[8] ( .I(PADDO), .T(GNDI), .PAD(oleftdata28));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata28) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_7_ ( input PADDO, output oleftdata27 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[7] ( .I(PADDO), .T(GNDI), .PAD(oleftdata27));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata27) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_6_ ( input PADDO, output oleftdata26 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[6] ( .I(PADDO), .T(GNDI), .PAD(oleftdata26));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata26) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_5_ ( input PADDO, output oleftdata25 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[5] ( .I(PADDO), .T(GNDI), .PAD(oleftdata25));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata25) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_4_ ( input PADDO, output oleftdata24 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[4] ( .I(PADDO), .T(GNDI), .PAD(oleftdata24));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata24) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_3_ ( input PADDO, output oleftdata23 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[3] ( .I(PADDO), .T(GNDI), .PAD(oleftdata23));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata23) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_2_ ( input PADDO, output oleftdata22 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[2] ( .I(PADDO), .T(GNDI), .PAD(oleftdata22));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata22) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_1_ ( input PADDO, output oleftdata21 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[1] ( .I(PADDO), .T(GNDI), .PAD(oleftdata21));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata21) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_left_data2_0_ ( input PADDO, output oleftdata20 );
  wire   GNDI;

  xo2iobuf \o_left_data2_pad[0] ( .I(PADDO), .T(GNDI), .PAD(oleftdata20));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oleftdata20) = (0:0:0,0:0:0);
  endspecify

endmodule

module beam_forming_valid ( input PADDO, output beam_forming_valid );
  wire   GNDI;

  xo2iobuf beam_forming_valid_pad( .I(PADDO), .T(GNDI), 
    .PAD(beam_forming_valid));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => beam_forming_valid) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_7_ ( input PADDO, output ledpattern7 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[7] ( .I(PADDO), .T(GNDI), .PAD(ledpattern7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern7) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_6_ ( input PADDO, output ledpattern6 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[6] ( .I(PADDO), .T(GNDI), .PAD(ledpattern6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern6) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_5_ ( input PADDO, output ledpattern5 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[5] ( .I(PADDO), .T(GNDI), .PAD(ledpattern5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern5) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_4_ ( input PADDO, output ledpattern4 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[4] ( .I(PADDO), .T(GNDI), .PAD(ledpattern4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern4) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_3_ ( input PADDO, output ledpattern3 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[3] ( .I(PADDO), .T(GNDI), .PAD(ledpattern3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern3) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_2_ ( input PADDO, output ledpattern2 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[2] ( .I(PADDO), .T(GNDI), .PAD(ledpattern2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern2) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_1_ ( input PADDO, output ledpattern1 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[1] ( .I(PADDO), .T(GNDI), .PAD(ledpattern1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern1) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_pattern_0_ ( input PADDO, output ledpattern0 );
  wire   GNDI;

  xo2iobuf \led_pattern_pad[0] ( .I(PADDO), .T(GNDI), .PAD(ledpattern0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledpattern0) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_valid ( input PADDO, output subMean_left_valid );
  wire   GNDI;

  xo2iobuf subMean_left_valid_pad( .I(PADDO), .T(GNDI), 
    .PAD(subMean_left_valid));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => subMean_left_valid) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_15_ ( input IOLDO, output subMeanleftout15 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[15] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout15));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout15) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_15__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[15] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mfflsre ( input D0, SP, CK, LSR, output Q );

  FD1P3DX INST01( .D(D0), .SP(SP), .CK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module subMean_left_out_14_ ( input IOLDO, output subMeanleftout14 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[14] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout14));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout14) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_14__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[14] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_13_ ( input IOLDO, output subMeanleftout13 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[13] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout13));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout13) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_13__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[13] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_12_ ( input IOLDO, output subMeanleftout12 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[12] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout12) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_12__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[12] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_11_ ( input IOLDO, output subMeanleftout11 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[11] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout11) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_11__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[11] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_10_ ( input IOLDO, output subMeanleftout10 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[10] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout10) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_10__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[10] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_9_ ( input IOLDO, output subMeanleftout9 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[9] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout9) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_9__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[9] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_8_ ( input IOLDO, output subMeanleftout8 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[8] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout8) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_8__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[8] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_7_ ( input IOLDO, output subMeanleftout7 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[7] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout7) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_7__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[7] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_6_ ( input IOLDO, output subMeanleftout6 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[6] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout6) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_6__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[6] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_5_ ( input IOLDO, output subMeanleftout5 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[5] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout5) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_5__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[5] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_4_ ( input IOLDO, output subMeanleftout4 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[4] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout4) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_4__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[4] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_3_ ( input IOLDO, output subMeanleftout3 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[3] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout3) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_3__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[3] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_2_ ( input IOLDO, output subMeanleftout2 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[2] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout2) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_2__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[2] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_1_ ( input IOLDO, output subMeanleftout1 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[1] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout1) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_1__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[1] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module subMean_left_out_0_ ( input IOLDO, output subMeanleftout0 );
  wire   GNDI;

  xo2iobuf \subMean_left_out_pad[0] ( .I(IOLDO), .T(GNDI), 
    .PAD(subMeanleftout0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => subMeanleftout0) = (0:0:0,0:0:0);
  endspecify

endmodule

module subMean_left_out_0__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre \subMean1_subMean_outio[0] ( .D0(OPOS_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ste_left_valid ( input IOLDO, output ste_left_valid );
  wire   GNDI;

  xo2iobuf ste_left_valid_pad( .I(IOLDO), .T(GNDI), .PAD(ste_left_valid));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => ste_left_valid) = (0:0:0,0:0:0);
  endspecify

endmodule

module ste_left_valid_MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 ste2_ste_validio( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mfflsre0266 ( input D0, SP, CK, LSR, output Q );

  FD1P3DX INST01( .D(D0), .SP(SP), .CK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ste_left ( input IOLDO, output ste_left );
  wire   GNDI;

  xo2iobuf ste_left_pad( .I(IOLDO), .T(GNDI), .PAD(ste_left));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => ste_left) = (0:0:0,0:0:0);
  endspecify

endmodule

module ste_left_MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \ste2_steio[0] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_valid_left ( input IOLDO, output zcr_valid_left );
  wire   GNDI;

  xo2iobuf zcr_valid_left_pad( .I(IOLDO), .T(GNDI), .PAD(zcr_valid_left));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcr_valid_left) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_valid_left_MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 zcr2_zcr_validio( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_count_left_5_ ( input IOLDO, output zcrcountleft5 );
  wire   GNDI;

  xo2iobuf \zcr_count_left_pad[5] ( .I(IOLDO), .T(GNDI), .PAD(zcrcountleft5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcrcountleft5) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_count_left_5__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \zcr2_zcr_countio[5] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_count_left_4_ ( input IOLDO, output zcrcountleft4 );
  wire   GNDI;

  xo2iobuf \zcr_count_left_pad[4] ( .I(IOLDO), .T(GNDI), .PAD(zcrcountleft4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcrcountleft4) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_count_left_4__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \zcr2_zcr_countio[4] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_count_left_3_ ( input IOLDO, output zcrcountleft3 );
  wire   GNDI;

  xo2iobuf \zcr_count_left_pad[3] ( .I(IOLDO), .T(GNDI), .PAD(zcrcountleft3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcrcountleft3) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_count_left_3__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \zcr2_zcr_countio[3] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_count_left_2_ ( input IOLDO, output zcrcountleft2 );
  wire   GNDI;

  xo2iobuf \zcr_count_left_pad[2] ( .I(IOLDO), .T(GNDI), .PAD(zcrcountleft2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcrcountleft2) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_count_left_2__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \zcr2_zcr_countio[2] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_count_left_1_ ( input IOLDO, output zcrcountleft1 );
  wire   GNDI;

  xo2iobuf \zcr_count_left_pad[1] ( .I(IOLDO), .T(GNDI), .PAD(zcrcountleft1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcrcountleft1) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_count_left_1__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \zcr2_zcr_countio[1] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module zcr_count_left_0_ ( input IOLDO, output zcrcountleft0 );
  wire   GNDI;

  xo2iobuf \zcr_count_left_pad[0] ( .I(IOLDO), .T(GNDI), .PAD(zcrcountleft0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => zcrcountleft0) = (0:0:0,0:0:0);
  endspecify

endmodule

module zcr_count_left_0__MGIOL ( output IOLDO, input OPOS, CE, CLK );
  wire   GNDI, OPOS_dly, CLK_dly, CE_dly;

  mfflsre0266 \zcr2_zcr_countio[0] ( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(IOLDO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vertical_out_15_ ( input PADDO, output verticalout15 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[15] ( .I(PADDO), .T(GNDI), .PAD(verticalout15));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout15) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_14_ ( input PADDO, output verticalout14 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[14] ( .I(PADDO), .T(GNDI), .PAD(verticalout14));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout14) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_13_ ( input PADDO, output verticalout13 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[13] ( .I(PADDO), .T(GNDI), .PAD(verticalout13));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout13) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_12_ ( input PADDO, output verticalout12 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[12] ( .I(PADDO), .T(GNDI), .PAD(verticalout12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout12) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_11_ ( input PADDO, output verticalout11 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[11] ( .I(PADDO), .T(GNDI), .PAD(verticalout11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout11) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_10_ ( input PADDO, output verticalout10 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[10] ( .I(PADDO), .T(GNDI), .PAD(verticalout10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout10) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_9_ ( input PADDO, output verticalout9 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[9] ( .I(PADDO), .T(GNDI), .PAD(verticalout9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout9) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_8_ ( input PADDO, output verticalout8 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[8] ( .I(PADDO), .T(GNDI), .PAD(verticalout8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout8) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_7_ ( input PADDO, output verticalout7 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[7] ( .I(PADDO), .T(GNDI), .PAD(verticalout7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout7) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_6_ ( input PADDO, output verticalout6 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[6] ( .I(PADDO), .T(GNDI), .PAD(verticalout6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout6) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_5_ ( input PADDO, output verticalout5 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[5] ( .I(PADDO), .T(GNDI), .PAD(verticalout5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout5) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_4_ ( input PADDO, output verticalout4 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[4] ( .I(PADDO), .T(GNDI), .PAD(verticalout4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout4) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_3_ ( input PADDO, output verticalout3 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[3] ( .I(PADDO), .T(GNDI), .PAD(verticalout3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout3) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_2_ ( input PADDO, output verticalout2 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[2] ( .I(PADDO), .T(GNDI), .PAD(verticalout2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout2) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_1_ ( input PADDO, output verticalout1 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[1] ( .I(PADDO), .T(GNDI), .PAD(verticalout1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vertical_out_0_ ( input PADDO, output verticalout0 );
  wire   GNDI;

  xo2iobuf \vertical_out_pad[0] ( .I(PADDO), .T(GNDI), .PAD(verticalout0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => verticalout0) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_ws2 ( input PADDO, output o_ws2 );
  wire   GNDI;

  xo2iobuf o_ws2_pad( .I(PADDO), .T(GNDI), .PAD(o_ws2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_ws2) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_sd2 ( output PADDI, input i_sd2 );

  xo2iobuf0265 i_sd2_pad( .Z(PADDI), .PAD(i_sd2));

  specify
    (i_sd2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge i_sd2, 0:0:0);
    $width (negedge i_sd2, 0:0:0);
  endspecify

endmodule

module i_sd2_MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre port2_i2s_rx_inst_sd_iio( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(IN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module smuxlregsre ( input D0, SP, CK, LSR, output Q );

  IFS1P3DX INST01( .D(D0), .SP(SP), .SCLK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module mclk ( input PADDO, output mclk );
  wire   GNDI;

  xo2iobuf mclk_pad( .I(PADDO), .T(GNDI), .PAD(mclk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => mclk) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_15_ ( input PADDO, output horizontalout15 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[15] ( .I(PADDO), .T(GNDI), 
    .PAD(horizontalout15));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout15) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_14_ ( input PADDO, output horizontalout14 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[14] ( .I(PADDO), .T(GNDI), 
    .PAD(horizontalout14));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout14) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_13_ ( input PADDO, output horizontalout13 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[13] ( .I(PADDO), .T(GNDI), 
    .PAD(horizontalout13));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout13) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_12_ ( input PADDO, output horizontalout12 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[12] ( .I(PADDO), .T(GNDI), 
    .PAD(horizontalout12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout12) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_11_ ( input PADDO, output horizontalout11 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[11] ( .I(PADDO), .T(GNDI), 
    .PAD(horizontalout11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout11) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_10_ ( input PADDO, output horizontalout10 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[10] ( .I(PADDO), .T(GNDI), 
    .PAD(horizontalout10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout10) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_9_ ( input PADDO, output horizontalout9 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[9] ( .I(PADDO), .T(GNDI), .PAD(horizontalout9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout9) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_8_ ( input PADDO, output horizontalout8 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[8] ( .I(PADDO), .T(GNDI), .PAD(horizontalout8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout8) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_7_ ( input PADDO, output horizontalout7 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[7] ( .I(PADDO), .T(GNDI), .PAD(horizontalout7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout7) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_6_ ( input PADDO, output horizontalout6 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[6] ( .I(PADDO), .T(GNDI), .PAD(horizontalout6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout6) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_5_ ( input PADDO, output horizontalout5 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[5] ( .I(PADDO), .T(GNDI), .PAD(horizontalout5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout5) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_4_ ( input PADDO, output horizontalout4 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[4] ( .I(PADDO), .T(GNDI), .PAD(horizontalout4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout4) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_3_ ( input PADDO, output horizontalout3 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[3] ( .I(PADDO), .T(GNDI), .PAD(horizontalout3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout3) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_2_ ( input PADDO, output horizontalout2 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[2] ( .I(PADDO), .T(GNDI), .PAD(horizontalout2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout2) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_1_ ( input PADDO, output horizontalout1 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[1] ( .I(PADDO), .T(GNDI), .PAD(horizontalout1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout1) = (0:0:0,0:0:0);
  endspecify

endmodule

module horizontal_out_0_ ( input PADDO, output horizontalout0 );
  wire   GNDI;

  xo2iobuf \horizontal_out_pad[0] ( .I(PADDO), .T(GNDI), .PAD(horizontalout0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => horizontalout0) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_ws ( input PADDO, output o_ws );
  wire   GNDI;

  xo2iobuf o_ws_pad( .I(PADDO), .T(GNDI), .PAD(o_ws));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_ws) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_sd ( output PADDI, input i_sd );

  xo2iobuf0265 i_sd_pad( .Z(PADDI), .PAD(i_sd));

  specify
    (i_sd => PADDI) = (0:0:0,0:0:0);
    $width (posedge i_sd, 0:0:0);
    $width (negedge i_sd, 0:0:0);
  endspecify

endmodule

module i_sd_MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre port1_i2s_rx_inst_sd_iio( .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(IN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module OSCH_inst ( output OSC );
  wire   GNDI;

  OSCH_B OSCH_inst_OSCH( .STDBY(GNDI), .OSC(OSC), .SEDSTDBY());
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module OSCH_B ( input STDBY, output OSC, SEDSTDBY );

  OSCH INST10( .STDBY(STDBY), .OSC(OSC), .SEDSTDBY(SEDSTDBY));
  defparam INST10.NOM_FREQ = "16.63";
endmodule

module subMean1_f1_fifo_submean_0_0 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, output DOA8, DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, 
    DOA0, input RSTA, CLKA, CSA2, output FF, EF, input CSB2, CLKB, OCEB, CEB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, input DIB0, DIB1, DIB2, DIB3, 
    DIB4, DIB5 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, RSTA_dly, CSA2_dly, 
         CSB2_dly, CLKB_dly, OCEB_dly, CEB_dly, DIB0_dly, DIB1_dly, DIB2_dly, 
         DIB3_dly, DIB4_dly, DIB5_dly;

  FIFO8KB_B \subMean1/f1/fifo_submean_0_0_FIFO8KB ( .DI0(DIA0_dly), 
    .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), .DI4(DIA4_dly), 
    .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(DIA7_dly), .DI8(DIA8_dly), 
    .DI9(DIB0_dly), .DI10(DIB1_dly), .DI11(DIB2_dly), .DI12(DIB3_dly), 
    .DI13(DIB4_dly), .DI14(DIB5_dly), .DI15(GNDI), .DI16(GNDI), .DI17(GNDI), 
    .FULLI(CSA2_dly), .CSW0(VCCI), .CSW1(VCCI), .EMPTYI(CSB2_dly), .CSR0(VCCI), 
    .CSR1(VCCI), .WE(VCCI), .RE(CEB_dly), .ORE(OCEB_dly), .CLKW(CLKA_dly), 
    .CLKR(CLKB_dly), .RST(RSTA_dly), .RPRST(GNDI), .DO0(DOB0), .DO1(DOB1), 
    .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), .DO6(), .DO7(), .DO8(), 
    .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), .DO12(DOA3), .DO13(DOA4), 
    .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), .DO17(DOA8), .EF(EF), .AEF(), 
    .AFF(), .FF(FF));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => FF) = (0:0:0,0:0:0);
    (RSTA => EF) = (0:0:0,0:0:0);
    (CLKA => FF) = (0:0:0,0:0:0);
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => EF) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $setuphold (posedge CLKB, OCEB, 0:0:0, 0:0:0,,,, CLKB_dly, OCEB_dly);
    $setuphold (posedge CLKB, CEB, 0:0:0, 0:0:0,,,, CLKB_dly, CEB_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module FIFO8KB_B ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b00000010100000";
  defparam INST10.AEPOINTER1 = "0b00000010110000";
  defparam INST10.AFPOINTER = "0b00000010100000";
  defparam INST10.AFPOINTER1 = "0b00000010010000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.FULLPOINTER = "0b00000100000000";
  defparam INST10.FULLPOINTER1 = "0b00000011110000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "OUTREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module vertical_port_fifo_right_1_0 ( input DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, CEA, RSTA, CLKA, CSA2, CSB2, CLKB, output DOB0, DOB1, DOB2, DOB3, 
    DOB4, DOB5, DOB6 );
  wire   GNDI, VCCI, DIA6_dly, CLKA_dly, DIA5_dly, DIA4_dly, DIA3_dly, 
         DIA2_dly, DIA1_dly, DIA0_dly, CEA_dly, RSTA_dly, CSA2_dly, CSB2_dly, 
         CLKB_dly;

  FIFO8KB0267 \vertical_port/fifo_right_1_0_FIFO8KB ( .DI0(DIA0_dly), 
    .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), .DI4(DIA4_dly), 
    .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(GNDI), .DI8(GNDI), .DI9(GNDI), 
    .DI10(GNDI), .DI11(GNDI), .DI12(GNDI), .DI13(GNDI), .DI14(GNDI), 
    .DI15(GNDI), .DI16(GNDI), .DI17(GNDI), .FULLI(CSA2_dly), .CSW0(VCCI), 
    .CSW1(VCCI), .EMPTYI(CSB2_dly), .CSR0(VCCI), .CSR1(VCCI), .WE(CEA_dly), 
    .RE(VCCI), .ORE(VCCI), .CLKW(CLKA_dly), .CLKR(CLKB_dly), .RST(RSTA_dly), 
    .RPRST(GNDI), .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), 
    .DO5(DOB5), .DO6(DOB6), .DO7(), .DO8(), .DO9(), .DO10(), .DO11(), .DO12(), 
    .DO13(), .DO14(), .DO15(), .DO16(), .DO17(), .EF(), .AEF(), .AFF(), .FF());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (RSTA => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module FIFO8KB0267 ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b11111111111000";
  defparam INST10.AEPOINTER1 = "0b00000000000000";
  defparam INST10.AFPOINTER = "0b11111111111000";
  defparam INST10.AFPOINTER1 = "0b00000000000000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 9;
  defparam INST10.DATA_WIDTH_W = 9;
  defparam INST10.FULLPOINTER = "0b11111111111000";
  defparam INST10.FULLPOINTER1 = "0b00000000000000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module vertical_port_fifo_right_0_1 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, CEA, RSTA, CLKA, CSA2, output FF, EF, input CSB2, CLKB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, CEA_dly, RSTA_dly, 
         CSA2_dly, CSB2_dly, CLKB_dly;

  FIFO8KB0268 \vertical_port/fifo_right_0_1_FIFO8KB ( .DI0(DIA0_dly), 
    .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), .DI4(DIA4_dly), 
    .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(GNDI), 
    .DI10(GNDI), .DI11(GNDI), .DI12(GNDI), .DI13(GNDI), .DI14(GNDI), 
    .DI15(GNDI), .DI16(GNDI), .DI17(GNDI), .FULLI(CSA2_dly), .CSW0(VCCI), 
    .CSW1(VCCI), .EMPTYI(CSB2_dly), .CSR0(VCCI), .CSR1(VCCI), .WE(CEA_dly), 
    .RE(VCCI), .ORE(VCCI), .CLKW(CLKA_dly), .CLKR(CLKB_dly), .RST(RSTA_dly), 
    .RPRST(GNDI), .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), 
    .DO5(DOB5), .DO6(DOB6), .DO7(DOB7), .DO8(DOB8), .DO9(), .DO10(), .DO11(), 
    .DO12(), .DO13(), .DO14(), .DO15(), .DO16(), .DO17(), .EF(EF), .AEF(), 
    .AFF(), .FF(FF));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => FF) = (0:0:0,0:0:0);
    (RSTA => EF) = (0:0:0,0:0:0);
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (RSTA => DOB6) = (0:0:0,0:0:0);
    (RSTA => DOB7) = (0:0:0,0:0:0);
    (RSTA => DOB8) = (0:0:0,0:0:0);
    (CLKA => FF) = (0:0:0,0:0:0);
    (CLKB => EF) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    (CLKB => DOB8) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module FIFO8KB0268 ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b00000001010000";
  defparam INST10.AEPOINTER1 = "0b00000001011000";
  defparam INST10.AFPOINTER = "0b00111111100000";
  defparam INST10.AFPOINTER1 = "0b00111111011000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 9;
  defparam INST10.DATA_WIDTH_W = 9;
  defparam INST10.FULLPOINTER = "0b10000000000000";
  defparam INST10.FULLPOINTER1 = "0b01111111111000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module horizontal_port_fifo_left_0_0 ( input DIA8, DIA7, DIA6, DIA5, DIA4, 
    DIA3, DIA2, DIA1, DIA0, output DOA8, DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, 
    DOA1, DOA0, input CEA, RSTA, CLKA, CSA2, output AF, FF, EF, input CSB2, 
    CLKB, OCEB, CEB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input 
    DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, CEA_dly, RSTA_dly, 
         CSA2_dly, CSB2_dly, CLKB_dly, OCEB_dly, CEB_dly, DIB0_dly, DIB1_dly, 
         DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  FIFO8KB0269 \horizontal_port/fifo_left_0_0_FIFO8KB ( .DI0(DIA0_dly), 
    .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), .DI4(DIA4_dly), 
    .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(DIA7_dly), .DI8(DIA8_dly), 
    .DI9(DIB0_dly), .DI10(DIB1_dly), .DI11(DIB2_dly), .DI12(DIB3_dly), 
    .DI13(DIB4_dly), .DI14(DIB5_dly), .DI15(DIB6_dly), .DI16(GNDI), 
    .DI17(GNDI), .FULLI(CSA2_dly), .CSW0(VCCI), .CSW1(VCCI), .EMPTYI(CSB2_dly), 
    .CSR0(VCCI), .CSR1(VCCI), .WE(CEA_dly), .RE(CEB_dly), .ORE(OCEB_dly), 
    .CLKW(CLKA_dly), .CLKR(CLKB_dly), .RST(RSTA_dly), .RPRST(GNDI), .DO0(DOB0), 
    .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), .DO6(DOB6), 
    .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), .DO12(DOA3), 
    .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), .DO17(DOA8), .EF(EF), 
    .AEF(), .AFF(AF), .FF(FF));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA8) = (0:0:0,0:0:0);
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (RSTA => AF) = (0:0:0,0:0:0);
    (RSTA => FF) = (0:0:0,0:0:0);
    (RSTA => EF) = (0:0:0,0:0:0);
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (RSTA => DOB6) = (0:0:0,0:0:0);
    (CLKA => AF) = (0:0:0,0:0:0);
    (CLKA => FF) = (0:0:0,0:0:0);
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => EF) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $setuphold (posedge CLKB, OCEB, 0:0:0, 0:0:0,,,, CLKB_dly, OCEB_dly);
    $setuphold (posedge CLKB, CEB, 0:0:0, 0:0:0,,,, CLKB_dly, CEB_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module FIFO8KB0269 ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b00000010100000";
  defparam INST10.AEPOINTER1 = "0b00000010110000";
  defparam INST10.AFPOINTER = "0b00010000000000";
  defparam INST10.AFPOINTER1 = "0b00001111110000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.FULLPOINTER = "0b00100000000000";
  defparam INST10.FULLPOINTER1 = "0b00011111110000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module my_pll_PLLInst_0 ( input CLKI, CLKFB, RST, output LOCK, CLKOS, CLKOP );
  wire   GNDI;

  EHXPLLJ_B \my_pll/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(RST), .RESETM(GNDI), 
    .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), .ENCLKOS(GNDI), 
    .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), .PLLRST(GNDI), 
    .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), .PLLDATI6(GNDI), 
    .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), .PLLDATI2(GNDI), 
    .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), .PLLADDR3(GNDI), 
    .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), .CLKOP(CLKOP), 
    .CLKOS(CLKOS), .CLKOS2(), .CLKOS3(), .LOCK(LOCK), .INTLOCK(), .REFCLK(), 
    .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), .PLLDATO4(), 
    .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOS) = (0:0:0,0:0:0);
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOS) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 2;
  defparam INST10.CLKI_DIV = 1;
  defparam INST10.CLKOP_CPHASE = 14;
  defparam INST10.CLKOP_DIV = 15;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 119;
  defparam INST10.CLKOS_DIV = 120;
  defparam INST10.CLKOS_ENABLE = "ENABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "RISING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "ENABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  INV INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
